// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/mattermost/mattermost-server/mmproto/model.proto

package mmproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import types "github.com/gogo/protobuf/types"

import time "time"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

import github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AnalyticsSettings struct {
	MaxUsersForStatistics int      `protobuf:"varint,1,opt,name=max_users_for_statistics,json=maxUsersForStatistics,proto3,casttype=int" json:"max_users_for_statistics,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *AnalyticsSettings) Reset()         { *m = AnalyticsSettings{} }
func (m *AnalyticsSettings) String() string { return proto.CompactTextString(m) }
func (*AnalyticsSettings) ProtoMessage()    {}
func (*AnalyticsSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{0}
}
func (m *AnalyticsSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AnalyticsSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AnalyticsSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AnalyticsSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyticsSettings.Merge(dst, src)
}
func (m *AnalyticsSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *AnalyticsSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyticsSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyticsSettings proto.InternalMessageInfo

type AnnouncementSettings struct {
	EnableBanner         bool     `protobuf:"varint,1,opt,name=enable_banner,json=enableBanner,proto3" json:"enable_banner,omitempty"`
	BannerText           string   `protobuf:"bytes,2,opt,name=banner_text,json=bannerText,proto3" json:"banner_text,omitempty"`
	BannerColor          string   `protobuf:"bytes,3,opt,name=banner_color,json=bannerColor,proto3" json:"banner_color,omitempty"`
	BannerTextColor      string   `protobuf:"bytes,4,opt,name=banner_text_color,json=bannerTextColor,proto3" json:"banner_text_color,omitempty"`
	AllowBannerDismissal bool     `protobuf:"varint,5,opt,name=allow_banner_dismissal,json=allowBannerDismissal,proto3" json:"allow_banner_dismissal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnouncementSettings) Reset()         { *m = AnnouncementSettings{} }
func (m *AnnouncementSettings) String() string { return proto.CompactTextString(m) }
func (*AnnouncementSettings) ProtoMessage()    {}
func (*AnnouncementSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{1}
}
func (m *AnnouncementSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AnnouncementSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AnnouncementSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AnnouncementSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnouncementSettings.Merge(dst, src)
}
func (m *AnnouncementSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *AnnouncementSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnouncementSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AnnouncementSettings proto.InternalMessageInfo

type AppError struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DetailedError        string   `protobuf:"bytes,3,opt,name=detailed_error,json=detailedError,proto3" json:"detailed_error,omitempty"`
	RequestId            string   `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	StatusCode           int      `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3,casttype=int" json:"status_code,omitempty"`
	Where                string   `protobuf:"bytes,6,opt,name=where,proto3" json:"where,omitempty"`
	IsOAuth              bool     `protobuf:"varint,7,opt,name=is_oauth,json=isOauth,proto3" json:"is_oauth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppError) Reset()         { *m = AppError{} }
func (m *AppError) String() string { return proto.CompactTextString(m) }
func (*AppError) ProtoMessage()    {}
func (*AppError) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{2}
}
func (m *AppError) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppError.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AppError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppError.Merge(dst, src)
}
func (m *AppError) XXX_Size() int {
	return m.ProtoSize()
}
func (m *AppError) XXX_DiscardUnknown() {
	xxx_messageInfo_AppError.DiscardUnknown(m)
}

var xxx_messageInfo_AppError proto.InternalMessageInfo

type Channel struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt             int64    `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64    `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	DeleteAt             int64    `protobuf:"varint,4,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	TeamId               string   `protobuf:"bytes,5,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	DisplayName          string   `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Name                 string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Header               string   `protobuf:"bytes,9,opt,name=header,proto3" json:"header,omitempty"`
	Purpose              string   `protobuf:"bytes,10,opt,name=purpose,proto3" json:"purpose,omitempty"`
	LastPostAt           int64    `protobuf:"varint,11,opt,name=last_post_at,json=lastPostAt,proto3" json:"last_post_at,omitempty"`
	TotalMsgCount        int64    `protobuf:"varint,12,opt,name=total_msg_count,json=totalMsgCount,proto3" json:"total_msg_count,omitempty"`
	ExtraUpdateAt        int64    `protobuf:"varint,13,opt,name=extra_update_at,json=extraUpdateAt,proto3" json:"extra_update_at,omitempty"`
	CreatorId            string   `protobuf:"bytes,14,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	SchemeId             string   `protobuf:"bytes,15,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{3}
}
func (m *Channel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(dst, src)
}
func (m *Channel) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

type ChannelMember struct {
	ChannelId            string    `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	UserId               string    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles                string    `protobuf:"bytes,3,opt,name=roles,proto3" json:"roles,omitempty"`
	LastViewedAt         int64     `protobuf:"varint,4,opt,name=last_viewed_at,json=lastViewedAt,proto3" json:"last_viewed_at,omitempty"`
	MsgCount             int64     `protobuf:"varint,5,opt,name=msg_count,json=msgCount,proto3" json:"msg_count,omitempty"`
	MentionCount         int64     `protobuf:"varint,6,opt,name=mention_count,json=mentionCount,proto3" json:"mention_count,omitempty"`
	NotifyProps          StringMap `protobuf:"bytes,7,rep,name=notify_props,json=notifyProps,casttype=StringMap" json:"notify_props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastUpdateAt         int64     `protobuf:"varint,8,opt,name=last_update_at,json=lastUpdateAt,proto3" json:"last_update_at,omitempty"`
	SchemeUser           bool      `protobuf:"varint,9,opt,name=scheme_user,json=schemeUser,proto3" json:"scheme_user,omitempty"`
	SchemeAdmin          bool      `protobuf:"varint,10,opt,name=scheme_admin,json=schemeAdmin,proto3" json:"scheme_admin,omitempty"`
	ExplicitRoles        string    `protobuf:"bytes,11,opt,name=explicit_roles,json=explicitRoles,proto3" json:"explicit_roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ChannelMember) Reset()         { *m = ChannelMember{} }
func (m *ChannelMember) String() string { return proto.CompactTextString(m) }
func (*ChannelMember) ProtoMessage()    {}
func (*ChannelMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{4}
}
func (m *ChannelMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChannelMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChannelMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ChannelMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelMember.Merge(dst, src)
}
func (m *ChannelMember) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ChannelMember) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelMember.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelMember proto.InternalMessageInfo

type ClientRequirements struct {
	AndroidLatestVersion string   `protobuf:"bytes,1,opt,name=android_latest_version,json=androidLatestVersion,proto3" json:"android_latest_version,omitempty"`
	AndroidMinVersion    string   `protobuf:"bytes,2,opt,name=android_min_version,json=androidMinVersion,proto3" json:"android_min_version,omitempty"`
	DesktopLatestVersion string   `protobuf:"bytes,3,opt,name=desktop_latest_version,json=desktopLatestVersion,proto3" json:"desktop_latest_version,omitempty"`
	DesktopMinVersion    string   `protobuf:"bytes,4,opt,name=desktop_min_version,json=desktopMinVersion,proto3" json:"desktop_min_version,omitempty"`
	IosLatestVersion     string   `protobuf:"bytes,5,opt,name=ios_latest_version,json=iosLatestVersion,proto3" json:"ios_latest_version,omitempty"`
	IosMinVersion        string   `protobuf:"bytes,6,opt,name=ios_min_version,json=iosMinVersion,proto3" json:"ios_min_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientRequirements) Reset()         { *m = ClientRequirements{} }
func (m *ClientRequirements) String() string { return proto.CompactTextString(m) }
func (*ClientRequirements) ProtoMessage()    {}
func (*ClientRequirements) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{5}
}
func (m *ClientRequirements) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClientRequirements) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClientRequirements.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ClientRequirements) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRequirements.Merge(dst, src)
}
func (m *ClientRequirements) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ClientRequirements) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRequirements.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRequirements proto.InternalMessageInfo

type ClusterSettings struct {
	Enable                      bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	ClusterName                 string   `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	OverrideHostname            string   `protobuf:"bytes,3,opt,name=override_hostname,json=overrideHostname,proto3" json:"override_hostname,omitempty"`
	UseIpAddress                bool     `protobuf:"varint,4,opt,name=use_ip_address,json=useIpAddress,proto3" json:"use_ip_address,omitempty"`
	UseExperimentalGossip       bool     `protobuf:"varint,5,opt,name=use_experimental_gossip,json=useExperimentalGossip,proto3" json:"use_experimental_gossip,omitempty"`
	ReadOnlyConfig              bool     `protobuf:"varint,6,opt,name=read_only_config,json=readOnlyConfig,proto3" json:"read_only_config,omitempty"`
	GossipPort                  int      `protobuf:"varint,7,opt,name=gossip_port,json=gossipPort,proto3,casttype=int" json:"gossip_port,omitempty"`
	StreamingPort               int      `protobuf:"varint,8,opt,name=streaming_port,json=streamingPort,proto3,casttype=int" json:"streaming_port,omitempty"`
	MaxIdleConns                int      `protobuf:"varint,9,opt,name=max_idle_conns,json=maxIdleConns,proto3,casttype=int" json:"max_idle_conns,omitempty"`
	MaxIdleConnsPerHost         int      `protobuf:"varint,10,opt,name=max_idle_conns_per_host,json=maxIdleConnsPerHost,proto3,casttype=int" json:"max_idle_conns_per_host,omitempty"`
	IdleConnTimeoutMilliseconds int      `protobuf:"varint,11,opt,name=idle_conn_timeout_milliseconds,json=idleConnTimeoutMilliseconds,proto3,casttype=int" json:"idle_conn_timeout_milliseconds,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *ClusterSettings) Reset()         { *m = ClusterSettings{} }
func (m *ClusterSettings) String() string { return proto.CompactTextString(m) }
func (*ClusterSettings) ProtoMessage()    {}
func (*ClusterSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{6}
}
func (m *ClusterSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ClusterSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterSettings.Merge(dst, src)
}
func (m *ClusterSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ClusterSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterSettings proto.InternalMessageInfo

type Command struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	CreateAt             int64    `protobuf:"varint,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64    `protobuf:"varint,4,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	DeleteAt             int64    `protobuf:"varint,5,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	CreatorId            string   `protobuf:"bytes,6,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	TeamId               string   `protobuf:"bytes,7,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Trigger              string   `protobuf:"bytes,8,opt,name=trigger,proto3" json:"trigger,omitempty"`
	Method               string   `protobuf:"bytes,9,opt,name=method,proto3" json:"method,omitempty"`
	Username             string   `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	IconURL              string   `protobuf:"bytes,11,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	AutoComplete         bool     `protobuf:"varint,12,opt,name=auto_complete,json=autoComplete,proto3" json:"auto_complete,omitempty"`
	AutoCompleteDesc     string   `protobuf:"bytes,13,opt,name=auto_complete_desc,json=autoCompleteDesc,proto3" json:"auto_complete_desc,omitempty"`
	AutoCompleteHint     string   `protobuf:"bytes,14,opt,name=auto_complete_hint,json=autoCompleteHint,proto3" json:"auto_complete_hint,omitempty"`
	DisplayName          string   `protobuf:"bytes,15,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description          string   `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	URL                  string   `protobuf:"bytes,17,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}
func (*Command) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{7}
}
func (m *Command) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Command) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Command.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Command) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Command.Merge(dst, src)
}
func (m *Command) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Command) XXX_DiscardUnknown() {
	xxx_messageInfo_Command.DiscardUnknown(m)
}

var xxx_messageInfo_Command proto.InternalMessageInfo

type CommandArgs struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId            string   `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TeamId               string   `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	RootId               string   `protobuf:"bytes,4,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	ParentId             string   `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Command              string   `protobuf:"bytes,6,opt,name=command,proto3" json:"command,omitempty"`
	SiteURL              string   `protobuf:"bytes,7,opt,name=site_url,json=siteUrl,proto3" json:"site_url,omitempty"`
	Session              Session  `protobuf:"bytes,8,opt,name=session" json:"session"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandArgs) Reset()         { *m = CommandArgs{} }
func (m *CommandArgs) String() string { return proto.CompactTextString(m) }
func (*CommandArgs) ProtoMessage()    {}
func (*CommandArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{8}
}
func (m *CommandArgs) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommandArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommandArgs.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CommandArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandArgs.Merge(dst, src)
}
func (m *CommandArgs) XXX_Size() int {
	return m.ProtoSize()
}
func (m *CommandArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandArgs.DiscardUnknown(m)
}

var xxx_messageInfo_CommandArgs proto.InternalMessageInfo

type CommandResponse struct {
	ResponseType         string             `protobuf:"bytes,1,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	Text                 string             `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Username             string             `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	IconURL              string             `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	Type                 string             `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	GotoLocation         string             `protobuf:"bytes,6,opt,name=goto_location,json=gotoLocation,proto3" json:"goto_location,omitempty"`
	Attachments          []*SlackAttachment `protobuf:"bytes,7,rep,name=attachments" json:"attachments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CommandResponse) Reset()         { *m = CommandResponse{} }
func (m *CommandResponse) String() string { return proto.CompactTextString(m) }
func (*CommandResponse) ProtoMessage()    {}
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{9}
}
func (m *CommandResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CommandResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandResponse.Merge(dst, src)
}
func (m *CommandResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *CommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommandResponse proto.InternalMessageInfo

type ComplianceSettings struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Directory            string   `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"`
	EnableDaily          bool     `protobuf:"varint,3,opt,name=enable_daily,json=enableDaily,proto3" json:"enable_daily,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComplianceSettings) Reset()         { *m = ComplianceSettings{} }
func (m *ComplianceSettings) String() string { return proto.CompactTextString(m) }
func (*ComplianceSettings) ProtoMessage()    {}
func (*ComplianceSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{10}
}
func (m *ComplianceSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ComplianceSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ComplianceSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ComplianceSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplianceSettings.Merge(dst, src)
}
func (m *ComplianceSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ComplianceSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplianceSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ComplianceSettings proto.InternalMessageInfo

type Config struct {
	ServiceSettings       ServiceSettings       `protobuf:"bytes,1,opt,name=service_settings,json=serviceSettings" json:"service_settings"`
	TeamSettings          TeamSettings          `protobuf:"bytes,2,opt,name=team_settings,json=teamSettings" json:"team_settings"`
	ClientRequirements    ClientRequirements    `protobuf:"bytes,3,opt,name=client_requirements,json=clientRequirements" json:"client_requirements"`
	SqlSettings           SqlSettings           `protobuf:"bytes,4,opt,name=sql_settings,json=sqlSettings" json:"sql_settings"`
	LogSettings           LogSettings           `protobuf:"bytes,5,opt,name=log_settings,json=logSettings" json:"log_settings"`
	PasswordSettings      PasswordSettings      `protobuf:"bytes,6,opt,name=password_settings,json=passwordSettings" json:"password_settings"`
	FileSettings          FileSettings          `protobuf:"bytes,7,opt,name=file_settings,json=fileSettings" json:"file_settings"`
	EmailSettings         EmailSettings         `protobuf:"bytes,8,opt,name=email_settings,json=emailSettings" json:"email_settings"`
	ExtensionSettings     ExtensionSettings     `protobuf:"bytes,9,opt,name=extension_settings,json=extensionSettings" json:"extension_settings"`
	RateLimitSettings     RateLimitSettings     `protobuf:"bytes,10,opt,name=rate_limit_settings,json=rateLimitSettings" json:"rate_limit_settings"`
	PrivacySettings       PrivacySettings       `protobuf:"bytes,11,opt,name=privacy_settings,json=privacySettings" json:"privacy_settings"`
	SupportSettings       SupportSettings       `protobuf:"bytes,12,opt,name=support_settings,json=supportSettings" json:"support_settings"`
	AnnouncementSettings  AnnouncementSettings  `protobuf:"bytes,13,opt,name=announcement_settings,json=announcementSettings" json:"announcement_settings"`
	ThemeSettings         ThemeSettings         `protobuf:"bytes,14,opt,name=theme_settings,json=themeSettings" json:"theme_settings"`
	GitLabSettings        SSOSettings           `protobuf:"bytes,15,opt,name=git_lab_settings,json=gitLabSettings" json:"git_lab_settings"`
	GoogleSettings        SSOSettings           `protobuf:"bytes,16,opt,name=google_settings,json=googleSettings" json:"google_settings"`
	Office365Settings     SSOSettings           `protobuf:"bytes,17,opt,name=office365_settings,json=office365Settings" json:"office365_settings"`
	LdapSettings          LdapSettings          `protobuf:"bytes,18,opt,name=ldap_settings,json=ldapSettings" json:"ldap_settings"`
	ComplianceSettings    ComplianceSettings    `protobuf:"bytes,19,opt,name=compliance_settings,json=complianceSettings" json:"compliance_settings"`
	LocalizationSettings  LocalizationSettings  `protobuf:"bytes,20,opt,name=localization_settings,json=localizationSettings" json:"localization_settings"`
	SamlSettings          SamlSettings          `protobuf:"bytes,21,opt,name=saml_settings,json=samlSettings" json:"saml_settings"`
	NativeAppSettings     NativeAppSettings     `protobuf:"bytes,22,opt,name=native_app_settings,json=nativeAppSettings" json:"native_app_settings"`
	ClusterSettings       ClusterSettings       `protobuf:"bytes,23,opt,name=cluster_settings,json=clusterSettings" json:"cluster_settings"`
	MetricsSettings       MetricsSettings       `protobuf:"bytes,24,opt,name=metrics_settings,json=metricsSettings" json:"metrics_settings"`
	ExperimentalSettings  ExperimentalSettings  `protobuf:"bytes,25,opt,name=experimental_settings,json=experimentalSettings" json:"experimental_settings"`
	AnalyticsSettings     AnalyticsSettings     `protobuf:"bytes,26,opt,name=analytics_settings,json=analyticsSettings" json:"analytics_settings"`
	WebrtcSettings        WebrtcSettings        `protobuf:"bytes,27,opt,name=webrtc_settings,json=webrtcSettings" json:"webrtc_settings"`
	ElasticsearchSettings ElasticsearchSettings `protobuf:"bytes,28,opt,name=elasticsearch_settings,json=elasticsearchSettings" json:"elasticsearch_settings"`
	DataRetentionSettings DataRetentionSettings `protobuf:"bytes,29,opt,name=data_retention_settings,json=dataRetentionSettings" json:"data_retention_settings"`
	MessageExportSettings MessageExportSettings `protobuf:"bytes,30,opt,name=message_export_settings,json=messageExportSettings" json:"message_export_settings"`
	JobSettings           JobSettings           `protobuf:"bytes,31,opt,name=job_settings,json=jobSettings" json:"job_settings"`
	PluginSettings        PluginSettings        `protobuf:"bytes,32,opt,name=plugin_settings,json=pluginSettings" json:"plugin_settings"`
	DisplaySettings       DisplaySettings       `protobuf:"bytes,33,opt,name=display_settings,json=displaySettings" json:"display_settings"`
	TimezoneSettings      TimezoneSettings      `protobuf:"bytes,34,opt,name=timezone_settings,json=timezoneSettings" json:"timezone_settings"`
	XXX_NoUnkeyedLiteral  struct{}              `json:"-"`
	XXX_unrecognized      []byte                `json:"-"`
	XXX_sizecache         int32                 `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{11}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Config.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

type Customer struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Company              string   `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{12}
}
func (m *Customer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(dst, src)
}
func (m *Customer) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

type DataRetentionSettings struct {
	EnableMessageDeletion bool     `protobuf:"varint,1,opt,name=enable_message_deletion,json=enableMessageDeletion,proto3" json:"enable_message_deletion,omitempty"`
	EnableFileDeletion    bool     `protobuf:"varint,2,opt,name=enable_file_deletion,json=enableFileDeletion,proto3" json:"enable_file_deletion,omitempty"`
	MessageRetentionDays  int      `protobuf:"varint,3,opt,name=message_retention_days,json=messageRetentionDays,proto3,casttype=int" json:"message_retention_days,omitempty"`
	FileRetentionDays     int      `protobuf:"varint,4,opt,name=file_retention_days,json=fileRetentionDays,proto3,casttype=int" json:"file_retention_days,omitempty"`
	DeletionJobStartTime  string   `protobuf:"bytes,5,opt,name=deletion_job_start_time,json=deletionJobStartTime,proto3" json:"deletion_job_start_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *DataRetentionSettings) Reset()         { *m = DataRetentionSettings{} }
func (m *DataRetentionSettings) String() string { return proto.CompactTextString(m) }
func (*DataRetentionSettings) ProtoMessage()    {}
func (*DataRetentionSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{13}
}
func (m *DataRetentionSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DataRetentionSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DataRetentionSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DataRetentionSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRetentionSettings.Merge(dst, src)
}
func (m *DataRetentionSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *DataRetentionSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRetentionSettings.DiscardUnknown(m)
}

var xxx_messageInfo_DataRetentionSettings proto.InternalMessageInfo

type DisplaySettings struct {
	CustomUrlSchemes     []string `protobuf:"bytes,1,rep,name=custom_url_schemes,json=customUrlSchemes" json:"custom_url_schemes,omitempty"`
	ExperimentalTimezone bool     `protobuf:"varint,2,opt,name=experimental_timezone,json=experimentalTimezone,proto3" json:"experimental_timezone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplaySettings) Reset()         { *m = DisplaySettings{} }
func (m *DisplaySettings) String() string { return proto.CompactTextString(m) }
func (*DisplaySettings) ProtoMessage()    {}
func (*DisplaySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{14}
}
func (m *DisplaySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DisplaySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DisplaySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DisplaySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplaySettings.Merge(dst, src)
}
func (m *DisplaySettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *DisplaySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplaySettings.DiscardUnknown(m)
}

var xxx_messageInfo_DisplaySettings proto.InternalMessageInfo

type ElasticsearchSettings struct {
	ConnectionUrl                 string   `protobuf:"bytes,1,opt,name=connection_url,json=connectionUrl,proto3" json:"connection_url,omitempty"`
	Username                      string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password                      string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	EnableIndexing                bool     `protobuf:"varint,4,opt,name=enable_indexing,json=enableIndexing,proto3" json:"enable_indexing,omitempty"`
	EnableSearching               bool     `protobuf:"varint,5,opt,name=enable_searching,json=enableSearching,proto3" json:"enable_searching,omitempty"`
	Sniff                         bool     `protobuf:"varint,6,opt,name=sniff,proto3" json:"sniff,omitempty"`
	PostIndexReplicas             int      `protobuf:"varint,7,opt,name=post_index_replicas,json=postIndexReplicas,proto3,casttype=int" json:"post_index_replicas,omitempty"`
	PostIndexShards               int      `protobuf:"varint,8,opt,name=post_index_shards,json=postIndexShards,proto3,casttype=int" json:"post_index_shards,omitempty"`
	AggregatePostsAfterDays       int      `protobuf:"varint,9,opt,name=aggregate_posts_after_days,json=aggregatePostsAfterDays,proto3,casttype=int" json:"aggregate_posts_after_days,omitempty"`
	PostsAggregatorJobStartTime   string   `protobuf:"bytes,10,opt,name=posts_aggregator_job_start_time,json=postsAggregatorJobStartTime,proto3" json:"posts_aggregator_job_start_time,omitempty"`
	IndexPrefix                   string   `protobuf:"bytes,11,opt,name=index_prefix,json=indexPrefix,proto3" json:"index_prefix,omitempty"`
	LiveIndexingBatchSize         int      `protobuf:"varint,12,opt,name=live_indexing_batch_size,json=liveIndexingBatchSize,proto3,casttype=int" json:"live_indexing_batch_size,omitempty"`
	BulkIndexingTimeWindowSeconds int      `protobuf:"varint,13,opt,name=bulk_indexing_time_window_seconds,json=bulkIndexingTimeWindowSeconds,proto3,casttype=int" json:"bulk_indexing_time_window_seconds,omitempty"`
	RequestTimeoutSeconds         int      `protobuf:"varint,14,opt,name=request_timeout_seconds,json=requestTimeoutSeconds,proto3,casttype=int" json:"request_timeout_seconds,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *ElasticsearchSettings) Reset()         { *m = ElasticsearchSettings{} }
func (m *ElasticsearchSettings) String() string { return proto.CompactTextString(m) }
func (*ElasticsearchSettings) ProtoMessage()    {}
func (*ElasticsearchSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{15}
}
func (m *ElasticsearchSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ElasticsearchSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ElasticsearchSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ElasticsearchSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ElasticsearchSettings.Merge(dst, src)
}
func (m *ElasticsearchSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ElasticsearchSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ElasticsearchSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ElasticsearchSettings proto.InternalMessageInfo

type EmailSettings struct {
	EnableSignUpWithEmail             bool     `protobuf:"varint,1,opt,name=enable_sign_up_with_email,json=enableSignUpWithEmail,proto3" json:"enable_sign_up_with_email,omitempty"`
	EnableSignInWithEmail             bool     `protobuf:"varint,2,opt,name=enable_sign_in_with_email,json=enableSignInWithEmail,proto3" json:"enable_sign_in_with_email,omitempty"`
	EnableSignInWithUsername          bool     `protobuf:"varint,3,opt,name=enable_sign_in_with_username,json=enableSignInWithUsername,proto3" json:"enable_sign_in_with_username,omitempty"`
	SendEmailNotifications            bool     `protobuf:"varint,4,opt,name=send_email_notifications,json=sendEmailNotifications,proto3" json:"send_email_notifications,omitempty"`
	UseChannelInEmailNotifications    bool     `protobuf:"varint,5,opt,name=use_channel_in_email_notifications,json=useChannelInEmailNotifications,proto3" json:"use_channel_in_email_notifications,omitempty"`
	RequireEmailVerification          bool     `protobuf:"varint,6,opt,name=require_email_verification,json=requireEmailVerification,proto3" json:"require_email_verification,omitempty"`
	FeedbackName                      string   `protobuf:"bytes,7,opt,name=feedback_name,json=feedbackName,proto3" json:"feedback_name,omitempty"`
	FeedbackEmail                     string   `protobuf:"bytes,8,opt,name=feedback_email,json=feedbackEmail,proto3" json:"feedback_email,omitempty"`
	FeedbackOrganization              string   `protobuf:"bytes,9,opt,name=feedback_organization,json=feedbackOrganization,proto3" json:"feedback_organization,omitempty"`
	EnableSMTPAuth                    bool     `protobuf:"varint,10,opt,name=enable_smtpauth,json=enableSmtpauth,proto3" json:"enable_smtpauth,omitempty"`
	SMTPUsername                      string   `protobuf:"bytes,11,opt,name=smtpusername,proto3" json:"smtpusername,omitempty"`
	SMTPPassword                      string   `protobuf:"bytes,12,opt,name=smtppassword,proto3" json:"smtppassword,omitempty"`
	SMTPServer                        string   `protobuf:"bytes,13,opt,name=smtpserver,proto3" json:"smtpserver,omitempty"`
	SMTPPort                          string   `protobuf:"bytes,14,opt,name=smtpport,proto3" json:"smtpport,omitempty"`
	ConnectionSecurity                string   `protobuf:"bytes,15,opt,name=connection_security,json=connectionSecurity,proto3" json:"connection_security,omitempty"`
	InviteSalt                        string   `protobuf:"bytes,16,opt,name=invite_salt,json=inviteSalt,proto3" json:"invite_salt,omitempty"`
	SendPushNotifications             bool     `protobuf:"varint,17,opt,name=send_push_notifications,json=sendPushNotifications,proto3" json:"send_push_notifications,omitempty"`
	PushNotificationServer            string   `protobuf:"bytes,18,opt,name=push_notification_server,json=pushNotificationServer,proto3" json:"push_notification_server,omitempty"`
	PushNotificationContents          string   `protobuf:"bytes,19,opt,name=push_notification_contents,json=pushNotificationContents,proto3" json:"push_notification_contents,omitempty"`
	EnableEmailBatching               bool     `protobuf:"varint,20,opt,name=enable_email_batching,json=enableEmailBatching,proto3" json:"enable_email_batching,omitempty"`
	EmailBatchingBufferSize           int      `protobuf:"varint,21,opt,name=email_batching_buffer_size,json=emailBatchingBufferSize,proto3,casttype=int" json:"email_batching_buffer_size,omitempty"`
	EmailBatchingInterval             int      `protobuf:"varint,22,opt,name=email_batching_interval,json=emailBatchingInterval,proto3,casttype=int" json:"email_batching_interval,omitempty"`
	EnablePreviewModeBanner           bool     `protobuf:"varint,23,opt,name=enable_preview_mode_banner,json=enablePreviewModeBanner,proto3" json:"enable_preview_mode_banner,omitempty"`
	SkipServerCertificateVerification bool     `protobuf:"varint,24,opt,name=skip_server_certificate_verification,json=skipServerCertificateVerification,proto3" json:"skip_server_certificate_verification,omitempty"`
	EmailNotificationContentsType     string   `protobuf:"bytes,25,opt,name=email_notification_contents_type,json=emailNotificationContentsType,proto3" json:"email_notification_contents_type,omitempty"`
	LoginButtonColor                  string   `protobuf:"bytes,26,opt,name=login_button_color,json=loginButtonColor,proto3" json:"login_button_color,omitempty"`
	LoginButtonBorderColor            string   `protobuf:"bytes,27,opt,name=login_button_border_color,json=loginButtonBorderColor,proto3" json:"login_button_border_color,omitempty"`
	LoginButtonTextColor              string   `protobuf:"bytes,28,opt,name=login_button_text_color,json=loginButtonTextColor,proto3" json:"login_button_text_color,omitempty"`
	XXX_NoUnkeyedLiteral              struct{} `json:"-"`
	XXX_unrecognized                  []byte   `json:"-"`
	XXX_sizecache                     int32    `json:"-"`
}

func (m *EmailSettings) Reset()         { *m = EmailSettings{} }
func (m *EmailSettings) String() string { return proto.CompactTextString(m) }
func (*EmailSettings) ProtoMessage()    {}
func (*EmailSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{16}
}
func (m *EmailSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmailSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmailSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *EmailSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailSettings.Merge(dst, src)
}
func (m *EmailSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *EmailSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailSettings.DiscardUnknown(m)
}

var xxx_messageInfo_EmailSettings proto.InternalMessageInfo

type ExperimentalSettings struct {
	ClientSideCertEnable bool     `protobuf:"varint,1,opt,name=client_side_cert_enable,json=clientSideCertEnable,proto3" json:"client_side_cert_enable,omitempty"`
	ClientSideCertCheck  string   `protobuf:"bytes,2,opt,name=client_side_cert_check,json=clientSideCertCheck,proto3" json:"client_side_cert_check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExperimentalSettings) Reset()         { *m = ExperimentalSettings{} }
func (m *ExperimentalSettings) String() string { return proto.CompactTextString(m) }
func (*ExperimentalSettings) ProtoMessage()    {}
func (*ExperimentalSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{17}
}
func (m *ExperimentalSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExperimentalSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExperimentalSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ExperimentalSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExperimentalSettings.Merge(dst, src)
}
func (m *ExperimentalSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ExperimentalSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ExperimentalSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ExperimentalSettings proto.InternalMessageInfo

type ExtensionSettings struct {
	EnableExperimentalExtensions bool     `protobuf:"varint,1,opt,name=enable_experimental_extensions,json=enableExperimentalExtensions,proto3" json:"enable_experimental_extensions,omitempty"`
	AllowedExtensionsIDs         []string `protobuf:"bytes,2,rep,name=allowed_extensions_ids,json=allowedExtensionsIds" json:"allowed_extensions_ids,omitempty"`
	XXX_NoUnkeyedLiteral         struct{} `json:"-"`
	XXX_unrecognized             []byte   `json:"-"`
	XXX_sizecache                int32    `json:"-"`
}

func (m *ExtensionSettings) Reset()         { *m = ExtensionSettings{} }
func (m *ExtensionSettings) String() string { return proto.CompactTextString(m) }
func (*ExtensionSettings) ProtoMessage()    {}
func (*ExtensionSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{18}
}
func (m *ExtensionSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtensionSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtensionSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ExtensionSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtensionSettings.Merge(dst, src)
}
func (m *ExtensionSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ExtensionSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtensionSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ExtensionSettings proto.InternalMessageInfo

type Features struct {
	Users                     int      `protobuf:"varint,1,opt,name=users,proto3,casttype=int" json:"users,omitempty"`
	LDAP                      bool     `protobuf:"varint,2,opt,name=ldap,proto3" json:"ldap,omitempty"`
	MFA                       bool     `protobuf:"varint,3,opt,name=mfa,proto3" json:"mfa,omitempty"`
	GoogleOAuth               bool     `protobuf:"varint,4,opt,name=google_oauth,json=googleOauth,proto3" json:"google_oauth,omitempty"`
	Office365OAuth            bool     `protobuf:"varint,5,opt,name=office365_oauth,json=office365Oauth,proto3" json:"office365_oauth,omitempty"`
	Compliance                bool     `protobuf:"varint,6,opt,name=compliance,proto3" json:"compliance,omitempty"`
	Cluster                   bool     `protobuf:"varint,7,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Metrics                   bool     `protobuf:"varint,8,opt,name=metrics,proto3" json:"metrics,omitempty"`
	MHPNS                     bool     `protobuf:"varint,9,opt,name=mhpns,proto3" json:"mhpns,omitempty"`
	SAML                      bool     `protobuf:"varint,10,opt,name=saml,proto3" json:"saml,omitempty"`
	Elasticsearch             bool     `protobuf:"varint,11,opt,name=elasticsearch,proto3" json:"elasticsearch,omitempty"`
	Announcement              bool     `protobuf:"varint,12,opt,name=announcement,proto3" json:"announcement,omitempty"`
	ThemeManagement           bool     `protobuf:"varint,13,opt,name=theme_management,json=themeManagement,proto3" json:"theme_management,omitempty"`
	EmailNotificationContents bool     `protobuf:"varint,14,opt,name=email_notification_contents,json=emailNotificationContents,proto3" json:"email_notification_contents,omitempty"`
	DataRetention             bool     `protobuf:"varint,15,opt,name=data_retention,json=dataRetention,proto3" json:"data_retention,omitempty"`
	MessageExport             bool     `protobuf:"varint,16,opt,name=message_export,json=messageExport,proto3" json:"message_export,omitempty"`
	CustomPermissionsSchemes  bool     `protobuf:"varint,17,opt,name=custom_permissions_schemes,json=customPermissionsSchemes,proto3" json:"custom_permissions_schemes,omitempty"`
	FutureFeatures            bool     `protobuf:"varint,18,opt,name=future_features,json=futureFeatures,proto3" json:"future_features,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *Features) Reset()         { *m = Features{} }
func (m *Features) String() string { return proto.CompactTextString(m) }
func (*Features) ProtoMessage()    {}
func (*Features) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{19}
}
func (m *Features) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Features) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Features.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Features) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Features.Merge(dst, src)
}
func (m *Features) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Features) XXX_DiscardUnknown() {
	xxx_messageInfo_Features.DiscardUnknown(m)
}

var xxx_messageInfo_Features proto.InternalMessageInfo

type FileInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId            string   `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	PostId               string   `protobuf:"bytes,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CreateAt             int64    `protobuf:"varint,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64    `protobuf:"varint,5,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	DeleteAt             int64    `protobuf:"varint,6,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	Path                 string   `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	ThumbnailPath        string   `protobuf:"bytes,8,opt,name=thumbnail_path,json=thumbnailPath,proto3" json:"thumbnail_path,omitempty"`
	PreviewPath          string   `protobuf:"bytes,9,opt,name=preview_path,json=previewPath,proto3" json:"preview_path,omitempty"`
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Extension            string   `protobuf:"bytes,11,opt,name=extension,proto3" json:"extension,omitempty"`
	Size                 int64    `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
	MimeType             string   `protobuf:"bytes,13,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Width                int      `protobuf:"varint,14,opt,name=width,proto3,casttype=int" json:"width,omitempty"`
	Height               int      `protobuf:"varint,15,opt,name=height,proto3,casttype=int" json:"height,omitempty"`
	HasPreviewImage      bool     `protobuf:"varint,16,opt,name=has_preview_image,json=hasPreviewImage,proto3" json:"has_preview_image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{20}
}
func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(dst, src)
}
func (m *FileInfo) XXX_Size() int {
	return m.ProtoSize()
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

type FileSettings struct {
	EnableFileAttachments   bool     `protobuf:"varint,1,opt,name=enable_file_attachments,json=enableFileAttachments,proto3" json:"enable_file_attachments,omitempty"`
	EnableMobileUpload      bool     `protobuf:"varint,2,opt,name=enable_mobile_upload,json=enableMobileUpload,proto3" json:"enable_mobile_upload,omitempty"`
	EnableMobileDownload    bool     `protobuf:"varint,3,opt,name=enable_mobile_download,json=enableMobileDownload,proto3" json:"enable_mobile_download,omitempty"`
	MaxFileSize             int64    `protobuf:"varint,4,opt,name=max_file_size,json=maxFileSize,proto3" json:"max_file_size,omitempty"`
	DriverName              string   `protobuf:"bytes,5,opt,name=driver_name,json=driverName,proto3" json:"driver_name,omitempty"`
	Directory               string   `protobuf:"bytes,6,opt,name=directory,proto3" json:"directory,omitempty"`
	EnablePublicLink        bool     `protobuf:"varint,7,opt,name=enable_public_link,json=enablePublicLink,proto3" json:"enable_public_link,omitempty"`
	PublicLinkSalt          string   `protobuf:"bytes,8,opt,name=public_link_salt,json=publicLinkSalt,proto3" json:"public_link_salt,omitempty"`
	InitialFont             string   `protobuf:"bytes,9,opt,name=initial_font,json=initialFont,proto3" json:"initial_font,omitempty"`
	AmazonS3AccessKeyId     string   `protobuf:"bytes,10,opt,name=amazon_s3_access_key_id,json=amazonS3AccessKeyId,proto3" json:"amazon_s3_access_key_id,omitempty"`
	AmazonS3SecretAccessKey string   `protobuf:"bytes,11,opt,name=amazon_s3_secret_access_key,json=amazonS3SecretAccessKey,proto3" json:"amazon_s3_secret_access_key,omitempty"`
	AmazonS3Bucket          string   `protobuf:"bytes,12,opt,name=amazon_s3_bucket,json=amazonS3Bucket,proto3" json:"amazon_s3_bucket,omitempty"`
	AmazonS3Region          string   `protobuf:"bytes,13,opt,name=amazon_s3_region,json=amazonS3Region,proto3" json:"amazon_s3_region,omitempty"`
	AmazonS3Endpoint        string   `protobuf:"bytes,14,opt,name=amazon_s3_endpoint,json=amazonS3Endpoint,proto3" json:"amazon_s3_endpoint,omitempty"`
	AmazonS3SSL             bool     `protobuf:"varint,15,opt,name=amazon_s3_ssl,json=amazonS3Ssl,proto3" json:"amazon_s3_ssl,omitempty"`
	AmazonS3SignV2          bool     `protobuf:"varint,16,opt,name=amazon_s3_sign_v2,json=amazonS3SignV2,proto3" json:"amazon_s3_sign_v2,omitempty"`
	AmazonS3SSE             bool     `protobuf:"varint,17,opt,name=amazon_s3_sse,json=amazonS3Sse,proto3" json:"amazon_s3_sse,omitempty"`
	AmazonS3Trace           bool     `protobuf:"varint,18,opt,name=amazon_s3_trace,json=amazonS3Trace,proto3" json:"amazon_s3_trace,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *FileSettings) Reset()         { *m = FileSettings{} }
func (m *FileSettings) String() string { return proto.CompactTextString(m) }
func (*FileSettings) ProtoMessage()    {}
func (*FileSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{21}
}
func (m *FileSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FileSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FileSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *FileSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSettings.Merge(dst, src)
}
func (m *FileSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *FileSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSettings.DiscardUnknown(m)
}

var xxx_messageInfo_FileSettings proto.InternalMessageInfo

type GlobalRelayMessageExportSettings struct {
	CustomerType         string   `protobuf:"bytes,1,opt,name=customer_type,json=customerType,proto3" json:"customer_type,omitempty"`
	SmtpUsername         string   `protobuf:"bytes,2,opt,name=smtp_username,json=smtpUsername,proto3" json:"smtp_username,omitempty"`
	SmtpPassword         string   `protobuf:"bytes,3,opt,name=smtp_password,json=smtpPassword,proto3" json:"smtp_password,omitempty"`
	EmailAddress         string   `protobuf:"bytes,4,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GlobalRelayMessageExportSettings) Reset()         { *m = GlobalRelayMessageExportSettings{} }
func (m *GlobalRelayMessageExportSettings) String() string { return proto.CompactTextString(m) }
func (*GlobalRelayMessageExportSettings) ProtoMessage()    {}
func (*GlobalRelayMessageExportSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{22}
}
func (m *GlobalRelayMessageExportSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GlobalRelayMessageExportSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GlobalRelayMessageExportSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GlobalRelayMessageExportSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GlobalRelayMessageExportSettings.Merge(dst, src)
}
func (m *GlobalRelayMessageExportSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *GlobalRelayMessageExportSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_GlobalRelayMessageExportSettings.DiscardUnknown(m)
}

var xxx_messageInfo_GlobalRelayMessageExportSettings proto.InternalMessageInfo

type Job struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Priority             int64             `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	CreateAt             int64             `protobuf:"varint,4,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	StartAt              int64             `protobuf:"varint,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	LastActivityAt       int64             `protobuf:"varint,6,opt,name=last_activity_at,json=lastActivityAt,proto3" json:"last_activity_at,omitempty"`
	Status               string            `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	Progress             int64             `protobuf:"varint,8,opt,name=progress,proto3" json:"progress,omitempty"`
	Data                 map[string]string `protobuf:"bytes,9,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{23}
}
func (m *Job) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Job.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(dst, src)
}
func (m *Job) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

type JobSettings struct {
	RunJobs              bool     `protobuf:"varint,1,opt,name=run_jobs,json=runJobs,proto3" json:"run_jobs,omitempty"`
	RunScheduler         bool     `protobuf:"varint,2,opt,name=run_scheduler,json=runScheduler,proto3" json:"run_scheduler,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobSettings) Reset()         { *m = JobSettings{} }
func (m *JobSettings) String() string { return proto.CompactTextString(m) }
func (*JobSettings) ProtoMessage()    {}
func (*JobSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{24}
}
func (m *JobSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *JobSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_JobSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *JobSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSettings.Merge(dst, src)
}
func (m *JobSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *JobSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSettings.DiscardUnknown(m)
}

var xxx_messageInfo_JobSettings proto.InternalMessageInfo

type LdapSettings struct {
	Enable                      bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	EnableSync                  bool     `protobuf:"varint,2,opt,name=enable_sync,json=enableSync,proto3" json:"enable_sync,omitempty"`
	LdapServer                  string   `protobuf:"bytes,3,opt,name=ldap_server,json=ldapServer,proto3" json:"ldap_server,omitempty"`
	LdapPort                    int      `protobuf:"varint,4,opt,name=ldap_port,json=ldapPort,proto3,casttype=int" json:"ldap_port,omitempty"`
	ConnectionSecurity          string   `protobuf:"bytes,5,opt,name=connection_security,json=connectionSecurity,proto3" json:"connection_security,omitempty"`
	BaseDN                      string   `protobuf:"bytes,6,opt,name=base_dn,json=baseDn,proto3" json:"base_dn,omitempty"`
	BindUsername                string   `protobuf:"bytes,7,opt,name=bind_username,json=bindUsername,proto3" json:"bind_username,omitempty"`
	BindPassword                string   `protobuf:"bytes,8,opt,name=bind_password,json=bindPassword,proto3" json:"bind_password,omitempty"`
	UserFilter                  string   `protobuf:"bytes,9,opt,name=user_filter,json=userFilter,proto3" json:"user_filter,omitempty"`
	FirstNameAttribute          string   `protobuf:"bytes,10,opt,name=first_name_attribute,json=firstNameAttribute,proto3" json:"first_name_attribute,omitempty"`
	LastNameAttribute           string   `protobuf:"bytes,11,opt,name=last_name_attribute,json=lastNameAttribute,proto3" json:"last_name_attribute,omitempty"`
	EmailAttribute              string   `protobuf:"bytes,12,opt,name=email_attribute,json=emailAttribute,proto3" json:"email_attribute,omitempty"`
	UsernameAttribute           string   `protobuf:"bytes,13,opt,name=username_attribute,json=usernameAttribute,proto3" json:"username_attribute,omitempty"`
	NicknameAttribute           string   `protobuf:"bytes,14,opt,name=nickname_attribute,json=nicknameAttribute,proto3" json:"nickname_attribute,omitempty"`
	IdAttribute                 string   `protobuf:"bytes,15,opt,name=id_attribute,json=idAttribute,proto3" json:"id_attribute,omitempty"`
	PositionAttribute           string   `protobuf:"bytes,16,opt,name=position_attribute,json=positionAttribute,proto3" json:"position_attribute,omitempty"`
	LoginIdAttribute            string   `protobuf:"bytes,17,opt,name=login_id_attribute,json=loginIdAttribute,proto3" json:"login_id_attribute,omitempty"`
	SyncIntervalMinutes         int      `protobuf:"varint,18,opt,name=sync_interval_minutes,json=syncIntervalMinutes,proto3,casttype=int" json:"sync_interval_minutes,omitempty"`
	SkipCertificateVerification bool     `protobuf:"varint,19,opt,name=skip_certificate_verification,json=skipCertificateVerification,proto3" json:"skip_certificate_verification,omitempty"`
	QueryTimeout                int      `protobuf:"varint,20,opt,name=query_timeout,json=queryTimeout,proto3,casttype=int" json:"query_timeout,omitempty"`
	MaxPageSize                 int      `protobuf:"varint,21,opt,name=max_page_size,json=maxPageSize,proto3,casttype=int" json:"max_page_size,omitempty"`
	LoginFieldName              string   `protobuf:"bytes,22,opt,name=login_field_name,json=loginFieldName,proto3" json:"login_field_name,omitempty"`
	LoginButtonColor            string   `protobuf:"bytes,23,opt,name=login_button_color,json=loginButtonColor,proto3" json:"login_button_color,omitempty"`
	LoginButtonBorderColor      string   `protobuf:"bytes,24,opt,name=login_button_border_color,json=loginButtonBorderColor,proto3" json:"login_button_border_color,omitempty"`
	LoginButtonTextColor        string   `protobuf:"bytes,25,opt,name=login_button_text_color,json=loginButtonTextColor,proto3" json:"login_button_text_color,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *LdapSettings) Reset()         { *m = LdapSettings{} }
func (m *LdapSettings) String() string { return proto.CompactTextString(m) }
func (*LdapSettings) ProtoMessage()    {}
func (*LdapSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{25}
}
func (m *LdapSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LdapSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LdapSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *LdapSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LdapSettings.Merge(dst, src)
}
func (m *LdapSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *LdapSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LdapSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LdapSettings proto.InternalMessageInfo

type LocalizationSettings struct {
	DefaultServerLocale  string   `protobuf:"bytes,1,opt,name=default_server_locale,json=defaultServerLocale,proto3" json:"default_server_locale,omitempty"`
	DefaultClientLocale  string   `protobuf:"bytes,2,opt,name=default_client_locale,json=defaultClientLocale,proto3" json:"default_client_locale,omitempty"`
	AvailableLocales     string   `protobuf:"bytes,3,opt,name=available_locales,json=availableLocales,proto3" json:"available_locales,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalizationSettings) Reset()         { *m = LocalizationSettings{} }
func (m *LocalizationSettings) String() string { return proto.CompactTextString(m) }
func (*LocalizationSettings) ProtoMessage()    {}
func (*LocalizationSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{26}
}
func (m *LocalizationSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocalizationSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LocalizationSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *LocalizationSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalizationSettings.Merge(dst, src)
}
func (m *LocalizationSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *LocalizationSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalizationSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LocalizationSettings proto.InternalMessageInfo

type LogSettings struct {
	EnableConsole          bool     `protobuf:"varint,1,opt,name=enable_console,json=enableConsole,proto3" json:"enable_console,omitempty"`
	ConsoleLevel           string   `protobuf:"bytes,2,opt,name=console_level,json=consoleLevel,proto3" json:"console_level,omitempty"`
	ConsoleJson            bool     `protobuf:"varint,3,opt,name=console_json,json=consoleJson,proto3" json:"console_json,omitempty"`
	EnableFile             bool     `protobuf:"varint,4,opt,name=enable_file,json=enableFile,proto3" json:"enable_file,omitempty"`
	FileLevel              string   `protobuf:"bytes,5,opt,name=file_level,json=fileLevel,proto3" json:"file_level,omitempty"`
	FileJson               bool     `protobuf:"varint,6,opt,name=file_json,json=fileJson,proto3" json:"file_json,omitempty"`
	FileLocation           string   `protobuf:"bytes,7,opt,name=file_location,json=fileLocation,proto3" json:"file_location,omitempty"`
	EnableWebhookDebugging bool     `protobuf:"varint,8,opt,name=enable_webhook_debugging,json=enableWebhookDebugging,proto3" json:"enable_webhook_debugging,omitempty"`
	EnableDiagnostics      bool     `protobuf:"varint,9,opt,name=enable_diagnostics,json=enableDiagnostics,proto3" json:"enable_diagnostics,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *LogSettings) Reset()         { *m = LogSettings{} }
func (m *LogSettings) String() string { return proto.CompactTextString(m) }
func (*LogSettings) ProtoMessage()    {}
func (*LogSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{27}
}
func (m *LogSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LogSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LogSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *LogSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogSettings.Merge(dst, src)
}
func (m *LogSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *LogSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_LogSettings.DiscardUnknown(m)
}

var xxx_messageInfo_LogSettings proto.InternalMessageInfo

// The plugin manifest defines the metadata required to load and present your plugin. The manifest
// file should be named plugin.json or plugin.yaml and placed in the top of your
// plugin bundle.
//
// Example plugin.yaml:
//
//     id: com.mycompany.myplugin
//     name: My Plugin
//     description: This is my plugin. It does stuff.
//     server:
//         executable: myplugin
//     settings_schema:
//         settings:
//             - key: enable_extra_thing
//               type: bool
//               display_name: Enable Extra Thing
//               help_text: When true, an extra thing will be enabled!
//               default: false
type Manifest struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version              string                `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Server               *ManifestServer       `protobuf:"bytes,5,opt,name=server" json:"server,omitempty"`
	Backend              *ManifestServer       `protobuf:"bytes,6,opt,name=backend" json:"backend,omitempty"`
	Webapp               *ManifestWebapp       `protobuf:"bytes,7,opt,name=webapp" json:"webapp,omitempty"`
	SettingsSchema       *PluginSettingsSchema `protobuf:"bytes,8,opt,name=settings_schema,json=settingsSchema" json:"settings_schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Manifest) Reset()         { *m = Manifest{} }
func (m *Manifest) String() string { return proto.CompactTextString(m) }
func (*Manifest) ProtoMessage()    {}
func (*Manifest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{28}
}
func (m *Manifest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Manifest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Manifest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Manifest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Manifest.Merge(dst, src)
}
func (m *Manifest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Manifest) XXX_DiscardUnknown() {
	xxx_messageInfo_Manifest.DiscardUnknown(m)
}

var xxx_messageInfo_Manifest proto.InternalMessageInfo

type ManifestExecutables struct {
	LinuxAmd64           string   `protobuf:"bytes,1,opt,name=linux_amd64,json=linuxAmd64,proto3" json:"linux_amd64,omitempty"`
	DarwinAmd64          string   `protobuf:"bytes,2,opt,name=darwin_amd64,json=darwinAmd64,proto3" json:"darwin_amd64,omitempty"`
	WindowsAmd64         string   `protobuf:"bytes,3,opt,name=windows_amd64,json=windowsAmd64,proto3" json:"windows_amd64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManifestExecutables) Reset()         { *m = ManifestExecutables{} }
func (m *ManifestExecutables) String() string { return proto.CompactTextString(m) }
func (*ManifestExecutables) ProtoMessage()    {}
func (*ManifestExecutables) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{29}
}
func (m *ManifestExecutables) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManifestExecutables) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManifestExecutables.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ManifestExecutables) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManifestExecutables.Merge(dst, src)
}
func (m *ManifestExecutables) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ManifestExecutables) XXX_DiscardUnknown() {
	xxx_messageInfo_ManifestExecutables.DiscardUnknown(m)
}

var xxx_messageInfo_ManifestExecutables proto.InternalMessageInfo

type ManifestServer struct {
	Executables          *ManifestExecutables `protobuf:"bytes,1,opt,name=executables" json:"executables,omitempty"`
	Executable           string               `protobuf:"bytes,2,opt,name=executable,proto3" json:"executable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ManifestServer) Reset()         { *m = ManifestServer{} }
func (m *ManifestServer) String() string { return proto.CompactTextString(m) }
func (*ManifestServer) ProtoMessage()    {}
func (*ManifestServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{30}
}
func (m *ManifestServer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManifestServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManifestServer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ManifestServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManifestServer.Merge(dst, src)
}
func (m *ManifestServer) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ManifestServer) XXX_DiscardUnknown() {
	xxx_messageInfo_ManifestServer.DiscardUnknown(m)
}

var xxx_messageInfo_ManifestServer proto.InternalMessageInfo

type ManifestWebapp struct {
	BundlePath           string   `protobuf:"bytes,1,opt,name=bundle_path,json=bundlePath,proto3" json:"bundle_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManifestWebapp) Reset()         { *m = ManifestWebapp{} }
func (m *ManifestWebapp) String() string { return proto.CompactTextString(m) }
func (*ManifestWebapp) ProtoMessage()    {}
func (*ManifestWebapp) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{31}
}
func (m *ManifestWebapp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ManifestWebapp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ManifestWebapp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ManifestWebapp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManifestWebapp.Merge(dst, src)
}
func (m *ManifestWebapp) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ManifestWebapp) XXX_DiscardUnknown() {
	xxx_messageInfo_ManifestWebapp.DiscardUnknown(m)
}

var xxx_messageInfo_ManifestWebapp proto.InternalMessageInfo

type MessageExportSettings struct {
	EnableExport         bool                              `protobuf:"varint,1,opt,name=enable_export,json=enableExport,proto3" json:"enable_export,omitempty"`
	ExportFormat         string                            `protobuf:"bytes,2,opt,name=export_format,json=exportFormat,proto3" json:"export_format,omitempty"`
	DailyRunTime         string                            `protobuf:"bytes,3,opt,name=daily_run_time,json=dailyRunTime,proto3" json:"daily_run_time,omitempty"`
	ExportFromTimestamp  int64                             `protobuf:"varint,4,opt,name=export_from_timestamp,json=exportFromTimestamp,proto3" json:"export_from_timestamp,omitempty"`
	BatchSize            int                               `protobuf:"varint,5,opt,name=batch_size,json=batchSize,proto3,casttype=int" json:"batch_size,omitempty"`
	GlobalRelaySettings  *GlobalRelayMessageExportSettings `protobuf:"bytes,6,opt,name=global_relay_settings,json=globalRelaySettings" json:"global_relay_settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *MessageExportSettings) Reset()         { *m = MessageExportSettings{} }
func (m *MessageExportSettings) String() string { return proto.CompactTextString(m) }
func (*MessageExportSettings) ProtoMessage()    {}
func (*MessageExportSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{32}
}
func (m *MessageExportSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessageExportSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessageExportSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *MessageExportSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageExportSettings.Merge(dst, src)
}
func (m *MessageExportSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *MessageExportSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageExportSettings.DiscardUnknown(m)
}

var xxx_messageInfo_MessageExportSettings proto.InternalMessageInfo

type MetricsSettings struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	BlockProfileRate     int      `protobuf:"varint,2,opt,name=block_profile_rate,json=blockProfileRate,proto3,casttype=int" json:"block_profile_rate,omitempty"`
	ListenAddress        string   `protobuf:"bytes,3,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsSettings) Reset()         { *m = MetricsSettings{} }
func (m *MetricsSettings) String() string { return proto.CompactTextString(m) }
func (*MetricsSettings) ProtoMessage()    {}
func (*MetricsSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{33}
}
func (m *MetricsSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MetricsSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MetricsSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *MetricsSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsSettings.Merge(dst, src)
}
func (m *MetricsSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *MetricsSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsSettings.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsSettings proto.InternalMessageInfo

type NativeAppSettings struct {
	AppDownloadLink        string   `protobuf:"bytes,1,opt,name=app_download_link,json=appDownloadLink,proto3" json:"app_download_link,omitempty"`
	AndroidAppDownloadLink string   `protobuf:"bytes,2,opt,name=android_app_download_link,json=androidAppDownloadLink,proto3" json:"android_app_download_link,omitempty"`
	IosAppDownloadLink     string   `protobuf:"bytes,3,opt,name=ios_app_download_link,json=iosAppDownloadLink,proto3" json:"ios_app_download_link,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *NativeAppSettings) Reset()         { *m = NativeAppSettings{} }
func (m *NativeAppSettings) String() string { return proto.CompactTextString(m) }
func (*NativeAppSettings) ProtoMessage()    {}
func (*NativeAppSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{34}
}
func (m *NativeAppSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NativeAppSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NativeAppSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *NativeAppSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeAppSettings.Merge(dst, src)
}
func (m *NativeAppSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *NativeAppSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeAppSettings.DiscardUnknown(m)
}

var xxx_messageInfo_NativeAppSettings proto.InternalMessageInfo

type PasswordSettings struct {
	MinimumLength        int      `protobuf:"varint,1,opt,name=minimum_length,json=minimumLength,proto3,casttype=int" json:"minimum_length,omitempty"`
	Lowercase            bool     `protobuf:"varint,2,opt,name=lowercase,proto3" json:"lowercase,omitempty"`
	Number               bool     `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Uppercase            bool     `protobuf:"varint,4,opt,name=uppercase,proto3" json:"uppercase,omitempty"`
	Symbol               bool     `protobuf:"varint,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PasswordSettings) Reset()         { *m = PasswordSettings{} }
func (m *PasswordSettings) String() string { return proto.CompactTextString(m) }
func (*PasswordSettings) ProtoMessage()    {}
func (*PasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{35}
}
func (m *PasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PasswordSettings.Merge(dst, src)
}
func (m *PasswordSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_PasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_PasswordSettings proto.InternalMessageInfo

type PluginInfo struct {
	Id                   string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Version              string                `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Server               *ManifestServer       `protobuf:"bytes,5,opt,name=server" json:"server,omitempty"`
	Backend              *ManifestServer       `protobuf:"bytes,6,opt,name=backend" json:"backend,omitempty"`
	Webapp               *ManifestWebapp       `protobuf:"bytes,7,opt,name=webapp" json:"webapp,omitempty"`
	SettingsSchema       *PluginSettingsSchema `protobuf:"bytes,8,opt,name=settings_schema,json=settingsSchema" json:"settings_schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PluginInfo) Reset()         { *m = PluginInfo{} }
func (m *PluginInfo) String() string { return proto.CompactTextString(m) }
func (*PluginInfo) ProtoMessage()    {}
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{36}
}
func (m *PluginInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PluginInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PluginInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PluginInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginInfo.Merge(dst, src)
}
func (m *PluginInfo) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PluginInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PluginInfo proto.InternalMessageInfo

type PluginOption struct {
	DisplayName          string   `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PluginOption) Reset()         { *m = PluginOption{} }
func (m *PluginOption) String() string { return proto.CompactTextString(m) }
func (*PluginOption) ProtoMessage()    {}
func (*PluginOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{37}
}
func (m *PluginOption) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PluginOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PluginOption.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PluginOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginOption.Merge(dst, src)
}
func (m *PluginOption) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PluginOption) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginOption.DiscardUnknown(m)
}

var xxx_messageInfo_PluginOption proto.InternalMessageInfo

type PluginSetting struct {
	Key                  string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	DisplayName          string          `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Type                 string          `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	HelpText             string          `protobuf:"bytes,4,opt,name=help_text,json=helpText,proto3" json:"help_text,omitempty"`
	RegenerateHelpText   string          `protobuf:"bytes,5,opt,name=regenerate_help_text,json=regenerateHelpText,proto3" json:"regenerate_help_text,omitempty"`
	Placeholder          string          `protobuf:"bytes,6,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	Options              []*PluginOption `protobuf:"bytes,7,rep,name=options" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PluginSetting) Reset()         { *m = PluginSetting{} }
func (m *PluginSetting) String() string { return proto.CompactTextString(m) }
func (*PluginSetting) ProtoMessage()    {}
func (*PluginSetting) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{38}
}
func (m *PluginSetting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PluginSetting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PluginSetting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PluginSetting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginSetting.Merge(dst, src)
}
func (m *PluginSetting) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PluginSetting) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginSetting.DiscardUnknown(m)
}

var xxx_messageInfo_PluginSetting proto.InternalMessageInfo

type PluginSettings struct {
	Enable               bool                    `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	EnableUploads        bool                    `protobuf:"varint,2,opt,name=enable_uploads,json=enableUploads,proto3" json:"enable_uploads,omitempty"`
	Directory            string                  `protobuf:"bytes,3,opt,name=directory,proto3" json:"directory,omitempty"`
	ClientDirectory      string                  `protobuf:"bytes,4,opt,name=client_directory,json=clientDirectory,proto3" json:"client_directory,omitempty"`
	PluginStates         map[string]*PluginState `protobuf:"bytes,5,rep,name=plugin_states,json=pluginStates" json:"plugin_states,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PluginSettings) Reset()         { *m = PluginSettings{} }
func (m *PluginSettings) String() string { return proto.CompactTextString(m) }
func (*PluginSettings) ProtoMessage()    {}
func (*PluginSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{39}
}
func (m *PluginSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PluginSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PluginSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PluginSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginSettings.Merge(dst, src)
}
func (m *PluginSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PluginSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginSettings.DiscardUnknown(m)
}

var xxx_messageInfo_PluginSettings proto.InternalMessageInfo

type PluginSettingsSchema struct {
	Header               string           `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Footer               string           `protobuf:"bytes,2,opt,name=footer,proto3" json:"footer,omitempty"`
	Settings             []*PluginSetting `protobuf:"bytes,3,rep,name=settings" json:"settings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PluginSettingsSchema) Reset()         { *m = PluginSettingsSchema{} }
func (m *PluginSettingsSchema) String() string { return proto.CompactTextString(m) }
func (*PluginSettingsSchema) ProtoMessage()    {}
func (*PluginSettingsSchema) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{40}
}
func (m *PluginSettingsSchema) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PluginSettingsSchema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PluginSettingsSchema.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PluginSettingsSchema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginSettingsSchema.Merge(dst, src)
}
func (m *PluginSettingsSchema) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PluginSettingsSchema) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginSettingsSchema.DiscardUnknown(m)
}

var xxx_messageInfo_PluginSettingsSchema proto.InternalMessageInfo

type PluginState struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PluginState) Reset()         { *m = PluginState{} }
func (m *PluginState) String() string { return proto.CompactTextString(m) }
func (*PluginState) ProtoMessage()    {}
func (*PluginState) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{41}
}
func (m *PluginState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PluginState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PluginState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PluginState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginState.Merge(dst, src)
}
func (m *PluginState) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PluginState) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginState.DiscardUnknown(m)
}

var xxx_messageInfo_PluginState proto.InternalMessageInfo

type Post struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt             int64    `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64    `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	EditAt               int64    `protobuf:"varint,4,opt,name=edit_at,json=editAt,proto3" json:"edit_at,omitempty"`
	DeleteAt             int64    `protobuf:"varint,5,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	IsPinned             bool     `protobuf:"varint,6,opt,name=is_pinned,json=isPinned,proto3" json:"is_pinned,omitempty"`
	UserId               string   `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId            string   `protobuf:"bytes,8,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	RootId               string   `protobuf:"bytes,9,opt,name=root_id,json=rootId,proto3" json:"root_id,omitempty"`
	ParentId             string   `protobuf:"bytes,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	OriginalId           string   `protobuf:"bytes,11,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`
	Message              string   `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
	MessageSource        string   `protobuf:"bytes,13,opt,name=message_source,json=messageSource,proto3" json:"message_source,omitempty"`
	Type                 string   `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"`
	Hashtags             string   `protobuf:"bytes,15,opt,name=hashtags,proto3" json:"hashtags,omitempty"`
	Filenames            []string `protobuf:"bytes,16,rep,name=filenames" json:"filenames,omitempty"`
	FileIds              []string `protobuf:"bytes,17,rep,name=file_ids,json=fileIds" json:"file_ids,omitempty"`
	PendingPostId        string   `protobuf:"bytes,18,opt,name=pending_post_id,json=pendingPostId,proto3" json:"pending_post_id,omitempty"`
	HasReactions         bool     `protobuf:"varint,19,opt,name=has_reactions,json=hasReactions,proto3" json:"has_reactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{42}
}
func (m *Post) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Post.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(dst, src)
}
func (m *Post) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

type PostAction struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Integration          *PostActionIntegration `protobuf:"bytes,3,opt,name=integration" json:"integration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PostAction) Reset()         { *m = PostAction{} }
func (m *PostAction) String() string { return proto.CompactTextString(m) }
func (*PostAction) ProtoMessage()    {}
func (*PostAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{43}
}
func (m *PostAction) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostAction.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PostAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostAction.Merge(dst, src)
}
func (m *PostAction) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PostAction) XXX_DiscardUnknown() {
	xxx_messageInfo_PostAction.DiscardUnknown(m)
}

var xxx_messageInfo_PostAction proto.InternalMessageInfo

type PostActionIntegration struct {
	URL                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostActionIntegration) Reset()         { *m = PostActionIntegration{} }
func (m *PostActionIntegration) String() string { return proto.CompactTextString(m) }
func (*PostActionIntegration) ProtoMessage()    {}
func (*PostActionIntegration) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{44}
}
func (m *PostActionIntegration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostActionIntegration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostActionIntegration.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PostActionIntegration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostActionIntegration.Merge(dst, src)
}
func (m *PostActionIntegration) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PostActionIntegration) XXX_DiscardUnknown() {
	xxx_messageInfo_PostActionIntegration.DiscardUnknown(m)
}

var xxx_messageInfo_PostActionIntegration proto.InternalMessageInfo

type Preference struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Category             string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Preference) Reset()         { *m = Preference{} }
func (m *Preference) String() string { return proto.CompactTextString(m) }
func (*Preference) ProtoMessage()    {}
func (*Preference) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{45}
}
func (m *Preference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Preference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Preference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Preference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Preference.Merge(dst, src)
}
func (m *Preference) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Preference) XXX_DiscardUnknown() {
	xxx_messageInfo_Preference.DiscardUnknown(m)
}

var xxx_messageInfo_Preference proto.InternalMessageInfo

type PrivacySettings struct {
	ShowEmailAddress     bool     `protobuf:"varint,1,opt,name=show_email_address,json=showEmailAddress,proto3" json:"show_email_address,omitempty"`
	ShowFullName         bool     `protobuf:"varint,2,opt,name=show_full_name,json=showFullName,proto3" json:"show_full_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrivacySettings) Reset()         { *m = PrivacySettings{} }
func (m *PrivacySettings) String() string { return proto.CompactTextString(m) }
func (*PrivacySettings) ProtoMessage()    {}
func (*PrivacySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{46}
}
func (m *PrivacySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PrivacySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivacySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PrivacySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivacySettings.Merge(dst, src)
}
func (m *PrivacySettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *PrivacySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivacySettings.DiscardUnknown(m)
}

var xxx_messageInfo_PrivacySettings proto.InternalMessageInfo

type RateLimitSettings struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	PerSec               int      `protobuf:"varint,2,opt,name=per_sec,json=perSec,proto3,casttype=int" json:"per_sec,omitempty"`
	MaxBurst             int      `protobuf:"varint,3,opt,name=max_burst,json=maxBurst,proto3,casttype=int" json:"max_burst,omitempty"`
	MemoryStoreSize      int      `protobuf:"varint,4,opt,name=memory_store_size,json=memoryStoreSize,proto3,casttype=int" json:"memory_store_size,omitempty"`
	VaryByRemoteAddr     bool     `protobuf:"varint,5,opt,name=vary_by_remote_addr,json=varyByRemoteAddr,proto3" json:"vary_by_remote_addr,omitempty"`
	VaryByUser           bool     `protobuf:"varint,6,opt,name=vary_by_user,json=varyByUser,proto3" json:"vary_by_user,omitempty"`
	VaryByHeader         string   `protobuf:"bytes,7,opt,name=vary_by_header,json=varyByHeader,proto3" json:"vary_by_header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateLimitSettings) Reset()         { *m = RateLimitSettings{} }
func (m *RateLimitSettings) String() string { return proto.CompactTextString(m) }
func (*RateLimitSettings) ProtoMessage()    {}
func (*RateLimitSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{47}
}
func (m *RateLimitSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RateLimitSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RateLimitSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RateLimitSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateLimitSettings.Merge(dst, src)
}
func (m *RateLimitSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *RateLimitSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_RateLimitSettings.DiscardUnknown(m)
}

var xxx_messageInfo_RateLimitSettings proto.InternalMessageInfo

type Role struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreateAt             int64    `protobuf:"varint,5,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64    `protobuf:"varint,6,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	DeleteAt             int64    `protobuf:"varint,7,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	Permissions          []string `protobuf:"bytes,8,rep,name=permissions" json:"permissions,omitempty"`
	SchemeManaged        bool     `protobuf:"varint,9,opt,name=scheme_managed,json=schemeManaged,proto3" json:"scheme_managed,omitempty"`
	BuiltIn              bool     `protobuf:"varint,10,opt,name=built_in,json=builtIn,proto3" json:"built_in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{48}
}
func (m *Role) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Role.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(dst, src)
}
func (m *Role) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

type SSOSettings struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	AuthEndpoint         string   `protobuf:"bytes,5,opt,name=auth_endpoint,json=authEndpoint,proto3" json:"auth_endpoint,omitempty"`
	TokenEndpoint        string   `protobuf:"bytes,6,opt,name=token_endpoint,json=tokenEndpoint,proto3" json:"token_endpoint,omitempty"`
	UserApiEndpoint      string   `protobuf:"bytes,7,opt,name=user_api_endpoint,json=userApiEndpoint,proto3" json:"user_api_endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSOSettings) Reset()         { *m = SSOSettings{} }
func (m *SSOSettings) String() string { return proto.CompactTextString(m) }
func (*SSOSettings) ProtoMessage()    {}
func (*SSOSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{49}
}
func (m *SSOSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SSOSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SSOSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SSOSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSOSettings.Merge(dst, src)
}
func (m *SSOSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SSOSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SSOSettings.DiscardUnknown(m)
}

var xxx_messageInfo_SSOSettings proto.InternalMessageInfo

type SamlSettings struct {
	Enable                      bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	EnableSyncWithLdap          bool     `protobuf:"varint,2,opt,name=enable_sync_with_ldap,json=enableSyncWithLdap,proto3" json:"enable_sync_with_ldap,omitempty"`
	Verify                      bool     `protobuf:"varint,3,opt,name=verify,proto3" json:"verify,omitempty"`
	Encrypt                     bool     `protobuf:"varint,4,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	IdpUrl                      string   `protobuf:"bytes,5,opt,name=idp_url,json=idpUrl,proto3" json:"idp_url,omitempty"`
	IdpDescriptorUrl            string   `protobuf:"bytes,6,opt,name=idp_descriptor_url,json=idpDescriptorUrl,proto3" json:"idp_descriptor_url,omitempty"`
	AssertionConsumerServiceURL string   `protobuf:"bytes,7,opt,name=assertion_consumer_service_url,json=assertionConsumerServiceUrl,proto3" json:"assertion_consumer_service_url,omitempty"`
	ScopingIDPProviderId        string   `protobuf:"bytes,8,opt,name=scoping_idpprovider_id,json=scopingIdpproviderId,proto3" json:"scoping_idpprovider_id,omitempty"`
	ScopingIDPName              string   `protobuf:"bytes,9,opt,name=scoping_idpname,json=scopingIdpname,proto3" json:"scoping_idpname,omitempty"`
	IdpCertificateFile          string   `protobuf:"bytes,10,opt,name=idp_certificate_file,json=idpCertificateFile,proto3" json:"idp_certificate_file,omitempty"`
	PublicCertificateFile       string   `protobuf:"bytes,11,opt,name=public_certificate_file,json=publicCertificateFile,proto3" json:"public_certificate_file,omitempty"`
	PrivateKeyFile              string   `protobuf:"bytes,12,opt,name=private_key_file,json=privateKeyFile,proto3" json:"private_key_file,omitempty"`
	FirstNameAttribute          string   `protobuf:"bytes,13,opt,name=first_name_attribute,json=firstNameAttribute,proto3" json:"first_name_attribute,omitempty"`
	LastNameAttribute           string   `protobuf:"bytes,14,opt,name=last_name_attribute,json=lastNameAttribute,proto3" json:"last_name_attribute,omitempty"`
	EmailAttribute              string   `protobuf:"bytes,15,opt,name=email_attribute,json=emailAttribute,proto3" json:"email_attribute,omitempty"`
	UsernameAttribute           string   `protobuf:"bytes,16,opt,name=username_attribute,json=usernameAttribute,proto3" json:"username_attribute,omitempty"`
	NicknameAttribute           string   `protobuf:"bytes,17,opt,name=nickname_attribute,json=nicknameAttribute,proto3" json:"nickname_attribute,omitempty"`
	LocaleAttribute             string   `protobuf:"bytes,18,opt,name=locale_attribute,json=localeAttribute,proto3" json:"locale_attribute,omitempty"`
	PositionAttribute           string   `protobuf:"bytes,19,opt,name=position_attribute,json=positionAttribute,proto3" json:"position_attribute,omitempty"`
	LoginButtonText             string   `protobuf:"bytes,20,opt,name=login_button_text,json=loginButtonText,proto3" json:"login_button_text,omitempty"`
	LoginButtonColor            string   `protobuf:"bytes,21,opt,name=login_button_color,json=loginButtonColor,proto3" json:"login_button_color,omitempty"`
	LoginButtonBorderColor      string   `protobuf:"bytes,22,opt,name=login_button_border_color,json=loginButtonBorderColor,proto3" json:"login_button_border_color,omitempty"`
	LoginButtonTextColor        string   `protobuf:"bytes,23,opt,name=login_button_text_color,json=loginButtonTextColor,proto3" json:"login_button_text_color,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *SamlSettings) Reset()         { *m = SamlSettings{} }
func (m *SamlSettings) String() string { return proto.CompactTextString(m) }
func (*SamlSettings) ProtoMessage()    {}
func (*SamlSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{50}
}
func (m *SamlSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SamlSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SamlSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SamlSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SamlSettings.Merge(dst, src)
}
func (m *SamlSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SamlSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SamlSettings.DiscardUnknown(m)
}

var xxx_messageInfo_SamlSettings proto.InternalMessageInfo

type ServiceSettings struct {
	SiteURL                                           string   `protobuf:"bytes,1,opt,name=site_url,json=siteUrl,proto3" json:"site_url,omitempty"`
	WebsocketURL                                      string   `protobuf:"bytes,2,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"`
	LicenseFileLocation                               string   `protobuf:"bytes,3,opt,name=license_file_location,json=licenseFileLocation,proto3" json:"license_file_location,omitempty"`
	ListenAddress                                     string   `protobuf:"bytes,4,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address,omitempty"`
	ConnectionSecurity                                string   `protobuf:"bytes,5,opt,name=connection_security,json=connectionSecurity,proto3" json:"connection_security,omitempty"`
	TLSCertFile                                       string   `protobuf:"bytes,6,opt,name=tlscert_file,json=tlscertFile,proto3" json:"tlscert_file,omitempty"`
	TLSKeyFile                                        string   `protobuf:"bytes,7,opt,name=tlskey_file,json=tlskeyFile,proto3" json:"tlskey_file,omitempty"`
	UseLetsEncrypt                                    bool     `protobuf:"varint,8,opt,name=use_lets_encrypt,json=useLetsEncrypt,proto3" json:"use_lets_encrypt,omitempty"`
	LetsEncryptCertificateCacheFile                   string   `protobuf:"bytes,9,opt,name=lets_encrypt_certificate_cache_file,json=letsEncryptCertificateCacheFile,proto3" json:"lets_encrypt_certificate_cache_file,omitempty"`
	Forward80To443                                    bool     `protobuf:"varint,10,opt,name=forward80_to443,json=forward80To443,proto3" json:"forward80_to443,omitempty"`
	ReadTimeout                                       int      `protobuf:"varint,11,opt,name=read_timeout,json=readTimeout,proto3,casttype=int" json:"read_timeout,omitempty"`
	WriteTimeout                                      int      `protobuf:"varint,12,opt,name=write_timeout,json=writeTimeout,proto3,casttype=int" json:"write_timeout,omitempty"`
	MaximumLoginAttempts                              int      `protobuf:"varint,13,opt,name=maximum_login_attempts,json=maximumLoginAttempts,proto3,casttype=int" json:"maximum_login_attempts,omitempty"`
	GoroutineHealthThreshold                          int      `protobuf:"varint,14,opt,name=goroutine_health_threshold,json=goroutineHealthThreshold,proto3,casttype=int" json:"goroutine_health_threshold,omitempty"`
	GoogleDeveloperKey                                string   `protobuf:"bytes,15,opt,name=google_developer_key,json=googleDeveloperKey,proto3" json:"google_developer_key,omitempty"`
	EnableOAuthServiceProvider                        bool     `protobuf:"varint,16,opt,name=enable_oauth_service_provider,json=enableOauthServiceProvider,proto3" json:"enable_oauth_service_provider,omitempty"`
	EnableIncomingWebhooks                            bool     `protobuf:"varint,17,opt,name=enable_incoming_webhooks,json=enableIncomingWebhooks,proto3" json:"enable_incoming_webhooks,omitempty"`
	EnableOutgoingWebhooks                            bool     `protobuf:"varint,18,opt,name=enable_outgoing_webhooks,json=enableOutgoingWebhooks,proto3" json:"enable_outgoing_webhooks,omitempty"`
	EnableCommands                                    bool     `protobuf:"varint,19,opt,name=enable_commands,json=enableCommands,proto3" json:"enable_commands,omitempty"`
	EnableOnlyAdminIntegrations                       bool     `protobuf:"varint,20,opt,name=enable_only_admin_integrations,json=enableOnlyAdminIntegrations,proto3" json:"enable_only_admin_integrations,omitempty"`
	EnablePostUsernameOverride                        bool     `protobuf:"varint,21,opt,name=enable_post_username_override,json=enablePostUsernameOverride,proto3" json:"enable_post_username_override,omitempty"`
	EnablePostIconOverride                            bool     `protobuf:"varint,22,opt,name=enable_post_icon_override,json=enablePostIconOverride,proto3" json:"enable_post_icon_override,omitempty"`
	EnableLinkPreviews                                bool     `protobuf:"varint,23,opt,name=enable_link_previews,json=enableLinkPreviews,proto3" json:"enable_link_previews,omitempty"`
	EnableTesting                                     bool     `protobuf:"varint,24,opt,name=enable_testing,json=enableTesting,proto3" json:"enable_testing,omitempty"`
	EnableDeveloper                                   bool     `protobuf:"varint,25,opt,name=enable_developer,json=enableDeveloper,proto3" json:"enable_developer,omitempty"`
	EnableSecurityFixAlert                            bool     `protobuf:"varint,26,opt,name=enable_security_fix_alert,json=enableSecurityFixAlert,proto3" json:"enable_security_fix_alert,omitempty"`
	EnableInsecureOutgoingConnections                 bool     `protobuf:"varint,27,opt,name=enable_insecure_outgoing_connections,json=enableInsecureOutgoingConnections,proto3" json:"enable_insecure_outgoing_connections,omitempty"`
	AllowedUntrustedInternalConnections               string   `protobuf:"bytes,28,opt,name=allowed_untrusted_internal_connections,json=allowedUntrustedInternalConnections,proto3" json:"allowed_untrusted_internal_connections,omitempty"`
	EnableMultifactorAuthentication                   bool     `protobuf:"varint,29,opt,name=enable_multifactor_authentication,json=enableMultifactorAuthentication,proto3" json:"enable_multifactor_authentication,omitempty"`
	EnforceMultifactorAuthentication                  bool     `protobuf:"varint,30,opt,name=enforce_multifactor_authentication,json=enforceMultifactorAuthentication,proto3" json:"enforce_multifactor_authentication,omitempty"`
	EnableUserAccessTokens                            bool     `protobuf:"varint,31,opt,name=enable_user_access_tokens,json=enableUserAccessTokens,proto3" json:"enable_user_access_tokens,omitempty"`
	AllowCorsFrom                                     string   `protobuf:"bytes,32,opt,name=allow_cors_from,json=allowCorsFrom,proto3" json:"allow_cors_from,omitempty"`
	AllowCookiesForSubdomains                         bool     `protobuf:"varint,33,opt,name=allow_cookies_for_subdomains,json=allowCookiesForSubdomains,proto3" json:"allow_cookies_for_subdomains,omitempty"`
	SessionLengthWebInDays                            int      `protobuf:"varint,34,opt,name=session_length_web_in_days,json=sessionLengthWebInDays,proto3,casttype=int" json:"session_length_web_in_days,omitempty"`
	SessionLengthMobileInDays                         int      `protobuf:"varint,35,opt,name=session_length_mobile_in_days,json=sessionLengthMobileInDays,proto3,casttype=int" json:"session_length_mobile_in_days,omitempty"`
	SessionLengthSSOInDays                            int      `protobuf:"varint,36,opt,name=session_length_ssoin_days,json=sessionLengthSsoinDays,proto3,casttype=int" json:"session_length_ssoin_days,omitempty"`
	SessionCacheInMinutes                             int      `protobuf:"varint,37,opt,name=session_cache_in_minutes,json=sessionCacheInMinutes,proto3,casttype=int" json:"session_cache_in_minutes,omitempty"`
	SessionIdleTimeoutInMinutes                       int      `protobuf:"varint,38,opt,name=session_idle_timeout_in_minutes,json=sessionIdleTimeoutInMinutes,proto3,casttype=int" json:"session_idle_timeout_in_minutes,omitempty"`
	WebsocketSecurePort                               int      `protobuf:"varint,39,opt,name=websocket_secure_port,json=websocketSecurePort,proto3,casttype=int" json:"websocket_secure_port,omitempty"`
	WebsocketPort                                     int      `protobuf:"varint,40,opt,name=websocket_port,json=websocketPort,proto3,casttype=int" json:"websocket_port,omitempty"`
	WebserverMode                                     string   `protobuf:"bytes,41,opt,name=webserver_mode,json=webserverMode,proto3" json:"webserver_mode,omitempty"`
	EnableCustomEmoji                                 bool     `protobuf:"varint,42,opt,name=enable_custom_emoji,json=enableCustomEmoji,proto3" json:"enable_custom_emoji,omitempty"`
	EnableEmojiPicker                                 bool     `protobuf:"varint,43,opt,name=enable_emoji_picker,json=enableEmojiPicker,proto3" json:"enable_emoji_picker,omitempty"`
	EnableGifPicker                                   bool     `protobuf:"varint,44,opt,name=enable_gif_picker,json=enableGifPicker,proto3" json:"enable_gif_picker,omitempty"`
	GfycatApiKey                                      string   `protobuf:"bytes,45,opt,name=gfycat_api_key,json=gfycatApiKey,proto3" json:"gfycat_api_key,omitempty"`
	GfycatApiSecret                                   string   `protobuf:"bytes,46,opt,name=gfycat_api_secret,json=gfycatApiSecret,proto3" json:"gfycat_api_secret,omitempty"`
	RestrictCustomEmojiCreation                       string   `protobuf:"bytes,47,opt,name=restrict_custom_emoji_creation,json=restrictCustomEmojiCreation,proto3" json:"restrict_custom_emoji_creation,omitempty"`
	RestrictPostDelete                                string   `protobuf:"bytes,48,opt,name=restrict_post_delete,json=restrictPostDelete,proto3" json:"restrict_post_delete,omitempty"`
	AllowEditPost                                     string   `protobuf:"bytes,49,opt,name=allow_edit_post,json=allowEditPost,proto3" json:"allow_edit_post,omitempty"`
	PostEditTimeLimit                                 int      `protobuf:"varint,50,opt,name=post_edit_time_limit,json=postEditTimeLimit,proto3,casttype=int" json:"post_edit_time_limit,omitempty"`
	TimeBetweenUserTypingUpdatesMilliseconds          int64    `protobuf:"varint,51,opt,name=time_between_user_typing_updates_milliseconds,json=timeBetweenUserTypingUpdatesMilliseconds,proto3" json:"time_between_user_typing_updates_milliseconds,omitempty"`
	EnablePostSearch                                  bool     `protobuf:"varint,52,opt,name=enable_post_search,json=enablePostSearch,proto3" json:"enable_post_search,omitempty"`
	EnableUserTypingMessages                          bool     `protobuf:"varint,53,opt,name=enable_user_typing_messages,json=enableUserTypingMessages,proto3" json:"enable_user_typing_messages,omitempty"`
	EnableChannelViewedMessages                       bool     `protobuf:"varint,54,opt,name=enable_channel_viewed_messages,json=enableChannelViewedMessages,proto3" json:"enable_channel_viewed_messages,omitempty"`
	EnableUserStatuses                                bool     `protobuf:"varint,55,opt,name=enable_user_statuses,json=enableUserStatuses,proto3" json:"enable_user_statuses,omitempty"`
	ExperimentalEnableAuthenticationTransfer          bool     `protobuf:"varint,56,opt,name=experimental_enable_authentication_transfer,json=experimentalEnableAuthenticationTransfer,proto3" json:"experimental_enable_authentication_transfer,omitempty"`
	ClusterLogTimeoutMilliseconds                     int      `protobuf:"varint,57,opt,name=cluster_log_timeout_milliseconds,json=clusterLogTimeoutMilliseconds,proto3,casttype=int" json:"cluster_log_timeout_milliseconds,omitempty"`
	CloseUnusedDirectMessages                         bool     `protobuf:"varint,58,opt,name=close_unused_direct_messages,json=closeUnusedDirectMessages,proto3" json:"close_unused_direct_messages,omitempty"`
	EnablePreviewFeatures                             bool     `protobuf:"varint,59,opt,name=enable_preview_features,json=enablePreviewFeatures,proto3" json:"enable_preview_features,omitempty"`
	EnableTutorial                                    bool     `protobuf:"varint,60,opt,name=enable_tutorial,json=enableTutorial,proto3" json:"enable_tutorial,omitempty"`
	ExperimentalEnableDefaultChannelLeaveJoinMessages bool     `protobuf:"varint,61,opt,name=experimental_enable_default_channel_leave_join_messages,json=experimentalEnableDefaultChannelLeaveJoinMessages,proto3" json:"experimental_enable_default_channel_leave_join_messages,omitempty"`
	ExperimentalGroupUnreadChannels                   string   `protobuf:"bytes,62,opt,name=experimental_group_unread_channels,json=experimentalGroupUnreadChannels,proto3" json:"experimental_group_unread_channels,omitempty"`
	ImageProxyType                                    string   `protobuf:"bytes,63,opt,name=image_proxy_type,json=imageProxyType,proto3" json:"image_proxy_type,omitempty"`
	ImageProxyURL                                     string   `protobuf:"bytes,64,opt,name=image_proxy_url,json=imageProxyUrl,proto3" json:"image_proxy_url,omitempty"`
	ImageProxyOptions                                 string   `protobuf:"bytes,65,opt,name=image_proxy_options,json=imageProxyOptions,proto3" json:"image_proxy_options,omitempty"`
	EnableAPITeamDeletion                             bool     `protobuf:"varint,66,opt,name=enable_apiteam_deletion,json=enableApiteamDeletion,proto3" json:"enable_apiteam_deletion,omitempty"`
	ExperimentalEnableHardenedMode                    bool     `protobuf:"varint,67,opt,name=experimental_enable_hardened_mode,json=experimentalEnableHardenedMode,proto3" json:"experimental_enable_hardened_mode,omitempty"`
	ExperimentalLimitClientConfig                     bool     `protobuf:"varint,68,opt,name=experimental_limit_client_config,json=experimentalLimitClientConfig,proto3" json:"experimental_limit_client_config,omitempty"`
	EnableEmailInvitations                            bool     `protobuf:"varint,69,opt,name=enable_email_invitations,json=enableEmailInvitations,proto3" json:"enable_email_invitations,omitempty"`
	XXX_NoUnkeyedLiteral                              struct{} `json:"-"`
	XXX_unrecognized                                  []byte   `json:"-"`
	XXX_sizecache                                     int32    `json:"-"`
}

func (m *ServiceSettings) Reset()         { *m = ServiceSettings{} }
func (m *ServiceSettings) String() string { return proto.CompactTextString(m) }
func (*ServiceSettings) ProtoMessage()    {}
func (*ServiceSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{51}
}
func (m *ServiceSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ServiceSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ServiceSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ServiceSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceSettings.Merge(dst, src)
}
func (m *ServiceSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ServiceSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceSettings proto.InternalMessageInfo

type Session struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Token                string        `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	CreateAt             int64         `protobuf:"varint,3,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	ExpiresAt            int64         `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	LastActivityAt       int64         `protobuf:"varint,5,opt,name=last_activity_at,json=lastActivityAt,proto3" json:"last_activity_at,omitempty"`
	UserId               string        `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string        `protobuf:"bytes,7,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Roles                string        `protobuf:"bytes,8,opt,name=roles,proto3" json:"roles,omitempty"`
	IsOAuth              bool          `protobuf:"varint,9,opt,name=is_oauth,json=isOauth,proto3" json:"is_oauth,omitempty"`
	Props                StringMap     `protobuf:"bytes,10,rep,name=props,casttype=StringMap" json:"props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TeamMembers          []*TeamMember `protobuf:"bytes,11,rep,name=team_members,json=teamMembers" json:"team_members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{52}
}
func (m *Session) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Session.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(dst, src)
}
func (m *Session) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

type SlackAttachment struct {
	Id                   int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fallback             string                  `protobuf:"bytes,2,opt,name=fallback,proto3" json:"fallback,omitempty"`
	Color                string                  `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Pretext              string                  `protobuf:"bytes,4,opt,name=pretext,proto3" json:"pretext,omitempty"`
	AuthorName           string                  `protobuf:"bytes,5,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	AuthorLink           string                  `protobuf:"bytes,6,opt,name=author_link,json=authorLink,proto3" json:"author_link,omitempty"`
	AuthorIcon           string                  `protobuf:"bytes,7,opt,name=author_icon,json=authorIcon,proto3" json:"author_icon,omitempty"`
	Title                string                  `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	TitleLink            string                  `protobuf:"bytes,9,opt,name=title_link,json=titleLink,proto3" json:"title_link,omitempty"`
	Text                 string                  `protobuf:"bytes,10,opt,name=text,proto3" json:"text,omitempty"`
	Fields               []*SlackAttachmentField `protobuf:"bytes,11,rep,name=fields" json:"fields,omitempty"`
	ImageURL             string                  `protobuf:"bytes,12,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	ThumbURL             string                  `protobuf:"bytes,13,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`
	Footer               string                  `protobuf:"bytes,14,opt,name=footer,proto3" json:"footer,omitempty"`
	FooterIcon           string                  `protobuf:"bytes,15,opt,name=footer_icon,json=footerIcon,proto3" json:"footer_icon,omitempty"`
	Actions              []*PostAction           `protobuf:"bytes,16,rep,name=actions" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SlackAttachment) Reset()         { *m = SlackAttachment{} }
func (m *SlackAttachment) String() string { return proto.CompactTextString(m) }
func (*SlackAttachment) ProtoMessage()    {}
func (*SlackAttachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{53}
}
func (m *SlackAttachment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SlackAttachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SlackAttachment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SlackAttachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlackAttachment.Merge(dst, src)
}
func (m *SlackAttachment) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SlackAttachment) XXX_DiscardUnknown() {
	xxx_messageInfo_SlackAttachment.DiscardUnknown(m)
}

var xxx_messageInfo_SlackAttachment proto.InternalMessageInfo

type SlackAttachmentField struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Short                bool     `protobuf:"varint,2,opt,name=short,proto3" json:"short,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlackAttachmentField) Reset()         { *m = SlackAttachmentField{} }
func (m *SlackAttachmentField) String() string { return proto.CompactTextString(m) }
func (*SlackAttachmentField) ProtoMessage()    {}
func (*SlackAttachmentField) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{54}
}
func (m *SlackAttachmentField) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SlackAttachmentField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SlackAttachmentField.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SlackAttachmentField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlackAttachmentField.Merge(dst, src)
}
func (m *SlackAttachmentField) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SlackAttachmentField) XXX_DiscardUnknown() {
	xxx_messageInfo_SlackAttachmentField.DiscardUnknown(m)
}

var xxx_messageInfo_SlackAttachmentField proto.InternalMessageInfo

type SqlSettings struct {
	DriverName                  string   `protobuf:"bytes,1,opt,name=driver_name,json=driverName,proto3" json:"driver_name,omitempty"`
	DataSource                  string   `protobuf:"bytes,2,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	DataSourceReplicas          []string `protobuf:"bytes,3,rep,name=data_source_replicas,json=dataSourceReplicas" json:"data_source_replicas,omitempty"`
	DataSourceSearchReplicas    []string `protobuf:"bytes,4,rep,name=data_source_search_replicas,json=dataSourceSearchReplicas" json:"data_source_search_replicas,omitempty"`
	MaxIdleConns                int      `protobuf:"varint,5,opt,name=max_idle_conns,json=maxIdleConns,proto3,casttype=int" json:"max_idle_conns,omitempty"`
	ConnMaxLifetimeMilliseconds int      `protobuf:"varint,6,opt,name=conn_max_lifetime_milliseconds,json=connMaxLifetimeMilliseconds,proto3,casttype=int" json:"conn_max_lifetime_milliseconds,omitempty"`
	MaxOpenConns                int      `protobuf:"varint,7,opt,name=max_open_conns,json=maxOpenConns,proto3,casttype=int" json:"max_open_conns,omitempty"`
	Trace                       bool     `protobuf:"varint,8,opt,name=trace,proto3" json:"trace,omitempty"`
	AtRestEncryptKey            string   `protobuf:"bytes,9,opt,name=at_rest_encrypt_key,json=atRestEncryptKey,proto3" json:"at_rest_encrypt_key,omitempty"`
	QueryTimeout                int      `protobuf:"varint,10,opt,name=query_timeout,json=queryTimeout,proto3,casttype=int" json:"query_timeout,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *SqlSettings) Reset()         { *m = SqlSettings{} }
func (m *SqlSettings) String() string { return proto.CompactTextString(m) }
func (*SqlSettings) ProtoMessage()    {}
func (*SqlSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{55}
}
func (m *SqlSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SqlSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SqlSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SqlSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqlSettings.Merge(dst, src)
}
func (m *SqlSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SqlSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SqlSettings.DiscardUnknown(m)
}

var xxx_messageInfo_SqlSettings proto.InternalMessageInfo

type Status struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Manual               bool     `protobuf:"varint,3,opt,name=manual,proto3" json:"manual,omitempty"`
	LastActivityAt       int64    `protobuf:"varint,4,opt,name=last_activity_at,json=lastActivityAt,proto3" json:"last_activity_at,omitempty"`
	ActiveChannel        string   `protobuf:"bytes,5,opt,name=active_channel,json=activeChannel,proto3" json:"active_channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{56}
}
func (m *Status) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Status.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(dst, src)
}
func (m *Status) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

type SupportSettings struct {
	TermsOfServiceLink   string   `protobuf:"bytes,1,opt,name=terms_of_service_link,json=termsOfServiceLink,proto3" json:"terms_of_service_link,omitempty"`
	PrivacyPolicyLink    string   `protobuf:"bytes,2,opt,name=privacy_policy_link,json=privacyPolicyLink,proto3" json:"privacy_policy_link,omitempty"`
	AboutLink            string   `protobuf:"bytes,3,opt,name=about_link,json=aboutLink,proto3" json:"about_link,omitempty"`
	HelpLink             string   `protobuf:"bytes,4,opt,name=help_link,json=helpLink,proto3" json:"help_link,omitempty"`
	ReportAProblemLink   string   `protobuf:"bytes,5,opt,name=report_aproblem_link,json=reportAproblemLink,proto3" json:"report_aproblem_link,omitempty"`
	SupportEmail         string   `protobuf:"bytes,6,opt,name=support_email,json=supportEmail,proto3" json:"support_email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SupportSettings) Reset()         { *m = SupportSettings{} }
func (m *SupportSettings) String() string { return proto.CompactTextString(m) }
func (*SupportSettings) ProtoMessage()    {}
func (*SupportSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{57}
}
func (m *SupportSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SupportSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SupportSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SupportSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SupportSettings.Merge(dst, src)
}
func (m *SupportSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SupportSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_SupportSettings.DiscardUnknown(m)
}

var xxx_messageInfo_SupportSettings proto.InternalMessageInfo

type SystemECDSAKey struct {
	Curve                string   `protobuf:"bytes,1,opt,name=curve,proto3" json:"curve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SystemECDSAKey) Reset()         { *m = SystemECDSAKey{} }
func (m *SystemECDSAKey) String() string { return proto.CompactTextString(m) }
func (*SystemECDSAKey) ProtoMessage()    {}
func (*SystemECDSAKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{58}
}
func (m *SystemECDSAKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemECDSAKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemECDSAKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SystemECDSAKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemECDSAKey.Merge(dst, src)
}
func (m *SystemECDSAKey) XXX_Size() int {
	return m.ProtoSize()
}
func (m *SystemECDSAKey) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemECDSAKey.DiscardUnknown(m)
}

var xxx_messageInfo_SystemECDSAKey proto.InternalMessageInfo

type Team struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt             int64    `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64    `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	DeleteAt             int64    `protobuf:"varint,4,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	DisplayName          string   `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Email                string   `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Type                 string   `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	CompanyName          string   `protobuf:"bytes,10,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	AllowedDomains       string   `protobuf:"bytes,11,opt,name=allowed_domains,json=allowedDomains,proto3" json:"allowed_domains,omitempty"`
	InviteId             string   `protobuf:"bytes,12,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"`
	AllowOpenInvite      bool     `protobuf:"varint,13,opt,name=allow_open_invite,json=allowOpenInvite,proto3" json:"allow_open_invite,omitempty"`
	LastTeamIconUpdate   int64    `protobuf:"varint,14,opt,name=last_team_icon_update,json=lastTeamIconUpdate,proto3" json:"last_team_icon_update,omitempty"`
	SchemeId             string   `protobuf:"bytes,15,opt,name=scheme_id,json=schemeId,proto3" json:"scheme_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Team) Reset()         { *m = Team{} }
func (m *Team) String() string { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()    {}
func (*Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{59}
}
func (m *Team) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Team.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Team.Merge(dst, src)
}
func (m *Team) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Team) XXX_DiscardUnknown() {
	xxx_messageInfo_Team.DiscardUnknown(m)
}

var xxx_messageInfo_Team proto.InternalMessageInfo

type TeamMember struct {
	TeamId               string   `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles                string   `protobuf:"bytes,3,opt,name=roles,proto3" json:"roles,omitempty"`
	DeleteAt             int64    `protobuf:"varint,4,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	SchemeUser           bool     `protobuf:"varint,5,opt,name=scheme_user,json=schemeUser,proto3" json:"scheme_user,omitempty"`
	SchemeAdmin          bool     `protobuf:"varint,6,opt,name=scheme_admin,json=schemeAdmin,proto3" json:"scheme_admin,omitempty"`
	ExplicitRoles        string   `protobuf:"bytes,7,opt,name=explicit_roles,json=explicitRoles,proto3" json:"explicit_roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TeamMember) Reset()         { *m = TeamMember{} }
func (m *TeamMember) String() string { return proto.CompactTextString(m) }
func (*TeamMember) ProtoMessage()    {}
func (*TeamMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{60}
}
func (m *TeamMember) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeamMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeamMember.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeamMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamMember.Merge(dst, src)
}
func (m *TeamMember) XXX_Size() int {
	return m.ProtoSize()
}
func (m *TeamMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamMember.DiscardUnknown(m)
}

var xxx_messageInfo_TeamMember proto.InternalMessageInfo

type TeamSettings struct {
	SiteName                            string   `protobuf:"bytes,1,opt,name=site_name,json=siteName,proto3" json:"site_name,omitempty"`
	MaxUsersPerTeam                     int      `protobuf:"varint,2,opt,name=max_users_per_team,json=maxUsersPerTeam,proto3,casttype=int" json:"max_users_per_team,omitempty"`
	EnableTeamCreation                  bool     `protobuf:"varint,3,opt,name=enable_team_creation,json=enableTeamCreation,proto3" json:"enable_team_creation,omitempty"`
	EnableUserCreation                  bool     `protobuf:"varint,4,opt,name=enable_user_creation,json=enableUserCreation,proto3" json:"enable_user_creation,omitempty"`
	EnableOpenServer                    bool     `protobuf:"varint,5,opt,name=enable_open_server,json=enableOpenServer,proto3" json:"enable_open_server,omitempty"`
	EnableUserDeactivation              bool     `protobuf:"varint,6,opt,name=enable_user_deactivation,json=enableUserDeactivation,proto3" json:"enable_user_deactivation,omitempty"`
	RestrictCreationToDomains           string   `protobuf:"bytes,7,opt,name=restrict_creation_to_domains,json=restrictCreationToDomains,proto3" json:"restrict_creation_to_domains,omitempty"`
	EnableCustomBrand                   bool     `protobuf:"varint,8,opt,name=enable_custom_brand,json=enableCustomBrand,proto3" json:"enable_custom_brand,omitempty"`
	CustomBrandText                     string   `protobuf:"bytes,9,opt,name=custom_brand_text,json=customBrandText,proto3" json:"custom_brand_text,omitempty"`
	CustomDescriptionText               string   `protobuf:"bytes,10,opt,name=custom_description_text,json=customDescriptionText,proto3" json:"custom_description_text,omitempty"`
	RestrictDirectMessage               string   `protobuf:"bytes,11,opt,name=restrict_direct_message,json=restrictDirectMessage,proto3" json:"restrict_direct_message,omitempty"`
	RestrictTeamInvite                  string   `protobuf:"bytes,12,opt,name=restrict_team_invite,json=restrictTeamInvite,proto3" json:"restrict_team_invite,omitempty"`
	RestrictPublicChannelManagement     string   `protobuf:"bytes,13,opt,name=restrict_public_channel_management,json=restrictPublicChannelManagement,proto3" json:"restrict_public_channel_management,omitempty"`
	RestrictPrivateChannelManagement    string   `protobuf:"bytes,14,opt,name=restrict_private_channel_management,json=restrictPrivateChannelManagement,proto3" json:"restrict_private_channel_management,omitempty"`
	RestrictPublicChannelCreation       string   `protobuf:"bytes,15,opt,name=restrict_public_channel_creation,json=restrictPublicChannelCreation,proto3" json:"restrict_public_channel_creation,omitempty"`
	RestrictPrivateChannelCreation      string   `protobuf:"bytes,16,opt,name=restrict_private_channel_creation,json=restrictPrivateChannelCreation,proto3" json:"restrict_private_channel_creation,omitempty"`
	RestrictPublicChannelDeletion       string   `protobuf:"bytes,17,opt,name=restrict_public_channel_deletion,json=restrictPublicChannelDeletion,proto3" json:"restrict_public_channel_deletion,omitempty"`
	RestrictPrivateChannelDeletion      string   `protobuf:"bytes,18,opt,name=restrict_private_channel_deletion,json=restrictPrivateChannelDeletion,proto3" json:"restrict_private_channel_deletion,omitempty"`
	RestrictPrivateChannelManageMembers string   `protobuf:"bytes,19,opt,name=restrict_private_channel_manage_members,json=restrictPrivateChannelManageMembers,proto3" json:"restrict_private_channel_manage_members,omitempty"`
	EnableXToLeaveChannelsFromLHS       bool     `protobuf:"varint,20,opt,name=enable_xto_leave_channels_from_lhs,json=enableXtoLeaveChannelsFromLhs,proto3" json:"enable_xto_leave_channels_from_lhs,omitempty"`
	UserStatusAwayTimeout               int64    `protobuf:"varint,21,opt,name=user_status_away_timeout,json=userStatusAwayTimeout,proto3" json:"user_status_away_timeout,omitempty"`
	MaxChannelsPerTeam                  int64    `protobuf:"varint,22,opt,name=max_channels_per_team,json=maxChannelsPerTeam,proto3" json:"max_channels_per_team,omitempty"`
	MaxNotificationsPerChannel          int64    `protobuf:"varint,23,opt,name=max_notifications_per_channel,json=maxNotificationsPerChannel,proto3" json:"max_notifications_per_channel,omitempty"`
	EnableConfirmNotificationsToChannel bool     `protobuf:"varint,24,opt,name=enable_confirm_notifications_to_channel,json=enableConfirmNotificationsToChannel,proto3" json:"enable_confirm_notifications_to_channel,omitempty"`
	TeammateNameDisplay                 string   `protobuf:"bytes,25,opt,name=teammate_name_display,json=teammateNameDisplay,proto3" json:"teammate_name_display,omitempty"`
	ExperimentalEnableAutomaticReplies  bool     `protobuf:"varint,26,opt,name=experimental_enable_automatic_replies,json=experimentalEnableAutomaticReplies,proto3" json:"experimental_enable_automatic_replies,omitempty"`
	ExperimentalHideTownSquareinLHS     bool     `protobuf:"varint,27,opt,name=experimental_hide_town_squarein_lhs,json=experimentalHideTownSquareinLhs,proto3" json:"experimental_hide_town_squarein_lhs,omitempty"`
	ExperimentalTownSquareIsReadOnly    bool     `protobuf:"varint,28,opt,name=experimental_town_square_is_read_only,json=experimentalTownSquareIsReadOnly,proto3" json:"experimental_town_square_is_read_only,omitempty"`
	ExperimentalPrimaryTeam             string   `protobuf:"bytes,29,opt,name=experimental_primary_team,json=experimentalPrimaryTeam,proto3" json:"experimental_primary_team,omitempty"`
	XXX_NoUnkeyedLiteral                struct{} `json:"-"`
	XXX_unrecognized                    []byte   `json:"-"`
	XXX_sizecache                       int32    `json:"-"`
}

func (m *TeamSettings) Reset()         { *m = TeamSettings{} }
func (m *TeamSettings) String() string { return proto.CompactTextString(m) }
func (*TeamSettings) ProtoMessage()    {}
func (*TeamSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{61}
}
func (m *TeamSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TeamSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TeamSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TeamSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TeamSettings.Merge(dst, src)
}
func (m *TeamSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *TeamSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TeamSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TeamSettings proto.InternalMessageInfo

type ThemeSettings struct {
	EnableThemeSelection bool     `protobuf:"varint,1,opt,name=enable_theme_selection,json=enableThemeSelection,proto3" json:"enable_theme_selection,omitempty"`
	DefaultTheme         string   `protobuf:"bytes,2,opt,name=default_theme,json=defaultTheme,proto3" json:"default_theme,omitempty"`
	AllowCustomThemes    bool     `protobuf:"varint,3,opt,name=allow_custom_themes,json=allowCustomThemes,proto3" json:"allow_custom_themes,omitempty"`
	AllowedThemes        []string `protobuf:"bytes,4,rep,name=allowed_themes,json=allowedThemes" json:"allowed_themes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ThemeSettings) Reset()         { *m = ThemeSettings{} }
func (m *ThemeSettings) String() string { return proto.CompactTextString(m) }
func (*ThemeSettings) ProtoMessage()    {}
func (*ThemeSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{62}
}
func (m *ThemeSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ThemeSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ThemeSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ThemeSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThemeSettings.Merge(dst, src)
}
func (m *ThemeSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *ThemeSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ThemeSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ThemeSettings proto.InternalMessageInfo

type TimezoneSettings struct {
	SupportedTimezonesPath string   `protobuf:"bytes,1,opt,name=supported_timezones_path,json=supportedTimezonesPath,proto3" json:"supported_timezones_path,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *TimezoneSettings) Reset()         { *m = TimezoneSettings{} }
func (m *TimezoneSettings) String() string { return proto.CompactTextString(m) }
func (*TimezoneSettings) ProtoMessage()    {}
func (*TimezoneSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{63}
}
func (m *TimezoneSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimezoneSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimezoneSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *TimezoneSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimezoneSettings.Merge(dst, src)
}
func (m *TimezoneSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *TimezoneSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_TimezoneSettings.DiscardUnknown(m)
}

var xxx_messageInfo_TimezoneSettings proto.InternalMessageInfo

type User struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateAt             int64     `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	UpdateAt             int64     `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	DeleteAt             int64     `protobuf:"varint,4,opt,name=delete_at,json=deleteAt,proto3" json:"delete_at,omitempty"`
	Username             string    `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password             string    `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	AuthData             string    `protobuf:"bytes,7,opt,name=auth_data,json=authData,proto3" json:"auth_data,omitempty"`
	AuthService          string    `protobuf:"bytes,8,opt,name=auth_service,json=authService,proto3" json:"auth_service,omitempty"`
	Email                string    `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerified        bool      `protobuf:"varint,10,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Nickname             string    `protobuf:"bytes,11,opt,name=nickname,proto3" json:"nickname,omitempty"`
	FirstName            string    `protobuf:"bytes,12,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string    `protobuf:"bytes,13,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Position             string    `protobuf:"bytes,14,opt,name=position,proto3" json:"position,omitempty"`
	Roles                string    `protobuf:"bytes,15,opt,name=roles,proto3" json:"roles,omitempty"`
	AllowMarketing       bool      `protobuf:"varint,16,opt,name=allow_marketing,json=allowMarketing,proto3" json:"allow_marketing,omitempty"`
	Props                StringMap `protobuf:"bytes,17,rep,name=props,casttype=StringMap" json:"props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NotifyProps          StringMap `protobuf:"bytes,18,rep,name=notify_props,json=notifyProps,casttype=StringMap" json:"notify_props,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastPasswordUpdate   int64     `protobuf:"varint,19,opt,name=last_password_update,json=lastPasswordUpdate,proto3" json:"last_password_update,omitempty"`
	LastPictureUpdate    int64     `protobuf:"varint,20,opt,name=last_picture_update,json=lastPictureUpdate,proto3" json:"last_picture_update,omitempty"`
	FailedAttempts       int       `protobuf:"varint,21,opt,name=failed_attempts,json=failedAttempts,proto3,casttype=int" json:"failed_attempts,omitempty"`
	Locale               string    `protobuf:"bytes,22,opt,name=locale,proto3" json:"locale,omitempty"`
	Timezone             StringMap `protobuf:"bytes,23,rep,name=timezone,casttype=StringMap" json:"timezone,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MfaActive            bool      `protobuf:"varint,24,opt,name=mfa_active,json=mfaActive,proto3" json:"mfa_active,omitempty"`
	MfaSecret            string    `protobuf:"bytes,25,opt,name=mfa_secret,json=mfaSecret,proto3" json:"mfa_secret,omitempty"`
	LastActivityAt       int64     `protobuf:"varint,26,opt,name=last_activity_at,json=lastActivityAt,proto3" json:"last_activity_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{64}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return m.ProtoSize()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

type WebrtcSettings struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	GatewayWebsocketUrl  string   `protobuf:"bytes,2,opt,name=gateway_websocket_url,json=gatewayWebsocketUrl,proto3" json:"gateway_websocket_url,omitempty"`
	GatewayAdminUrl      string   `protobuf:"bytes,3,opt,name=gateway_admin_url,json=gatewayAdminUrl,proto3" json:"gateway_admin_url,omitempty"`
	GatewayAdminSecret   string   `protobuf:"bytes,4,opt,name=gateway_admin_secret,json=gatewayAdminSecret,proto3" json:"gateway_admin_secret,omitempty"`
	StunURI              string   `protobuf:"bytes,5,opt,name=stun_uri,json=stunUri,proto3" json:"stun_uri,omitempty"`
	TurnURI              string   `protobuf:"bytes,6,opt,name=turn_uri,json=turnUri,proto3" json:"turn_uri,omitempty"`
	TurnUsername         string   `protobuf:"bytes,7,opt,name=turn_username,json=turnUsername,proto3" json:"turn_username,omitempty"`
	TurnSharedKey        string   `protobuf:"bytes,8,opt,name=turn_shared_key,json=turnSharedKey,proto3" json:"turn_shared_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebrtcSettings) Reset()         { *m = WebrtcSettings{} }
func (m *WebrtcSettings) String() string { return proto.CompactTextString(m) }
func (*WebrtcSettings) ProtoMessage()    {}
func (*WebrtcSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{65}
}
func (m *WebrtcSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebrtcSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebrtcSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebrtcSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebrtcSettings.Merge(dst, src)
}
func (m *WebrtcSettings) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebrtcSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_WebrtcSettings.DiscardUnknown(m)
}

var xxx_messageInfo_WebrtcSettings proto.InternalMessageInfo

type WebsocketBroadcast struct {
	OmitUsers             map[string]bool `protobuf:"bytes,1,rep,name=omit_users,json=omitUsers" json:"omit_users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	UserId                string          `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelId             string          `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TeamId                string          `protobuf:"bytes,4,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ContainsSanitizedData bool            `protobuf:"varint,5,opt,name=contains_sanitized_data,json=containsSanitizedData,proto3" json:"contains_sanitized_data,omitempty"`
	ContainsSensitiveData bool            `protobuf:"varint,6,opt,name=contains_sensitive_data,json=containsSensitiveData,proto3" json:"contains_sensitive_data,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *WebsocketBroadcast) Reset()         { *m = WebsocketBroadcast{} }
func (m *WebsocketBroadcast) String() string { return proto.CompactTextString(m) }
func (*WebsocketBroadcast) ProtoMessage()    {}
func (*WebsocketBroadcast) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{66}
}
func (m *WebsocketBroadcast) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebsocketBroadcast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebsocketBroadcast.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebsocketBroadcast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebsocketBroadcast.Merge(dst, src)
}
func (m *WebsocketBroadcast) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebsocketBroadcast) XXX_DiscardUnknown() {
	xxx_messageInfo_WebsocketBroadcast.DiscardUnknown(m)
}

var xxx_messageInfo_WebsocketBroadcast proto.InternalMessageInfo

type Scheduler_EnabledResponse struct {
	Result1              bool     `protobuf:"varint,1,opt,name=result1,proto3" json:"result1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scheduler_EnabledResponse) Reset()         { *m = Scheduler_EnabledResponse{} }
func (m *Scheduler_EnabledResponse) String() string { return proto.CompactTextString(m) }
func (*Scheduler_EnabledResponse) ProtoMessage()    {}
func (*Scheduler_EnabledResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{67}
}
func (m *Scheduler_EnabledResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_EnabledResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_EnabledResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_EnabledResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_EnabledResponse.Merge(dst, src)
}
func (m *Scheduler_EnabledResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_EnabledResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_EnabledResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_EnabledResponse proto.InternalMessageInfo

func (m *Scheduler_EnabledResponse) GetResult1() bool {
	if m != nil {
		return m.Result1
	}
	return false
}

type Scheduler_JobTypeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scheduler_JobTypeRequest) Reset()         { *m = Scheduler_JobTypeRequest{} }
func (m *Scheduler_JobTypeRequest) String() string { return proto.CompactTextString(m) }
func (*Scheduler_JobTypeRequest) ProtoMessage()    {}
func (*Scheduler_JobTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{68}
}
func (m *Scheduler_JobTypeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_JobTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_JobTypeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_JobTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_JobTypeRequest.Merge(dst, src)
}
func (m *Scheduler_JobTypeRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_JobTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_JobTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_JobTypeRequest proto.InternalMessageInfo

type Scheduler_JobTypeResponse struct {
	Result1              string   `protobuf:"bytes,1,opt,name=result1,proto3" json:"result1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scheduler_JobTypeResponse) Reset()         { *m = Scheduler_JobTypeResponse{} }
func (m *Scheduler_JobTypeResponse) String() string { return proto.CompactTextString(m) }
func (*Scheduler_JobTypeResponse) ProtoMessage()    {}
func (*Scheduler_JobTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{69}
}
func (m *Scheduler_JobTypeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_JobTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_JobTypeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_JobTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_JobTypeResponse.Merge(dst, src)
}
func (m *Scheduler_JobTypeResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_JobTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_JobTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_JobTypeResponse proto.InternalMessageInfo

func (m *Scheduler_JobTypeResponse) GetResult1() string {
	if m != nil {
		return m.Result1
	}
	return ""
}

type Scheduler_NameRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scheduler_NameRequest) Reset()         { *m = Scheduler_NameRequest{} }
func (m *Scheduler_NameRequest) String() string { return proto.CompactTextString(m) }
func (*Scheduler_NameRequest) ProtoMessage()    {}
func (*Scheduler_NameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{70}
}
func (m *Scheduler_NameRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_NameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_NameRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_NameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_NameRequest.Merge(dst, src)
}
func (m *Scheduler_NameRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_NameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_NameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_NameRequest proto.InternalMessageInfo

type Scheduler_NameResponse struct {
	Result1              string   `protobuf:"bytes,1,opt,name=result1,proto3" json:"result1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scheduler_NameResponse) Reset()         { *m = Scheduler_NameResponse{} }
func (m *Scheduler_NameResponse) String() string { return proto.CompactTextString(m) }
func (*Scheduler_NameResponse) ProtoMessage()    {}
func (*Scheduler_NameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{71}
}
func (m *Scheduler_NameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_NameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_NameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_NameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_NameResponse.Merge(dst, src)
}
func (m *Scheduler_NameResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_NameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_NameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_NameResponse proto.InternalMessageInfo

func (m *Scheduler_NameResponse) GetResult1() string {
	if m != nil {
		return m.Result1
	}
	return ""
}

type Scheduler_NextScheduleTimeRequest struct {
	Arg1                 *Config   `protobuf:"bytes,1,opt,name=arg1" json:"arg1,omitempty"`
	Arg2                 time.Time `protobuf:"bytes,2,opt,name=arg2,stdtime" json:"arg2"`
	Arg3                 bool      `protobuf:"varint,3,opt,name=arg3,proto3" json:"arg3,omitempty"`
	Arg4                 *Job      `protobuf:"bytes,4,opt,name=arg4" json:"arg4,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Scheduler_NextScheduleTimeRequest) Reset()         { *m = Scheduler_NextScheduleTimeRequest{} }
func (m *Scheduler_NextScheduleTimeRequest) String() string { return proto.CompactTextString(m) }
func (*Scheduler_NextScheduleTimeRequest) ProtoMessage()    {}
func (*Scheduler_NextScheduleTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{72}
}
func (m *Scheduler_NextScheduleTimeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_NextScheduleTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_NextScheduleTimeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_NextScheduleTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_NextScheduleTimeRequest.Merge(dst, src)
}
func (m *Scheduler_NextScheduleTimeRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_NextScheduleTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_NextScheduleTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_NextScheduleTimeRequest proto.InternalMessageInfo

func (m *Scheduler_NextScheduleTimeRequest) GetArg1() *Config {
	if m != nil {
		return m.Arg1
	}
	return nil
}

func (m *Scheduler_NextScheduleTimeRequest) GetArg2() time.Time {
	if m != nil {
		return m.Arg2
	}
	return time.Time{}
}

func (m *Scheduler_NextScheduleTimeRequest) GetArg3() bool {
	if m != nil {
		return m.Arg3
	}
	return false
}

func (m *Scheduler_NextScheduleTimeRequest) GetArg4() *Job {
	if m != nil {
		return m.Arg4
	}
	return nil
}

type Scheduler_ScheduleJobRequest struct {
	Arg1                 *Config  `protobuf:"bytes,1,opt,name=arg1" json:"arg1,omitempty"`
	Arg2                 bool     `protobuf:"varint,2,opt,name=arg2,proto3" json:"arg2,omitempty"`
	Arg3                 *Job     `protobuf:"bytes,3,opt,name=arg3" json:"arg3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Scheduler_ScheduleJobRequest) Reset()         { *m = Scheduler_ScheduleJobRequest{} }
func (m *Scheduler_ScheduleJobRequest) String() string { return proto.CompactTextString(m) }
func (*Scheduler_ScheduleJobRequest) ProtoMessage()    {}
func (*Scheduler_ScheduleJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{73}
}
func (m *Scheduler_ScheduleJobRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_ScheduleJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_ScheduleJobRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_ScheduleJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_ScheduleJobRequest.Merge(dst, src)
}
func (m *Scheduler_ScheduleJobRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_ScheduleJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_ScheduleJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_ScheduleJobRequest proto.InternalMessageInfo

func (m *Scheduler_ScheduleJobRequest) GetArg1() *Config {
	if m != nil {
		return m.Arg1
	}
	return nil
}

func (m *Scheduler_ScheduleJobRequest) GetArg2() bool {
	if m != nil {
		return m.Arg2
	}
	return false
}

func (m *Scheduler_ScheduleJobRequest) GetArg3() *Job {
	if m != nil {
		return m.Arg3
	}
	return nil
}

type Scheduler_ScheduleJobResponse struct {
	Result1              *Job      `protobuf:"bytes,1,opt,name=result1" json:"result1,omitempty"`
	Result2              *AppError `protobuf:"bytes,2,opt,name=result2" json:"result2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Scheduler_ScheduleJobResponse) Reset()         { *m = Scheduler_ScheduleJobResponse{} }
func (m *Scheduler_ScheduleJobResponse) String() string { return proto.CompactTextString(m) }
func (*Scheduler_ScheduleJobResponse) ProtoMessage()    {}
func (*Scheduler_ScheduleJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{74}
}
func (m *Scheduler_ScheduleJobResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Scheduler_ScheduleJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Scheduler_ScheduleJobResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Scheduler_ScheduleJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Scheduler_ScheduleJobResponse.Merge(dst, src)
}
func (m *Scheduler_ScheduleJobResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Scheduler_ScheduleJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Scheduler_ScheduleJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Scheduler_ScheduleJobResponse proto.InternalMessageInfo

func (m *Scheduler_ScheduleJobResponse) GetResult1() *Job {
	if m != nil {
		return m.Result1
	}
	return nil
}

func (m *Scheduler_ScheduleJobResponse) GetResult2() *AppError {
	if m != nil {
		return m.Result2
	}
	return nil
}

type WebSocketMessage_EventTypeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage_EventTypeRequest) Reset()         { *m = WebSocketMessage_EventTypeRequest{} }
func (m *WebSocketMessage_EventTypeRequest) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage_EventTypeRequest) ProtoMessage()    {}
func (*WebSocketMessage_EventTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{75}
}
func (m *WebSocketMessage_EventTypeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage_EventTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage_EventTypeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebSocketMessage_EventTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage_EventTypeRequest.Merge(dst, src)
}
func (m *WebSocketMessage_EventTypeRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebSocketMessage_EventTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage_EventTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage_EventTypeRequest proto.InternalMessageInfo

type WebSocketMessage_EventTypeResponse struct {
	Result1              string   `protobuf:"bytes,1,opt,name=result1,proto3" json:"result1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage_EventTypeResponse) Reset()         { *m = WebSocketMessage_EventTypeResponse{} }
func (m *WebSocketMessage_EventTypeResponse) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage_EventTypeResponse) ProtoMessage()    {}
func (*WebSocketMessage_EventTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{76}
}
func (m *WebSocketMessage_EventTypeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage_EventTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage_EventTypeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebSocketMessage_EventTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage_EventTypeResponse.Merge(dst, src)
}
func (m *WebSocketMessage_EventTypeResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebSocketMessage_EventTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage_EventTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage_EventTypeResponse proto.InternalMessageInfo

func (m *WebSocketMessage_EventTypeResponse) GetResult1() string {
	if m != nil {
		return m.Result1
	}
	return ""
}

type WebSocketMessage_IsValidRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage_IsValidRequest) Reset()         { *m = WebSocketMessage_IsValidRequest{} }
func (m *WebSocketMessage_IsValidRequest) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage_IsValidRequest) ProtoMessage()    {}
func (*WebSocketMessage_IsValidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{77}
}
func (m *WebSocketMessage_IsValidRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage_IsValidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage_IsValidRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebSocketMessage_IsValidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage_IsValidRequest.Merge(dst, src)
}
func (m *WebSocketMessage_IsValidRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebSocketMessage_IsValidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage_IsValidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage_IsValidRequest proto.InternalMessageInfo

type WebSocketMessage_IsValidResponse struct {
	Result1              bool     `protobuf:"varint,1,opt,name=result1,proto3" json:"result1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage_IsValidResponse) Reset()         { *m = WebSocketMessage_IsValidResponse{} }
func (m *WebSocketMessage_IsValidResponse) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage_IsValidResponse) ProtoMessage()    {}
func (*WebSocketMessage_IsValidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{78}
}
func (m *WebSocketMessage_IsValidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage_IsValidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage_IsValidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebSocketMessage_IsValidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage_IsValidResponse.Merge(dst, src)
}
func (m *WebSocketMessage_IsValidResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebSocketMessage_IsValidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage_IsValidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage_IsValidResponse proto.InternalMessageInfo

func (m *WebSocketMessage_IsValidResponse) GetResult1() bool {
	if m != nil {
		return m.Result1
	}
	return false
}

type WebSocketMessage_ToJsonRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage_ToJsonRequest) Reset()         { *m = WebSocketMessage_ToJsonRequest{} }
func (m *WebSocketMessage_ToJsonRequest) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage_ToJsonRequest) ProtoMessage()    {}
func (*WebSocketMessage_ToJsonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{79}
}
func (m *WebSocketMessage_ToJsonRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage_ToJsonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage_ToJsonRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebSocketMessage_ToJsonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage_ToJsonRequest.Merge(dst, src)
}
func (m *WebSocketMessage_ToJsonRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebSocketMessage_ToJsonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage_ToJsonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage_ToJsonRequest proto.InternalMessageInfo

type WebSocketMessage_ToJsonResponse struct {
	Result1              string   `protobuf:"bytes,1,opt,name=result1,proto3" json:"result1,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebSocketMessage_ToJsonResponse) Reset()         { *m = WebSocketMessage_ToJsonResponse{} }
func (m *WebSocketMessage_ToJsonResponse) String() string { return proto.CompactTextString(m) }
func (*WebSocketMessage_ToJsonResponse) ProtoMessage()    {}
func (*WebSocketMessage_ToJsonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{80}
}
func (m *WebSocketMessage_ToJsonResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebSocketMessage_ToJsonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebSocketMessage_ToJsonResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *WebSocketMessage_ToJsonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebSocketMessage_ToJsonResponse.Merge(dst, src)
}
func (m *WebSocketMessage_ToJsonResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *WebSocketMessage_ToJsonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WebSocketMessage_ToJsonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WebSocketMessage_ToJsonResponse proto.InternalMessageInfo

func (m *WebSocketMessage_ToJsonResponse) GetResult1() string {
	if m != nil {
		return m.Result1
	}
	return ""
}

type Worker_RunRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Worker_RunRequest) Reset()         { *m = Worker_RunRequest{} }
func (m *Worker_RunRequest) String() string { return proto.CompactTextString(m) }
func (*Worker_RunRequest) ProtoMessage()    {}
func (*Worker_RunRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{81}
}
func (m *Worker_RunRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Worker_RunRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Worker_RunRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Worker_RunRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worker_RunRequest.Merge(dst, src)
}
func (m *Worker_RunRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Worker_RunRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Worker_RunRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Worker_RunRequest proto.InternalMessageInfo

type Worker_RunResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Worker_RunResponse) Reset()         { *m = Worker_RunResponse{} }
func (m *Worker_RunResponse) String() string { return proto.CompactTextString(m) }
func (*Worker_RunResponse) ProtoMessage()    {}
func (*Worker_RunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{82}
}
func (m *Worker_RunResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Worker_RunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Worker_RunResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Worker_RunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worker_RunResponse.Merge(dst, src)
}
func (m *Worker_RunResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Worker_RunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Worker_RunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Worker_RunResponse proto.InternalMessageInfo

type Worker_StopRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Worker_StopRequest) Reset()         { *m = Worker_StopRequest{} }
func (m *Worker_StopRequest) String() string { return proto.CompactTextString(m) }
func (*Worker_StopRequest) ProtoMessage()    {}
func (*Worker_StopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{83}
}
func (m *Worker_StopRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Worker_StopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Worker_StopRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Worker_StopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worker_StopRequest.Merge(dst, src)
}
func (m *Worker_StopRequest) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Worker_StopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Worker_StopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Worker_StopRequest proto.InternalMessageInfo

type Worker_StopResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Worker_StopResponse) Reset()         { *m = Worker_StopResponse{} }
func (m *Worker_StopResponse) String() string { return proto.CompactTextString(m) }
func (*Worker_StopResponse) ProtoMessage()    {}
func (*Worker_StopResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_83a4831f39e34d4c, []int{84}
}
func (m *Worker_StopResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Worker_StopResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Worker_StopResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Worker_StopResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Worker_StopResponse.Merge(dst, src)
}
func (m *Worker_StopResponse) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Worker_StopResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Worker_StopResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Worker_StopResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AnalyticsSettings)(nil), "mmproto.AnalyticsSettings")
	proto.RegisterType((*AnnouncementSettings)(nil), "mmproto.AnnouncementSettings")
	proto.RegisterType((*AppError)(nil), "mmproto.AppError")
	proto.RegisterType((*Channel)(nil), "mmproto.Channel")
	proto.RegisterType((*ChannelMember)(nil), "mmproto.ChannelMember")
	proto.RegisterMapType((StringMap)(nil), "mmproto.ChannelMember.NotifyPropsEntry")
	proto.RegisterType((*ClientRequirements)(nil), "mmproto.ClientRequirements")
	proto.RegisterType((*ClusterSettings)(nil), "mmproto.ClusterSettings")
	proto.RegisterType((*Command)(nil), "mmproto.Command")
	proto.RegisterType((*CommandArgs)(nil), "mmproto.CommandArgs")
	proto.RegisterType((*CommandResponse)(nil), "mmproto.CommandResponse")
	proto.RegisterType((*ComplianceSettings)(nil), "mmproto.ComplianceSettings")
	proto.RegisterType((*Config)(nil), "mmproto.Config")
	proto.RegisterType((*Customer)(nil), "mmproto.Customer")
	proto.RegisterType((*DataRetentionSettings)(nil), "mmproto.DataRetentionSettings")
	proto.RegisterType((*DisplaySettings)(nil), "mmproto.DisplaySettings")
	proto.RegisterType((*ElasticsearchSettings)(nil), "mmproto.ElasticsearchSettings")
	proto.RegisterType((*EmailSettings)(nil), "mmproto.EmailSettings")
	proto.RegisterType((*ExperimentalSettings)(nil), "mmproto.ExperimentalSettings")
	proto.RegisterType((*ExtensionSettings)(nil), "mmproto.ExtensionSettings")
	proto.RegisterType((*Features)(nil), "mmproto.Features")
	proto.RegisterType((*FileInfo)(nil), "mmproto.FileInfo")
	proto.RegisterType((*FileSettings)(nil), "mmproto.FileSettings")
	proto.RegisterType((*GlobalRelayMessageExportSettings)(nil), "mmproto.GlobalRelayMessageExportSettings")
	proto.RegisterType((*Job)(nil), "mmproto.Job")
	proto.RegisterMapType((map[string]string)(nil), "mmproto.Job.DataEntry")
	proto.RegisterType((*JobSettings)(nil), "mmproto.JobSettings")
	proto.RegisterType((*LdapSettings)(nil), "mmproto.LdapSettings")
	proto.RegisterType((*LocalizationSettings)(nil), "mmproto.LocalizationSettings")
	proto.RegisterType((*LogSettings)(nil), "mmproto.LogSettings")
	proto.RegisterType((*Manifest)(nil), "mmproto.Manifest")
	proto.RegisterType((*ManifestExecutables)(nil), "mmproto.ManifestExecutables")
	proto.RegisterType((*ManifestServer)(nil), "mmproto.ManifestServer")
	proto.RegisterType((*ManifestWebapp)(nil), "mmproto.ManifestWebapp")
	proto.RegisterType((*MessageExportSettings)(nil), "mmproto.MessageExportSettings")
	proto.RegisterType((*MetricsSettings)(nil), "mmproto.MetricsSettings")
	proto.RegisterType((*NativeAppSettings)(nil), "mmproto.NativeAppSettings")
	proto.RegisterType((*PasswordSettings)(nil), "mmproto.PasswordSettings")
	proto.RegisterType((*PluginInfo)(nil), "mmproto.PluginInfo")
	proto.RegisterType((*PluginOption)(nil), "mmproto.PluginOption")
	proto.RegisterType((*PluginSetting)(nil), "mmproto.PluginSetting")
	proto.RegisterType((*PluginSettings)(nil), "mmproto.PluginSettings")
	proto.RegisterMapType((map[string]*PluginState)(nil), "mmproto.PluginSettings.PluginStatesEntry")
	proto.RegisterType((*PluginSettingsSchema)(nil), "mmproto.PluginSettingsSchema")
	proto.RegisterType((*PluginState)(nil), "mmproto.PluginState")
	proto.RegisterType((*Post)(nil), "mmproto.Post")
	proto.RegisterType((*PostAction)(nil), "mmproto.PostAction")
	proto.RegisterType((*PostActionIntegration)(nil), "mmproto.PostActionIntegration")
	proto.RegisterType((*Preference)(nil), "mmproto.Preference")
	proto.RegisterType((*PrivacySettings)(nil), "mmproto.PrivacySettings")
	proto.RegisterType((*RateLimitSettings)(nil), "mmproto.RateLimitSettings")
	proto.RegisterType((*Role)(nil), "mmproto.Role")
	proto.RegisterType((*SSOSettings)(nil), "mmproto.SSOSettings")
	proto.RegisterType((*SamlSettings)(nil), "mmproto.SamlSettings")
	proto.RegisterType((*ServiceSettings)(nil), "mmproto.ServiceSettings")
	proto.RegisterType((*Session)(nil), "mmproto.Session")
	proto.RegisterMapType((StringMap)(nil), "mmproto.Session.PropsEntry")
	proto.RegisterType((*SlackAttachment)(nil), "mmproto.SlackAttachment")
	proto.RegisterType((*SlackAttachmentField)(nil), "mmproto.SlackAttachmentField")
	proto.RegisterType((*SqlSettings)(nil), "mmproto.SqlSettings")
	proto.RegisterType((*Status)(nil), "mmproto.Status")
	proto.RegisterType((*SupportSettings)(nil), "mmproto.SupportSettings")
	proto.RegisterType((*SystemECDSAKey)(nil), "mmproto.SystemECDSAKey")
	proto.RegisterType((*Team)(nil), "mmproto.Team")
	proto.RegisterType((*TeamMember)(nil), "mmproto.TeamMember")
	proto.RegisterType((*TeamSettings)(nil), "mmproto.TeamSettings")
	proto.RegisterType((*ThemeSettings)(nil), "mmproto.ThemeSettings")
	proto.RegisterType((*TimezoneSettings)(nil), "mmproto.TimezoneSettings")
	proto.RegisterType((*User)(nil), "mmproto.User")
	proto.RegisterMapType((StringMap)(nil), "mmproto.User.NotifyPropsEntry")
	proto.RegisterMapType((StringMap)(nil), "mmproto.User.PropsEntry")
	proto.RegisterMapType((StringMap)(nil), "mmproto.User.TimezoneEntry")
	proto.RegisterType((*WebrtcSettings)(nil), "mmproto.WebrtcSettings")
	proto.RegisterType((*WebsocketBroadcast)(nil), "mmproto.WebsocketBroadcast")
	proto.RegisterMapType((map[string]bool)(nil), "mmproto.WebsocketBroadcast.OmitUsersEntry")
	proto.RegisterType((*Scheduler_EnabledResponse)(nil), "mmproto.Scheduler_EnabledResponse")
	proto.RegisterType((*Scheduler_JobTypeRequest)(nil), "mmproto.Scheduler_JobTypeRequest")
	proto.RegisterType((*Scheduler_JobTypeResponse)(nil), "mmproto.Scheduler_JobTypeResponse")
	proto.RegisterType((*Scheduler_NameRequest)(nil), "mmproto.Scheduler_NameRequest")
	proto.RegisterType((*Scheduler_NameResponse)(nil), "mmproto.Scheduler_NameResponse")
	proto.RegisterType((*Scheduler_NextScheduleTimeRequest)(nil), "mmproto.Scheduler_NextScheduleTimeRequest")
	proto.RegisterType((*Scheduler_ScheduleJobRequest)(nil), "mmproto.Scheduler_ScheduleJobRequest")
	proto.RegisterType((*Scheduler_ScheduleJobResponse)(nil), "mmproto.Scheduler_ScheduleJobResponse")
	proto.RegisterType((*WebSocketMessage_EventTypeRequest)(nil), "mmproto.WebSocketMessage_EventTypeRequest")
	proto.RegisterType((*WebSocketMessage_EventTypeResponse)(nil), "mmproto.WebSocketMessage_EventTypeResponse")
	proto.RegisterType((*WebSocketMessage_IsValidRequest)(nil), "mmproto.WebSocketMessage_IsValidRequest")
	proto.RegisterType((*WebSocketMessage_IsValidResponse)(nil), "mmproto.WebSocketMessage_IsValidResponse")
	proto.RegisterType((*WebSocketMessage_ToJsonRequest)(nil), "mmproto.WebSocketMessage_ToJsonRequest")
	proto.RegisterType((*WebSocketMessage_ToJsonResponse)(nil), "mmproto.WebSocketMessage_ToJsonResponse")
	proto.RegisterType((*Worker_RunRequest)(nil), "mmproto.Worker_RunRequest")
	proto.RegisterType((*Worker_RunResponse)(nil), "mmproto.Worker_RunResponse")
	proto.RegisterType((*Worker_StopRequest)(nil), "mmproto.Worker_StopRequest")
	proto.RegisterType((*Worker_StopResponse)(nil), "mmproto.Worker_StopResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Worker service

type WorkerClient interface {
	Worker_Run(ctx context.Context, in *Worker_RunRequest, opts ...grpc.CallOption) (*Worker_RunResponse, error)
	Worker_Stop(ctx context.Context, in *Worker_StopRequest, opts ...grpc.CallOption) (*Worker_StopResponse, error)
}

type workerClient struct {
	cc *grpc.ClientConn
}

func NewWorkerClient(cc *grpc.ClientConn) WorkerClient {
	return &workerClient{cc}
}

func (c *workerClient) Worker_Run(ctx context.Context, in *Worker_RunRequest, opts ...grpc.CallOption) (*Worker_RunResponse, error) {
	out := new(Worker_RunResponse)
	err := c.cc.Invoke(ctx, "/mmproto.Worker/Worker_Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workerClient) Worker_Stop(ctx context.Context, in *Worker_StopRequest, opts ...grpc.CallOption) (*Worker_StopResponse, error) {
	out := new(Worker_StopResponse)
	err := c.cc.Invoke(ctx, "/mmproto.Worker/Worker_Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Worker service

type WorkerServer interface {
	Worker_Run(context.Context, *Worker_RunRequest) (*Worker_RunResponse, error)
	Worker_Stop(context.Context, *Worker_StopRequest) (*Worker_StopResponse, error)
}

func RegisterWorkerServer(s *grpc.Server, srv WorkerServer) {
	s.RegisterService(&_Worker_serviceDesc, srv)
}

func _Worker_Worker_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Worker_RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Worker_Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Worker/Worker_Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Worker_Run(ctx, req.(*Worker_RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Worker_Worker_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Worker_StopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Worker_Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Worker/Worker_Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Worker_Stop(ctx, req.(*Worker_StopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Worker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mmproto.Worker",
	HandlerType: (*WorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Worker_Run",
			Handler:    _Worker_Worker_Run_Handler,
		},
		{
			MethodName: "Worker_Stop",
			Handler:    _Worker_Worker_Stop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/mattermost/mattermost-server/mmproto/model.proto",
}

// Client API for Scheduler service

type SchedulerClient interface {
	Scheduler_Enabled(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Scheduler_EnabledResponse, error)
	Scheduler_JobType(ctx context.Context, in *Scheduler_JobTypeRequest, opts ...grpc.CallOption) (*Scheduler_JobTypeResponse, error)
	Scheduler_Name(ctx context.Context, in *Scheduler_NameRequest, opts ...grpc.CallOption) (*Scheduler_NameResponse, error)
	Scheduler_NextScheduleTime(ctx context.Context, in *Scheduler_NextScheduleTimeRequest, opts ...grpc.CallOption) (*types.Timestamp, error)
	Scheduler_ScheduleJob(ctx context.Context, in *Scheduler_ScheduleJobRequest, opts ...grpc.CallOption) (*Scheduler_ScheduleJobResponse, error)
}

type schedulerClient struct {
	cc *grpc.ClientConn
}

func NewSchedulerClient(cc *grpc.ClientConn) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) Scheduler_Enabled(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Scheduler_EnabledResponse, error) {
	out := new(Scheduler_EnabledResponse)
	err := c.cc.Invoke(ctx, "/mmproto.Scheduler/Scheduler_Enabled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Scheduler_JobType(ctx context.Context, in *Scheduler_JobTypeRequest, opts ...grpc.CallOption) (*Scheduler_JobTypeResponse, error) {
	out := new(Scheduler_JobTypeResponse)
	err := c.cc.Invoke(ctx, "/mmproto.Scheduler/Scheduler_JobType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Scheduler_Name(ctx context.Context, in *Scheduler_NameRequest, opts ...grpc.CallOption) (*Scheduler_NameResponse, error) {
	out := new(Scheduler_NameResponse)
	err := c.cc.Invoke(ctx, "/mmproto.Scheduler/Scheduler_Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Scheduler_NextScheduleTime(ctx context.Context, in *Scheduler_NextScheduleTimeRequest, opts ...grpc.CallOption) (*types.Timestamp, error) {
	out := new(types.Timestamp)
	err := c.cc.Invoke(ctx, "/mmproto.Scheduler/Scheduler_NextScheduleTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *schedulerClient) Scheduler_ScheduleJob(ctx context.Context, in *Scheduler_ScheduleJobRequest, opts ...grpc.CallOption) (*Scheduler_ScheduleJobResponse, error) {
	out := new(Scheduler_ScheduleJobResponse)
	err := c.cc.Invoke(ctx, "/mmproto.Scheduler/Scheduler_ScheduleJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Scheduler service

type SchedulerServer interface {
	Scheduler_Enabled(context.Context, *Config) (*Scheduler_EnabledResponse, error)
	Scheduler_JobType(context.Context, *Scheduler_JobTypeRequest) (*Scheduler_JobTypeResponse, error)
	Scheduler_Name(context.Context, *Scheduler_NameRequest) (*Scheduler_NameResponse, error)
	Scheduler_NextScheduleTime(context.Context, *Scheduler_NextScheduleTimeRequest) (*types.Timestamp, error)
	Scheduler_ScheduleJob(context.Context, *Scheduler_ScheduleJobRequest) (*Scheduler_ScheduleJobResponse, error)
}

func RegisterSchedulerServer(s *grpc.Server, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_Scheduler_Enabled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Scheduler_Enabled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Scheduler/Scheduler_Enabled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Scheduler_Enabled(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Scheduler_JobType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scheduler_JobTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Scheduler_JobType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Scheduler/Scheduler_JobType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Scheduler_JobType(ctx, req.(*Scheduler_JobTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Scheduler_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scheduler_NameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Scheduler_Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Scheduler/Scheduler_Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Scheduler_Name(ctx, req.(*Scheduler_NameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Scheduler_NextScheduleTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scheduler_NextScheduleTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Scheduler_NextScheduleTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Scheduler/Scheduler_NextScheduleTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Scheduler_NextScheduleTime(ctx, req.(*Scheduler_NextScheduleTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Scheduler_Scheduler_ScheduleJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Scheduler_ScheduleJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).Scheduler_ScheduleJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.Scheduler/Scheduler_ScheduleJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).Scheduler_ScheduleJob(ctx, req.(*Scheduler_ScheduleJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mmproto.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Scheduler_Enabled",
			Handler:    _Scheduler_Scheduler_Enabled_Handler,
		},
		{
			MethodName: "Scheduler_JobType",
			Handler:    _Scheduler_Scheduler_JobType_Handler,
		},
		{
			MethodName: "Scheduler_Name",
			Handler:    _Scheduler_Scheduler_Name_Handler,
		},
		{
			MethodName: "Scheduler_NextScheduleTime",
			Handler:    _Scheduler_Scheduler_NextScheduleTime_Handler,
		},
		{
			MethodName: "Scheduler_ScheduleJob",
			Handler:    _Scheduler_Scheduler_ScheduleJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/mattermost/mattermost-server/mmproto/model.proto",
}

// Client API for WebSocketMessage service

type WebSocketMessageClient interface {
	WebSocketMessage_EventType(ctx context.Context, in *WebSocketMessage_EventTypeRequest, opts ...grpc.CallOption) (*WebSocketMessage_EventTypeResponse, error)
	WebSocketMessage_IsValid(ctx context.Context, in *WebSocketMessage_IsValidRequest, opts ...grpc.CallOption) (*WebSocketMessage_IsValidResponse, error)
	WebSocketMessage_ToJson(ctx context.Context, in *WebSocketMessage_ToJsonRequest, opts ...grpc.CallOption) (*WebSocketMessage_ToJsonResponse, error)
}

type webSocketMessageClient struct {
	cc *grpc.ClientConn
}

func NewWebSocketMessageClient(cc *grpc.ClientConn) WebSocketMessageClient {
	return &webSocketMessageClient{cc}
}

func (c *webSocketMessageClient) WebSocketMessage_EventType(ctx context.Context, in *WebSocketMessage_EventTypeRequest, opts ...grpc.CallOption) (*WebSocketMessage_EventTypeResponse, error) {
	out := new(WebSocketMessage_EventTypeResponse)
	err := c.cc.Invoke(ctx, "/mmproto.WebSocketMessage/WebSocketMessage_EventType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webSocketMessageClient) WebSocketMessage_IsValid(ctx context.Context, in *WebSocketMessage_IsValidRequest, opts ...grpc.CallOption) (*WebSocketMessage_IsValidResponse, error) {
	out := new(WebSocketMessage_IsValidResponse)
	err := c.cc.Invoke(ctx, "/mmproto.WebSocketMessage/WebSocketMessage_IsValid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webSocketMessageClient) WebSocketMessage_ToJson(ctx context.Context, in *WebSocketMessage_ToJsonRequest, opts ...grpc.CallOption) (*WebSocketMessage_ToJsonResponse, error) {
	out := new(WebSocketMessage_ToJsonResponse)
	err := c.cc.Invoke(ctx, "/mmproto.WebSocketMessage/WebSocketMessage_ToJson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WebSocketMessage service

type WebSocketMessageServer interface {
	WebSocketMessage_EventType(context.Context, *WebSocketMessage_EventTypeRequest) (*WebSocketMessage_EventTypeResponse, error)
	WebSocketMessage_IsValid(context.Context, *WebSocketMessage_IsValidRequest) (*WebSocketMessage_IsValidResponse, error)
	WebSocketMessage_ToJson(context.Context, *WebSocketMessage_ToJsonRequest) (*WebSocketMessage_ToJsonResponse, error)
}

func RegisterWebSocketMessageServer(s *grpc.Server, srv WebSocketMessageServer) {
	s.RegisterService(&_WebSocketMessage_serviceDesc, srv)
}

func _WebSocketMessage_WebSocketMessage_EventType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebSocketMessage_EventTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebSocketMessageServer).WebSocketMessage_EventType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.WebSocketMessage/WebSocketMessage_EventType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebSocketMessageServer).WebSocketMessage_EventType(ctx, req.(*WebSocketMessage_EventTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebSocketMessage_WebSocketMessage_IsValid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebSocketMessage_IsValidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebSocketMessageServer).WebSocketMessage_IsValid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.WebSocketMessage/WebSocketMessage_IsValid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebSocketMessageServer).WebSocketMessage_IsValid(ctx, req.(*WebSocketMessage_IsValidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebSocketMessage_WebSocketMessage_ToJson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebSocketMessage_ToJsonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebSocketMessageServer).WebSocketMessage_ToJson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mmproto.WebSocketMessage/WebSocketMessage_ToJson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebSocketMessageServer).WebSocketMessage_ToJson(ctx, req.(*WebSocketMessage_ToJsonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebSocketMessage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mmproto.WebSocketMessage",
	HandlerType: (*WebSocketMessageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "WebSocketMessage_EventType",
			Handler:    _WebSocketMessage_WebSocketMessage_EventType_Handler,
		},
		{
			MethodName: "WebSocketMessage_IsValid",
			Handler:    _WebSocketMessage_WebSocketMessage_IsValid_Handler,
		},
		{
			MethodName: "WebSocketMessage_ToJson",
			Handler:    _WebSocketMessage_WebSocketMessage_ToJson_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/mattermost/mattermost-server/mmproto/model.proto",
}

func (m *AnalyticsSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AnalyticsSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MaxUsersForStatistics != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxUsersForStatistics))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AnnouncementSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AnnouncementSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableBanner {
		dAtA[i] = 0x8
		i++
		if m.EnableBanner {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.BannerText) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BannerText)))
		i += copy(dAtA[i:], m.BannerText)
	}
	if len(m.BannerColor) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BannerColor)))
		i += copy(dAtA[i:], m.BannerColor)
	}
	if len(m.BannerTextColor) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BannerTextColor)))
		i += copy(dAtA[i:], m.BannerTextColor)
	}
	if m.AllowBannerDismissal {
		dAtA[i] = 0x28
		i++
		if m.AllowBannerDismissal {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AppError) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppError) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if len(m.DetailedError) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DetailedError)))
		i += copy(dAtA[i:], m.DetailedError)
	}
	if len(m.RequestId) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RequestId)))
		i += copy(dAtA[i:], m.RequestId)
	}
	if m.StatusCode != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.StatusCode))
	}
	if len(m.Where) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Where)))
		i += copy(dAtA[i:], m.Where)
	}
	if m.IsOAuth {
		dAtA[i] = 0x38
		i++
		if m.IsOAuth {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Channel) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Channel) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if len(m.TeamId) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TeamId)))
		i += copy(dAtA[i:], m.TeamId)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Header) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Header)))
		i += copy(dAtA[i:], m.Header)
	}
	if len(m.Purpose) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Purpose)))
		i += copy(dAtA[i:], m.Purpose)
	}
	if m.LastPostAt != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastPostAt))
	}
	if m.TotalMsgCount != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.TotalMsgCount))
	}
	if m.ExtraUpdateAt != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.ExtraUpdateAt))
	}
	if len(m.CreatorId) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CreatorId)))
		i += copy(dAtA[i:], m.CreatorId)
	}
	if len(m.SchemeId) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SchemeId)))
		i += copy(dAtA[i:], m.SchemeId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ChannelMember) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChannelMember) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ChannelId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ChannelId)))
		i += copy(dAtA[i:], m.ChannelId)
	}
	if len(m.UserId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.Roles) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Roles)))
		i += copy(dAtA[i:], m.Roles)
	}
	if m.LastViewedAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastViewedAt))
	}
	if m.MsgCount != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MsgCount))
	}
	if m.MentionCount != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MentionCount))
	}
	if len(m.NotifyProps) > 0 {
		for k, _ := range m.NotifyProps {
			dAtA[i] = 0x3a
			i++
			v := m.NotifyProps[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if m.LastUpdateAt != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastUpdateAt))
	}
	if m.SchemeUser {
		dAtA[i] = 0x48
		i++
		if m.SchemeUser {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SchemeAdmin {
		dAtA[i] = 0x50
		i++
		if m.SchemeAdmin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ExplicitRoles) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ExplicitRoles)))
		i += copy(dAtA[i:], m.ExplicitRoles)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ClientRequirements) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClientRequirements) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AndroidLatestVersion) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AndroidLatestVersion)))
		i += copy(dAtA[i:], m.AndroidLatestVersion)
	}
	if len(m.AndroidMinVersion) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AndroidMinVersion)))
		i += copy(dAtA[i:], m.AndroidMinVersion)
	}
	if len(m.DesktopLatestVersion) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DesktopLatestVersion)))
		i += copy(dAtA[i:], m.DesktopLatestVersion)
	}
	if len(m.DesktopMinVersion) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DesktopMinVersion)))
		i += copy(dAtA[i:], m.DesktopMinVersion)
	}
	if len(m.IosLatestVersion) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IosLatestVersion)))
		i += copy(dAtA[i:], m.IosLatestVersion)
	}
	if len(m.IosMinVersion) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IosMinVersion)))
		i += copy(dAtA[i:], m.IosMinVersion)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ClusterSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ClusterName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ClusterName)))
		i += copy(dAtA[i:], m.ClusterName)
	}
	if len(m.OverrideHostname) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.OverrideHostname)))
		i += copy(dAtA[i:], m.OverrideHostname)
	}
	if m.UseIpAddress {
		dAtA[i] = 0x20
		i++
		if m.UseIpAddress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.UseExperimentalGossip {
		dAtA[i] = 0x28
		i++
		if m.UseExperimentalGossip {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ReadOnlyConfig {
		dAtA[i] = 0x30
		i++
		if m.ReadOnlyConfig {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.GossipPort != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.GossipPort))
	}
	if m.StreamingPort != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.StreamingPort))
	}
	if m.MaxIdleConns != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxIdleConns))
	}
	if m.MaxIdleConnsPerHost != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxIdleConnsPerHost))
	}
	if m.IdleConnTimeoutMilliseconds != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.IdleConnTimeoutMilliseconds))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Command) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Command) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if len(m.CreatorId) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CreatorId)))
		i += copy(dAtA[i:], m.CreatorId)
	}
	if len(m.TeamId) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TeamId)))
		i += copy(dAtA[i:], m.TeamId)
	}
	if len(m.Trigger) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Trigger)))
		i += copy(dAtA[i:], m.Trigger)
	}
	if len(m.Method) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Method)))
		i += copy(dAtA[i:], m.Method)
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if len(m.IconURL) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IconURL)))
		i += copy(dAtA[i:], m.IconURL)
	}
	if m.AutoComplete {
		dAtA[i] = 0x60
		i++
		if m.AutoComplete {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.AutoCompleteDesc) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AutoCompleteDesc)))
		i += copy(dAtA[i:], m.AutoCompleteDesc)
	}
	if len(m.AutoCompleteHint) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AutoCompleteHint)))
		i += copy(dAtA[i:], m.AutoCompleteHint)
	}
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.URL) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.URL)))
		i += copy(dAtA[i:], m.URL)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CommandArgs) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommandArgs) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.ChannelId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ChannelId)))
		i += copy(dAtA[i:], m.ChannelId)
	}
	if len(m.TeamId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TeamId)))
		i += copy(dAtA[i:], m.TeamId)
	}
	if len(m.RootId) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RootId)))
		i += copy(dAtA[i:], m.RootId)
	}
	if len(m.ParentId) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ParentId)))
		i += copy(dAtA[i:], m.ParentId)
	}
	if len(m.Command) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Command)))
		i += copy(dAtA[i:], m.Command)
	}
	if len(m.SiteURL) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SiteURL)))
		i += copy(dAtA[i:], m.SiteURL)
	}
	dAtA[i] = 0x42
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.Session.ProtoSize()))
	n1, err := m.Session.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n1
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CommandResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CommandResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ResponseType) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ResponseType)))
		i += copy(dAtA[i:], m.ResponseType)
	}
	if len(m.Text) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Text)))
		i += copy(dAtA[i:], m.Text)
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if len(m.IconURL) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IconURL)))
		i += copy(dAtA[i:], m.IconURL)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.GotoLocation) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GotoLocation)))
		i += copy(dAtA[i:], m.GotoLocation)
	}
	if len(m.Attachments) > 0 {
		for _, msg := range m.Attachments {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintModel(dAtA, i, uint64(msg.ProtoSize()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ComplianceSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ComplianceSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Directory) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Directory)))
		i += copy(dAtA[i:], m.Directory)
	}
	if m.EnableDaily {
		dAtA[i] = 0x18
		i++
		if m.EnableDaily {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Config) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Config) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ServiceSettings.ProtoSize()))
	n2, err := m.ServiceSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n2
	dAtA[i] = 0x12
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.TeamSettings.ProtoSize()))
	n3, err := m.TeamSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n3
	dAtA[i] = 0x1a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ClientRequirements.ProtoSize()))
	n4, err := m.ClientRequirements.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n4
	dAtA[i] = 0x22
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.SqlSettings.ProtoSize()))
	n5, err := m.SqlSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n5
	dAtA[i] = 0x2a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.LogSettings.ProtoSize()))
	n6, err := m.LogSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n6
	dAtA[i] = 0x32
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.PasswordSettings.ProtoSize()))
	n7, err := m.PasswordSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n7
	dAtA[i] = 0x3a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.FileSettings.ProtoSize()))
	n8, err := m.FileSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n8
	dAtA[i] = 0x42
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.EmailSettings.ProtoSize()))
	n9, err := m.EmailSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n9
	dAtA[i] = 0x4a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ExtensionSettings.ProtoSize()))
	n10, err := m.ExtensionSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n10
	dAtA[i] = 0x52
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.RateLimitSettings.ProtoSize()))
	n11, err := m.RateLimitSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n11
	dAtA[i] = 0x5a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.PrivacySettings.ProtoSize()))
	n12, err := m.PrivacySettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n12
	dAtA[i] = 0x62
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.SupportSettings.ProtoSize()))
	n13, err := m.SupportSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n13
	dAtA[i] = 0x6a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.AnnouncementSettings.ProtoSize()))
	n14, err := m.AnnouncementSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n14
	dAtA[i] = 0x72
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ThemeSettings.ProtoSize()))
	n15, err := m.ThemeSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n15
	dAtA[i] = 0x7a
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.GitLabSettings.ProtoSize()))
	n16, err := m.GitLabSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n16
	dAtA[i] = 0x82
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.GoogleSettings.ProtoSize()))
	n17, err := m.GoogleSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n17
	dAtA[i] = 0x8a
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.Office365Settings.ProtoSize()))
	n18, err := m.Office365Settings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n18
	dAtA[i] = 0x92
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.LdapSettings.ProtoSize()))
	n19, err := m.LdapSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n19
	dAtA[i] = 0x9a
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ComplianceSettings.ProtoSize()))
	n20, err := m.ComplianceSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n20
	dAtA[i] = 0xa2
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.LocalizationSettings.ProtoSize()))
	n21, err := m.LocalizationSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n21
	dAtA[i] = 0xaa
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.SamlSettings.ProtoSize()))
	n22, err := m.SamlSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n22
	dAtA[i] = 0xb2
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.NativeAppSettings.ProtoSize()))
	n23, err := m.NativeAppSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n23
	dAtA[i] = 0xba
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ClusterSettings.ProtoSize()))
	n24, err := m.ClusterSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n24
	dAtA[i] = 0xc2
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.MetricsSettings.ProtoSize()))
	n25, err := m.MetricsSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n25
	dAtA[i] = 0xca
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ExperimentalSettings.ProtoSize()))
	n26, err := m.ExperimentalSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n26
	dAtA[i] = 0xd2
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.AnalyticsSettings.ProtoSize()))
	n27, err := m.AnalyticsSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n27
	dAtA[i] = 0xda
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.WebrtcSettings.ProtoSize()))
	n28, err := m.WebrtcSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n28
	dAtA[i] = 0xe2
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.ElasticsearchSettings.ProtoSize()))
	n29, err := m.ElasticsearchSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n29
	dAtA[i] = 0xea
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.DataRetentionSettings.ProtoSize()))
	n30, err := m.DataRetentionSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n30
	dAtA[i] = 0xf2
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.MessageExportSettings.ProtoSize()))
	n31, err := m.MessageExportSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n31
	dAtA[i] = 0xfa
	i++
	dAtA[i] = 0x1
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.JobSettings.ProtoSize()))
	n32, err := m.JobSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n32
	dAtA[i] = 0x82
	i++
	dAtA[i] = 0x2
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.PluginSettings.ProtoSize()))
	n33, err := m.PluginSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n33
	dAtA[i] = 0x8a
	i++
	dAtA[i] = 0x2
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.DisplaySettings.ProtoSize()))
	n34, err := m.DisplaySettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n34
	dAtA[i] = 0x92
	i++
	dAtA[i] = 0x2
	i++
	i = encodeVarintModel(dAtA, i, uint64(m.TimezoneSettings.ProtoSize()))
	n35, err := m.TimezoneSettings.MarshalTo(dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n35
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Customer) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Customer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Company) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Company)))
		i += copy(dAtA[i:], m.Company)
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DataRetentionSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DataRetentionSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableMessageDeletion {
		dAtA[i] = 0x8
		i++
		if m.EnableMessageDeletion {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableFileDeletion {
		dAtA[i] = 0x10
		i++
		if m.EnableFileDeletion {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MessageRetentionDays != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MessageRetentionDays))
	}
	if m.FileRetentionDays != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.FileRetentionDays))
	}
	if len(m.DeletionJobStartTime) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DeletionJobStartTime)))
		i += copy(dAtA[i:], m.DeletionJobStartTime)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DisplaySettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DisplaySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CustomUrlSchemes) > 0 {
		for _, s := range m.CustomUrlSchemes {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.ExperimentalTimezone {
		dAtA[i] = 0x10
		i++
		if m.ExperimentalTimezone {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ElasticsearchSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ElasticsearchSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ConnectionUrl) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ConnectionUrl)))
		i += copy(dAtA[i:], m.ConnectionUrl)
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if len(m.Password) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Password)))
		i += copy(dAtA[i:], m.Password)
	}
	if m.EnableIndexing {
		dAtA[i] = 0x20
		i++
		if m.EnableIndexing {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableSearching {
		dAtA[i] = 0x28
		i++
		if m.EnableSearching {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Sniff {
		dAtA[i] = 0x30
		i++
		if m.Sniff {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PostIndexReplicas != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.PostIndexReplicas))
	}
	if m.PostIndexShards != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.PostIndexShards))
	}
	if m.AggregatePostsAfterDays != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.AggregatePostsAfterDays))
	}
	if len(m.PostsAggregatorJobStartTime) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PostsAggregatorJobStartTime)))
		i += copy(dAtA[i:], m.PostsAggregatorJobStartTime)
	}
	if len(m.IndexPrefix) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IndexPrefix)))
		i += copy(dAtA[i:], m.IndexPrefix)
	}
	if m.LiveIndexingBatchSize != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LiveIndexingBatchSize))
	}
	if m.BulkIndexingTimeWindowSeconds != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.BulkIndexingTimeWindowSeconds))
	}
	if m.RequestTimeoutSeconds != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.RequestTimeoutSeconds))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *EmailSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmailSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableSignUpWithEmail {
		dAtA[i] = 0x8
		i++
		if m.EnableSignUpWithEmail {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableSignInWithEmail {
		dAtA[i] = 0x10
		i++
		if m.EnableSignInWithEmail {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableSignInWithUsername {
		dAtA[i] = 0x18
		i++
		if m.EnableSignInWithUsername {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SendEmailNotifications {
		dAtA[i] = 0x20
		i++
		if m.SendEmailNotifications {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.UseChannelInEmailNotifications {
		dAtA[i] = 0x28
		i++
		if m.UseChannelInEmailNotifications {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.RequireEmailVerification {
		dAtA[i] = 0x30
		i++
		if m.RequireEmailVerification {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.FeedbackName) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FeedbackName)))
		i += copy(dAtA[i:], m.FeedbackName)
	}
	if len(m.FeedbackEmail) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FeedbackEmail)))
		i += copy(dAtA[i:], m.FeedbackEmail)
	}
	if len(m.FeedbackOrganization) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FeedbackOrganization)))
		i += copy(dAtA[i:], m.FeedbackOrganization)
	}
	if m.EnableSMTPAuth {
		dAtA[i] = 0x50
		i++
		if m.EnableSMTPAuth {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.SMTPUsername) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SMTPUsername)))
		i += copy(dAtA[i:], m.SMTPUsername)
	}
	if len(m.SMTPPassword) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SMTPPassword)))
		i += copy(dAtA[i:], m.SMTPPassword)
	}
	if len(m.SMTPServer) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SMTPServer)))
		i += copy(dAtA[i:], m.SMTPServer)
	}
	if len(m.SMTPPort) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SMTPPort)))
		i += copy(dAtA[i:], m.SMTPPort)
	}
	if len(m.ConnectionSecurity) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ConnectionSecurity)))
		i += copy(dAtA[i:], m.ConnectionSecurity)
	}
	if len(m.InviteSalt) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.InviteSalt)))
		i += copy(dAtA[i:], m.InviteSalt)
	}
	if m.SendPushNotifications {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		if m.SendPushNotifications {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.PushNotificationServer) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PushNotificationServer)))
		i += copy(dAtA[i:], m.PushNotificationServer)
	}
	if len(m.PushNotificationContents) > 0 {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PushNotificationContents)))
		i += copy(dAtA[i:], m.PushNotificationContents)
	}
	if m.EnableEmailBatching {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableEmailBatching {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EmailBatchingBufferSize != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.EmailBatchingBufferSize))
	}
	if m.EmailBatchingInterval != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.EmailBatchingInterval))
	}
	if m.EnablePreviewModeBanner {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnablePreviewModeBanner {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SkipServerCertificateVerification {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		if m.SkipServerCertificateVerification {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.EmailNotificationContentsType) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.EmailNotificationContentsType)))
		i += copy(dAtA[i:], m.EmailNotificationContentsType)
	}
	if len(m.LoginButtonColor) > 0 {
		dAtA[i] = 0xd2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonColor)))
		i += copy(dAtA[i:], m.LoginButtonColor)
	}
	if len(m.LoginButtonBorderColor) > 0 {
		dAtA[i] = 0xda
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonBorderColor)))
		i += copy(dAtA[i:], m.LoginButtonBorderColor)
	}
	if len(m.LoginButtonTextColor) > 0 {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonTextColor)))
		i += copy(dAtA[i:], m.LoginButtonTextColor)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExperimentalSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExperimentalSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ClientSideCertEnable {
		dAtA[i] = 0x8
		i++
		if m.ClientSideCertEnable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ClientSideCertCheck) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ClientSideCertCheck)))
		i += copy(dAtA[i:], m.ClientSideCertCheck)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ExtensionSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtensionSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableExperimentalExtensions {
		dAtA[i] = 0x8
		i++
		if m.EnableExperimentalExtensions {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.AllowedExtensionsIDs) > 0 {
		for _, s := range m.AllowedExtensionsIDs {
			dAtA[i] = 0x12
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Features) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Features) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Users != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Users))
	}
	if m.LDAP {
		dAtA[i] = 0x10
		i++
		if m.LDAP {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MFA {
		dAtA[i] = 0x18
		i++
		if m.MFA {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.GoogleOAuth {
		dAtA[i] = 0x20
		i++
		if m.GoogleOAuth {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Office365OAuth {
		dAtA[i] = 0x28
		i++
		if m.Office365OAuth {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Compliance {
		dAtA[i] = 0x30
		i++
		if m.Compliance {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Cluster {
		dAtA[i] = 0x38
		i++
		if m.Cluster {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Metrics {
		dAtA[i] = 0x40
		i++
		if m.Metrics {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MHPNS {
		dAtA[i] = 0x48
		i++
		if m.MHPNS {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SAML {
		dAtA[i] = 0x50
		i++
		if m.SAML {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Elasticsearch {
		dAtA[i] = 0x58
		i++
		if m.Elasticsearch {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Announcement {
		dAtA[i] = 0x60
		i++
		if m.Announcement {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ThemeManagement {
		dAtA[i] = 0x68
		i++
		if m.ThemeManagement {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EmailNotificationContents {
		dAtA[i] = 0x70
		i++
		if m.EmailNotificationContents {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.DataRetention {
		dAtA[i] = 0x78
		i++
		if m.DataRetention {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MessageExport {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		if m.MessageExport {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.CustomPermissionsSchemes {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		if m.CustomPermissionsSchemes {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.FutureFeatures {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		if m.FutureFeatures {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FileInfo) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.CreatorId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CreatorId)))
		i += copy(dAtA[i:], m.CreatorId)
	}
	if len(m.PostId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PostId)))
		i += copy(dAtA[i:], m.PostId)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if len(m.Path) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Path)))
		i += copy(dAtA[i:], m.Path)
	}
	if len(m.ThumbnailPath) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ThumbnailPath)))
		i += copy(dAtA[i:], m.ThumbnailPath)
	}
	if len(m.PreviewPath) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PreviewPath)))
		i += copy(dAtA[i:], m.PreviewPath)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Extension) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Extension)))
		i += copy(dAtA[i:], m.Extension)
	}
	if m.Size != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Size))
	}
	if len(m.MimeType) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.MimeType)))
		i += copy(dAtA[i:], m.MimeType)
	}
	if m.Width != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Width))
	}
	if m.Height != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Height))
	}
	if m.HasPreviewImage {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		if m.HasPreviewImage {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FileSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableFileAttachments {
		dAtA[i] = 0x8
		i++
		if m.EnableFileAttachments {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableMobileUpload {
		dAtA[i] = 0x10
		i++
		if m.EnableMobileUpload {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableMobileDownload {
		dAtA[i] = 0x18
		i++
		if m.EnableMobileDownload {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.MaxFileSize != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxFileSize))
	}
	if len(m.DriverName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DriverName)))
		i += copy(dAtA[i:], m.DriverName)
	}
	if len(m.Directory) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Directory)))
		i += copy(dAtA[i:], m.Directory)
	}
	if m.EnablePublicLink {
		dAtA[i] = 0x38
		i++
		if m.EnablePublicLink {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.PublicLinkSalt) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PublicLinkSalt)))
		i += copy(dAtA[i:], m.PublicLinkSalt)
	}
	if len(m.InitialFont) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.InitialFont)))
		i += copy(dAtA[i:], m.InitialFont)
	}
	if len(m.AmazonS3AccessKeyId) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AmazonS3AccessKeyId)))
		i += copy(dAtA[i:], m.AmazonS3AccessKeyId)
	}
	if len(m.AmazonS3SecretAccessKey) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AmazonS3SecretAccessKey)))
		i += copy(dAtA[i:], m.AmazonS3SecretAccessKey)
	}
	if len(m.AmazonS3Bucket) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AmazonS3Bucket)))
		i += copy(dAtA[i:], m.AmazonS3Bucket)
	}
	if len(m.AmazonS3Region) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AmazonS3Region)))
		i += copy(dAtA[i:], m.AmazonS3Region)
	}
	if len(m.AmazonS3Endpoint) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AmazonS3Endpoint)))
		i += copy(dAtA[i:], m.AmazonS3Endpoint)
	}
	if m.AmazonS3SSL {
		dAtA[i] = 0x78
		i++
		if m.AmazonS3SSL {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.AmazonS3SignV2 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		if m.AmazonS3SignV2 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.AmazonS3SSE {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		if m.AmazonS3SSE {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.AmazonS3Trace {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		if m.AmazonS3Trace {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GlobalRelayMessageExportSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GlobalRelayMessageExportSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.CustomerType) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CustomerType)))
		i += copy(dAtA[i:], m.CustomerType)
	}
	if len(m.SmtpUsername) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SmtpUsername)))
		i += copy(dAtA[i:], m.SmtpUsername)
	}
	if len(m.SmtpPassword) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SmtpPassword)))
		i += copy(dAtA[i:], m.SmtpPassword)
	}
	if len(m.EmailAddress) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.EmailAddress)))
		i += copy(dAtA[i:], m.EmailAddress)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Job) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Job) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if m.Priority != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Priority))
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.StartAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.StartAt))
	}
	if m.LastActivityAt != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastActivityAt))
	}
	if len(m.Status) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Status)))
		i += copy(dAtA[i:], m.Status)
	}
	if m.Progress != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Progress))
	}
	if len(m.Data) > 0 {
		for k, _ := range m.Data {
			dAtA[i] = 0x4a
			i++
			v := m.Data[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *JobSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *JobSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RunJobs {
		dAtA[i] = 0x8
		i++
		if m.RunJobs {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.RunScheduler {
		dAtA[i] = 0x10
		i++
		if m.RunScheduler {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LdapSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LdapSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableSync {
		dAtA[i] = 0x10
		i++
		if m.EnableSync {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.LdapServer) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LdapServer)))
		i += copy(dAtA[i:], m.LdapServer)
	}
	if m.LdapPort != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LdapPort))
	}
	if len(m.ConnectionSecurity) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ConnectionSecurity)))
		i += copy(dAtA[i:], m.ConnectionSecurity)
	}
	if len(m.BaseDN) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BaseDN)))
		i += copy(dAtA[i:], m.BaseDN)
	}
	if len(m.BindUsername) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BindUsername)))
		i += copy(dAtA[i:], m.BindUsername)
	}
	if len(m.BindPassword) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BindPassword)))
		i += copy(dAtA[i:], m.BindPassword)
	}
	if len(m.UserFilter) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserFilter)))
		i += copy(dAtA[i:], m.UserFilter)
	}
	if len(m.FirstNameAttribute) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FirstNameAttribute)))
		i += copy(dAtA[i:], m.FirstNameAttribute)
	}
	if len(m.LastNameAttribute) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LastNameAttribute)))
		i += copy(dAtA[i:], m.LastNameAttribute)
	}
	if len(m.EmailAttribute) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.EmailAttribute)))
		i += copy(dAtA[i:], m.EmailAttribute)
	}
	if len(m.UsernameAttribute) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UsernameAttribute)))
		i += copy(dAtA[i:], m.UsernameAttribute)
	}
	if len(m.NicknameAttribute) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.NicknameAttribute)))
		i += copy(dAtA[i:], m.NicknameAttribute)
	}
	if len(m.IdAttribute) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IdAttribute)))
		i += copy(dAtA[i:], m.IdAttribute)
	}
	if len(m.PositionAttribute) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PositionAttribute)))
		i += copy(dAtA[i:], m.PositionAttribute)
	}
	if len(m.LoginIdAttribute) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginIdAttribute)))
		i += copy(dAtA[i:], m.LoginIdAttribute)
	}
	if m.SyncIntervalMinutes != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SyncIntervalMinutes))
	}
	if m.SkipCertificateVerification {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		if m.SkipCertificateVerification {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.QueryTimeout != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.QueryTimeout))
	}
	if m.MaxPageSize != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxPageSize))
	}
	if len(m.LoginFieldName) > 0 {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginFieldName)))
		i += copy(dAtA[i:], m.LoginFieldName)
	}
	if len(m.LoginButtonColor) > 0 {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonColor)))
		i += copy(dAtA[i:], m.LoginButtonColor)
	}
	if len(m.LoginButtonBorderColor) > 0 {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonBorderColor)))
		i += copy(dAtA[i:], m.LoginButtonBorderColor)
	}
	if len(m.LoginButtonTextColor) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonTextColor)))
		i += copy(dAtA[i:], m.LoginButtonTextColor)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LocalizationSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocalizationSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.DefaultServerLocale) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DefaultServerLocale)))
		i += copy(dAtA[i:], m.DefaultServerLocale)
	}
	if len(m.DefaultClientLocale) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DefaultClientLocale)))
		i += copy(dAtA[i:], m.DefaultClientLocale)
	}
	if len(m.AvailableLocales) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AvailableLocales)))
		i += copy(dAtA[i:], m.AvailableLocales)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LogSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LogSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableConsole {
		dAtA[i] = 0x8
		i++
		if m.EnableConsole {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ConsoleLevel) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ConsoleLevel)))
		i += copy(dAtA[i:], m.ConsoleLevel)
	}
	if m.ConsoleJson {
		dAtA[i] = 0x18
		i++
		if m.ConsoleJson {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableFile {
		dAtA[i] = 0x20
		i++
		if m.EnableFile {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.FileLevel) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FileLevel)))
		i += copy(dAtA[i:], m.FileLevel)
	}
	if m.FileJson {
		dAtA[i] = 0x30
		i++
		if m.FileJson {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.FileLocation) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FileLocation)))
		i += copy(dAtA[i:], m.FileLocation)
	}
	if m.EnableWebhookDebugging {
		dAtA[i] = 0x40
		i++
		if m.EnableWebhookDebugging {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableDiagnostics {
		dAtA[i] = 0x48
		i++
		if m.EnableDiagnostics {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Manifest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Manifest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Version) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Version)))
		i += copy(dAtA[i:], m.Version)
	}
	if m.Server != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Server.ProtoSize()))
		n36, err := m.Server.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n36
	}
	if m.Backend != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Backend.ProtoSize()))
		n37, err := m.Backend.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n37
	}
	if m.Webapp != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Webapp.ProtoSize()))
		n38, err := m.Webapp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n38
	}
	if m.SettingsSchema != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SettingsSchema.ProtoSize()))
		n39, err := m.SettingsSchema.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n39
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ManifestExecutables) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManifestExecutables) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.LinuxAmd64) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LinuxAmd64)))
		i += copy(dAtA[i:], m.LinuxAmd64)
	}
	if len(m.DarwinAmd64) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DarwinAmd64)))
		i += copy(dAtA[i:], m.DarwinAmd64)
	}
	if len(m.WindowsAmd64) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.WindowsAmd64)))
		i += copy(dAtA[i:], m.WindowsAmd64)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ManifestServer) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManifestServer) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Executables != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Executables.ProtoSize()))
		n40, err := m.Executables.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n40
	}
	if len(m.Executable) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Executable)))
		i += copy(dAtA[i:], m.Executable)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ManifestWebapp) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ManifestWebapp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.BundlePath) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.BundlePath)))
		i += copy(dAtA[i:], m.BundlePath)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MessageExportSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessageExportSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableExport {
		dAtA[i] = 0x8
		i++
		if m.EnableExport {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ExportFormat) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ExportFormat)))
		i += copy(dAtA[i:], m.ExportFormat)
	}
	if len(m.DailyRunTime) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DailyRunTime)))
		i += copy(dAtA[i:], m.DailyRunTime)
	}
	if m.ExportFromTimestamp != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.ExportFromTimestamp))
	}
	if m.BatchSize != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.BatchSize))
	}
	if m.GlobalRelaySettings != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.GlobalRelaySettings.ProtoSize()))
		n41, err := m.GlobalRelaySettings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n41
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MetricsSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MetricsSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BlockProfileRate != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.BlockProfileRate))
	}
	if len(m.ListenAddress) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ListenAddress)))
		i += copy(dAtA[i:], m.ListenAddress)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *NativeAppSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NativeAppSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.AppDownloadLink) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AppDownloadLink)))
		i += copy(dAtA[i:], m.AppDownloadLink)
	}
	if len(m.AndroidAppDownloadLink) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AndroidAppDownloadLink)))
		i += copy(dAtA[i:], m.AndroidAppDownloadLink)
	}
	if len(m.IosAppDownloadLink) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IosAppDownloadLink)))
		i += copy(dAtA[i:], m.IosAppDownloadLink)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MinimumLength != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MinimumLength))
	}
	if m.Lowercase {
		dAtA[i] = 0x10
		i++
		if m.Lowercase {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Number {
		dAtA[i] = 0x18
		i++
		if m.Number {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Uppercase {
		dAtA[i] = 0x20
		i++
		if m.Uppercase {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Symbol {
		dAtA[i] = 0x28
		i++
		if m.Symbol {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PluginInfo) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PluginInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Version) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Version)))
		i += copy(dAtA[i:], m.Version)
	}
	if m.Server != nil {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Server.ProtoSize()))
		n42, err := m.Server.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n42
	}
	if m.Backend != nil {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Backend.ProtoSize()))
		n43, err := m.Backend.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n43
	}
	if m.Webapp != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Webapp.ProtoSize()))
		n44, err := m.Webapp.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n44
	}
	if m.SettingsSchema != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SettingsSchema.ProtoSize()))
		n45, err := m.SettingsSchema.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n45
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PluginOption) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PluginOption) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PluginSetting) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PluginSetting) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Key) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Key)))
		i += copy(dAtA[i:], m.Key)
	}
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.HelpText) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.HelpText)))
		i += copy(dAtA[i:], m.HelpText)
	}
	if len(m.RegenerateHelpText) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RegenerateHelpText)))
		i += copy(dAtA[i:], m.RegenerateHelpText)
	}
	if len(m.Placeholder) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Placeholder)))
		i += copy(dAtA[i:], m.Placeholder)
	}
	if len(m.Options) > 0 {
		for _, msg := range m.Options {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintModel(dAtA, i, uint64(msg.ProtoSize()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PluginSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PluginSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableUploads {
		dAtA[i] = 0x10
		i++
		if m.EnableUploads {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Directory) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Directory)))
		i += copy(dAtA[i:], m.Directory)
	}
	if len(m.ClientDirectory) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ClientDirectory)))
		i += copy(dAtA[i:], m.ClientDirectory)
	}
	if len(m.PluginStates) > 0 {
		for k, _ := range m.PluginStates {
			dAtA[i] = 0x2a
			i++
			v := m.PluginStates[k]
			msgSize := 0
			if v != nil {
				msgSize = v.ProtoSize()
				msgSize += 1 + sovModel(uint64(msgSize))
			}
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + msgSize
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			if v != nil {
				dAtA[i] = 0x12
				i++
				i = encodeVarintModel(dAtA, i, uint64(v.ProtoSize()))
				n46, err := v.MarshalTo(dAtA[i:])
				if err != nil {
					return 0, err
				}
				i += n46
			}
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PluginSettingsSchema) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PluginSettingsSchema) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Header) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Header)))
		i += copy(dAtA[i:], m.Header)
	}
	if len(m.Footer) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Footer)))
		i += copy(dAtA[i:], m.Footer)
	}
	if len(m.Settings) > 0 {
		for _, msg := range m.Settings {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintModel(dAtA, i, uint64(msg.ProtoSize()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PluginState) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PluginState) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Post) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Post) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.EditAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.EditAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if m.IsPinned {
		dAtA[i] = 0x30
		i++
		if m.IsPinned {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.UserId) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.ChannelId) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ChannelId)))
		i += copy(dAtA[i:], m.ChannelId)
	}
	if len(m.RootId) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RootId)))
		i += copy(dAtA[i:], m.RootId)
	}
	if len(m.ParentId) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ParentId)))
		i += copy(dAtA[i:], m.ParentId)
	}
	if len(m.OriginalId) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.OriginalId)))
		i += copy(dAtA[i:], m.OriginalId)
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if len(m.MessageSource) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.MessageSource)))
		i += copy(dAtA[i:], m.MessageSource)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.Hashtags) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Hashtags)))
		i += copy(dAtA[i:], m.Hashtags)
	}
	if len(m.Filenames) > 0 {
		for _, s := range m.Filenames {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x1
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.FileIds) > 0 {
		for _, s := range m.FileIds {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x1
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.PendingPostId) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PendingPostId)))
		i += copy(dAtA[i:], m.PendingPostId)
	}
	if m.HasReactions {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		if m.HasReactions {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PostAction) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostAction) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.Integration != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Integration.ProtoSize()))
		n47, err := m.Integration.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n47
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PostActionIntegration) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostActionIntegration) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.URL) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.URL)))
		i += copy(dAtA[i:], m.URL)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Preference) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Preference) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.Category) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Category)))
		i += copy(dAtA[i:], m.Category)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Value) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Value)))
		i += copy(dAtA[i:], m.Value)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PrivacySettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PrivacySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ShowEmailAddress {
		dAtA[i] = 0x8
		i++
		if m.ShowEmailAddress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ShowFullName {
		dAtA[i] = 0x10
		i++
		if m.ShowFullName {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RateLimitSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RateLimitSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PerSec != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.PerSec))
	}
	if m.MaxBurst != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxBurst))
	}
	if m.MemoryStoreSize != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MemoryStoreSize))
	}
	if m.VaryByRemoteAddr {
		dAtA[i] = 0x28
		i++
		if m.VaryByRemoteAddr {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.VaryByUser {
		dAtA[i] = 0x30
		i++
		if m.VaryByUser {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.VaryByHeader) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.VaryByHeader)))
		i += copy(dAtA[i:], m.VaryByHeader)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Role) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Role) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if len(m.Permissions) > 0 {
		for _, s := range m.Permissions {
			dAtA[i] = 0x42
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.SchemeManaged {
		dAtA[i] = 0x48
		i++
		if m.SchemeManaged {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.BuiltIn {
		dAtA[i] = 0x50
		i++
		if m.BuiltIn {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SSOSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SSOSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Secret) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Secret)))
		i += copy(dAtA[i:], m.Secret)
	}
	if len(m.Id) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Scope) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Scope)))
		i += copy(dAtA[i:], m.Scope)
	}
	if len(m.AuthEndpoint) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AuthEndpoint)))
		i += copy(dAtA[i:], m.AuthEndpoint)
	}
	if len(m.TokenEndpoint) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TokenEndpoint)))
		i += copy(dAtA[i:], m.TokenEndpoint)
	}
	if len(m.UserApiEndpoint) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserApiEndpoint)))
		i += copy(dAtA[i:], m.UserApiEndpoint)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SamlSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SamlSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableSyncWithLdap {
		dAtA[i] = 0x10
		i++
		if m.EnableSyncWithLdap {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Verify {
		dAtA[i] = 0x18
		i++
		if m.Verify {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Encrypt {
		dAtA[i] = 0x20
		i++
		if m.Encrypt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.IdpUrl) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IdpUrl)))
		i += copy(dAtA[i:], m.IdpUrl)
	}
	if len(m.IdpDescriptorUrl) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IdpDescriptorUrl)))
		i += copy(dAtA[i:], m.IdpDescriptorUrl)
	}
	if len(m.AssertionConsumerServiceURL) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AssertionConsumerServiceURL)))
		i += copy(dAtA[i:], m.AssertionConsumerServiceURL)
	}
	if len(m.ScopingIDPProviderId) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ScopingIDPProviderId)))
		i += copy(dAtA[i:], m.ScopingIDPProviderId)
	}
	if len(m.ScopingIDPName) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ScopingIDPName)))
		i += copy(dAtA[i:], m.ScopingIDPName)
	}
	if len(m.IdpCertificateFile) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.IdpCertificateFile)))
		i += copy(dAtA[i:], m.IdpCertificateFile)
	}
	if len(m.PublicCertificateFile) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PublicCertificateFile)))
		i += copy(dAtA[i:], m.PublicCertificateFile)
	}
	if len(m.PrivateKeyFile) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PrivateKeyFile)))
		i += copy(dAtA[i:], m.PrivateKeyFile)
	}
	if len(m.FirstNameAttribute) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FirstNameAttribute)))
		i += copy(dAtA[i:], m.FirstNameAttribute)
	}
	if len(m.LastNameAttribute) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LastNameAttribute)))
		i += copy(dAtA[i:], m.LastNameAttribute)
	}
	if len(m.EmailAttribute) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.EmailAttribute)))
		i += copy(dAtA[i:], m.EmailAttribute)
	}
	if len(m.UsernameAttribute) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UsernameAttribute)))
		i += copy(dAtA[i:], m.UsernameAttribute)
	}
	if len(m.NicknameAttribute) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.NicknameAttribute)))
		i += copy(dAtA[i:], m.NicknameAttribute)
	}
	if len(m.LocaleAttribute) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LocaleAttribute)))
		i += copy(dAtA[i:], m.LocaleAttribute)
	}
	if len(m.PositionAttribute) > 0 {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PositionAttribute)))
		i += copy(dAtA[i:], m.PositionAttribute)
	}
	if len(m.LoginButtonText) > 0 {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonText)))
		i += copy(dAtA[i:], m.LoginButtonText)
	}
	if len(m.LoginButtonColor) > 0 {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonColor)))
		i += copy(dAtA[i:], m.LoginButtonColor)
	}
	if len(m.LoginButtonBorderColor) > 0 {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonBorderColor)))
		i += copy(dAtA[i:], m.LoginButtonBorderColor)
	}
	if len(m.LoginButtonTextColor) > 0 {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LoginButtonTextColor)))
		i += copy(dAtA[i:], m.LoginButtonTextColor)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ServiceSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ServiceSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SiteURL) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SiteURL)))
		i += copy(dAtA[i:], m.SiteURL)
	}
	if len(m.WebsocketURL) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.WebsocketURL)))
		i += copy(dAtA[i:], m.WebsocketURL)
	}
	if len(m.LicenseFileLocation) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LicenseFileLocation)))
		i += copy(dAtA[i:], m.LicenseFileLocation)
	}
	if len(m.ListenAddress) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ListenAddress)))
		i += copy(dAtA[i:], m.ListenAddress)
	}
	if len(m.ConnectionSecurity) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ConnectionSecurity)))
		i += copy(dAtA[i:], m.ConnectionSecurity)
	}
	if len(m.TLSCertFile) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TLSCertFile)))
		i += copy(dAtA[i:], m.TLSCertFile)
	}
	if len(m.TLSKeyFile) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TLSKeyFile)))
		i += copy(dAtA[i:], m.TLSKeyFile)
	}
	if m.UseLetsEncrypt {
		dAtA[i] = 0x40
		i++
		if m.UseLetsEncrypt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.LetsEncryptCertificateCacheFile) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LetsEncryptCertificateCacheFile)))
		i += copy(dAtA[i:], m.LetsEncryptCertificateCacheFile)
	}
	if m.Forward80To443 {
		dAtA[i] = 0x50
		i++
		if m.Forward80To443 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ReadTimeout != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.ReadTimeout))
	}
	if m.WriteTimeout != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.WriteTimeout))
	}
	if m.MaximumLoginAttempts != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaximumLoginAttempts))
	}
	if m.GoroutineHealthThreshold != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.GoroutineHealthThreshold))
	}
	if len(m.GoogleDeveloperKey) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GoogleDeveloperKey)))
		i += copy(dAtA[i:], m.GoogleDeveloperKey)
	}
	if m.EnableOAuthServiceProvider {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableOAuthServiceProvider {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableIncomingWebhooks {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableIncomingWebhooks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableOutgoingWebhooks {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableOutgoingWebhooks {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableCommands {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableCommands {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableOnlyAdminIntegrations {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableOnlyAdminIntegrations {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnablePostUsernameOverride {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnablePostUsernameOverride {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnablePostIconOverride {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnablePostIconOverride {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableLinkPreviews {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableLinkPreviews {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableTesting {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableTesting {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableDeveloper {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableDeveloper {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableSecurityFixAlert {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableSecurityFixAlert {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableInsecureOutgoingConnections {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableInsecureOutgoingConnections {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.AllowedUntrustedInternalConnections) > 0 {
		dAtA[i] = 0xe2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AllowedUntrustedInternalConnections)))
		i += copy(dAtA[i:], m.AllowedUntrustedInternalConnections)
	}
	if m.EnableMultifactorAuthentication {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableMultifactorAuthentication {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnforceMultifactorAuthentication {
		dAtA[i] = 0xf0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnforceMultifactorAuthentication {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableUserAccessTokens {
		dAtA[i] = 0xf8
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableUserAccessTokens {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.AllowCorsFrom) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AllowCorsFrom)))
		i += copy(dAtA[i:], m.AllowCorsFrom)
	}
	if m.AllowCookiesForSubdomains {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x2
		i++
		if m.AllowCookiesForSubdomains {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SessionLengthWebInDays != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SessionLengthWebInDays))
	}
	if m.SessionLengthMobileInDays != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SessionLengthMobileInDays))
	}
	if m.SessionLengthSSOInDays != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SessionLengthSSOInDays))
	}
	if m.SessionCacheInMinutes != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SessionCacheInMinutes))
	}
	if m.SessionIdleTimeoutInMinutes != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.SessionIdleTimeoutInMinutes))
	}
	if m.WebsocketSecurePort != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.WebsocketSecurePort))
	}
	if m.WebsocketPort != 0 {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.WebsocketPort))
	}
	if len(m.WebserverMode) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.WebserverMode)))
		i += copy(dAtA[i:], m.WebserverMode)
	}
	if m.EnableCustomEmoji {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x2
		i++
		if m.EnableCustomEmoji {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableEmojiPicker {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x2
		i++
		if m.EnableEmojiPicker {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableGifPicker {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x2
		i++
		if m.EnableGifPicker {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.GfycatApiKey) > 0 {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GfycatApiKey)))
		i += copy(dAtA[i:], m.GfycatApiKey)
	}
	if len(m.GfycatApiSecret) > 0 {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GfycatApiSecret)))
		i += copy(dAtA[i:], m.GfycatApiSecret)
	}
	if len(m.RestrictCustomEmojiCreation) > 0 {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictCustomEmojiCreation)))
		i += copy(dAtA[i:], m.RestrictCustomEmojiCreation)
	}
	if len(m.RestrictPostDelete) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPostDelete)))
		i += copy(dAtA[i:], m.RestrictPostDelete)
	}
	if len(m.AllowEditPost) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AllowEditPost)))
		i += copy(dAtA[i:], m.AllowEditPost)
	}
	if m.PostEditTimeLimit != 0 {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.PostEditTimeLimit))
	}
	if m.TimeBetweenUserTypingUpdatesMilliseconds != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.TimeBetweenUserTypingUpdatesMilliseconds))
	}
	if m.EnablePostSearch {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x3
		i++
		if m.EnablePostSearch {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableUserTypingMessages {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x3
		i++
		if m.EnableUserTypingMessages {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableChannelViewedMessages {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x3
		i++
		if m.EnableChannelViewedMessages {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableUserStatuses {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x3
		i++
		if m.EnableUserStatuses {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExperimentalEnableAuthenticationTransfer {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x3
		i++
		if m.ExperimentalEnableAuthenticationTransfer {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ClusterLogTimeoutMilliseconds != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.ClusterLogTimeoutMilliseconds))
	}
	if m.CloseUnusedDirectMessages {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x3
		i++
		if m.CloseUnusedDirectMessages {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnablePreviewFeatures {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x3
		i++
		if m.EnablePreviewFeatures {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableTutorial {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x3
		i++
		if m.EnableTutorial {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExperimentalEnableDefaultChannelLeaveJoinMessages {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x3
		i++
		if m.ExperimentalEnableDefaultChannelLeaveJoinMessages {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ExperimentalGroupUnreadChannels) > 0 {
		dAtA[i] = 0xf2
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ExperimentalGroupUnreadChannels)))
		i += copy(dAtA[i:], m.ExperimentalGroupUnreadChannels)
	}
	if len(m.ImageProxyType) > 0 {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x3
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ImageProxyType)))
		i += copy(dAtA[i:], m.ImageProxyType)
	}
	if len(m.ImageProxyURL) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ImageProxyURL)))
		i += copy(dAtA[i:], m.ImageProxyURL)
	}
	if len(m.ImageProxyOptions) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x4
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ImageProxyOptions)))
		i += copy(dAtA[i:], m.ImageProxyOptions)
	}
	if m.EnableAPITeamDeletion {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x4
		i++
		if m.EnableAPITeamDeletion {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExperimentalEnableHardenedMode {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x4
		i++
		if m.ExperimentalEnableHardenedMode {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExperimentalLimitClientConfig {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x4
		i++
		if m.ExperimentalLimitClientConfig {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableEmailInvitations {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x4
		i++
		if m.EnableEmailInvitations {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Session) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Session) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.ExpiresAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.ExpiresAt))
	}
	if m.LastActivityAt != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastActivityAt))
	}
	if len(m.UserId) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.DeviceId) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DeviceId)))
		i += copy(dAtA[i:], m.DeviceId)
	}
	if len(m.Roles) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Roles)))
		i += copy(dAtA[i:], m.Roles)
	}
	if m.IsOAuth {
		dAtA[i] = 0x48
		i++
		if m.IsOAuth {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Props) > 0 {
		for k, _ := range m.Props {
			dAtA[i] = 0x52
			i++
			v := m.Props[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if len(m.TeamMembers) > 0 {
		for _, msg := range m.TeamMembers {
			dAtA[i] = 0x5a
			i++
			i = encodeVarintModel(dAtA, i, uint64(msg.ProtoSize()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SlackAttachment) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SlackAttachment) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Id))
	}
	if len(m.Fallback) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Fallback)))
		i += copy(dAtA[i:], m.Fallback)
	}
	if len(m.Color) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Color)))
		i += copy(dAtA[i:], m.Color)
	}
	if len(m.Pretext) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Pretext)))
		i += copy(dAtA[i:], m.Pretext)
	}
	if len(m.AuthorName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AuthorName)))
		i += copy(dAtA[i:], m.AuthorName)
	}
	if len(m.AuthorLink) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AuthorLink)))
		i += copy(dAtA[i:], m.AuthorLink)
	}
	if len(m.AuthorIcon) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AuthorIcon)))
		i += copy(dAtA[i:], m.AuthorIcon)
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if len(m.TitleLink) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TitleLink)))
		i += copy(dAtA[i:], m.TitleLink)
	}
	if len(m.Text) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Text)))
		i += copy(dAtA[i:], m.Text)
	}
	if len(m.Fields) > 0 {
		for _, msg := range m.Fields {
			dAtA[i] = 0x5a
			i++
			i = encodeVarintModel(dAtA, i, uint64(msg.ProtoSize()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ImageURL) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ImageURL)))
		i += copy(dAtA[i:], m.ImageURL)
	}
	if len(m.ThumbURL) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ThumbURL)))
		i += copy(dAtA[i:], m.ThumbURL)
	}
	if len(m.Footer) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Footer)))
		i += copy(dAtA[i:], m.Footer)
	}
	if len(m.FooterIcon) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FooterIcon)))
		i += copy(dAtA[i:], m.FooterIcon)
	}
	if len(m.Actions) > 0 {
		for _, msg := range m.Actions {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintModel(dAtA, i, uint64(msg.ProtoSize()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SlackAttachmentField) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SlackAttachmentField) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Title) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.Short {
		dAtA[i] = 0x10
		i++
		if m.Short {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SqlSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SqlSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.DriverName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DriverName)))
		i += copy(dAtA[i:], m.DriverName)
	}
	if len(m.DataSource) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DataSource)))
		i += copy(dAtA[i:], m.DataSource)
	}
	if len(m.DataSourceReplicas) > 0 {
		for _, s := range m.DataSourceReplicas {
			dAtA[i] = 0x1a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.DataSourceSearchReplicas) > 0 {
		for _, s := range m.DataSourceSearchReplicas {
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.MaxIdleConns != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxIdleConns))
	}
	if m.ConnMaxLifetimeMilliseconds != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.ConnMaxLifetimeMilliseconds))
	}
	if m.MaxOpenConns != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxOpenConns))
	}
	if m.Trace {
		dAtA[i] = 0x40
		i++
		if m.Trace {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.AtRestEncryptKey) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AtRestEncryptKey)))
		i += copy(dAtA[i:], m.AtRestEncryptKey)
	}
	if m.QueryTimeout != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.QueryTimeout))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Status) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Status) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.Status) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Status)))
		i += copy(dAtA[i:], m.Status)
	}
	if m.Manual {
		dAtA[i] = 0x18
		i++
		if m.Manual {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.LastActivityAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastActivityAt))
	}
	if len(m.ActiveChannel) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ActiveChannel)))
		i += copy(dAtA[i:], m.ActiveChannel)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SupportSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SupportSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TermsOfServiceLink) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TermsOfServiceLink)))
		i += copy(dAtA[i:], m.TermsOfServiceLink)
	}
	if len(m.PrivacyPolicyLink) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.PrivacyPolicyLink)))
		i += copy(dAtA[i:], m.PrivacyPolicyLink)
	}
	if len(m.AboutLink) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AboutLink)))
		i += copy(dAtA[i:], m.AboutLink)
	}
	if len(m.HelpLink) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.HelpLink)))
		i += copy(dAtA[i:], m.HelpLink)
	}
	if len(m.ReportAProblemLink) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ReportAProblemLink)))
		i += copy(dAtA[i:], m.ReportAProblemLink)
	}
	if len(m.SupportEmail) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SupportEmail)))
		i += copy(dAtA[i:], m.SupportEmail)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SystemECDSAKey) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemECDSAKey) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Curve) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Curve)))
		i += copy(dAtA[i:], m.Curve)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Team) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Team) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if len(m.DisplayName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DisplayName)))
		i += copy(dAtA[i:], m.DisplayName)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Description) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Description)))
		i += copy(dAtA[i:], m.Description)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Type) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Type)))
		i += copy(dAtA[i:], m.Type)
	}
	if len(m.CompanyName) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CompanyName)))
		i += copy(dAtA[i:], m.CompanyName)
	}
	if len(m.AllowedDomains) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AllowedDomains)))
		i += copy(dAtA[i:], m.AllowedDomains)
	}
	if len(m.InviteId) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.InviteId)))
		i += copy(dAtA[i:], m.InviteId)
	}
	if m.AllowOpenInvite {
		dAtA[i] = 0x68
		i++
		if m.AllowOpenInvite {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.LastTeamIconUpdate != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastTeamIconUpdate))
	}
	if len(m.SchemeId) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SchemeId)))
		i += copy(dAtA[i:], m.SchemeId)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeamMember) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeamMember) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.TeamId) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TeamId)))
		i += copy(dAtA[i:], m.TeamId)
	}
	if len(m.UserId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.Roles) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Roles)))
		i += copy(dAtA[i:], m.Roles)
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if m.SchemeUser {
		dAtA[i] = 0x28
		i++
		if m.SchemeUser {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.SchemeAdmin {
		dAtA[i] = 0x30
		i++
		if m.SchemeAdmin {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ExplicitRoles) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ExplicitRoles)))
		i += copy(dAtA[i:], m.ExplicitRoles)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TeamSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TeamSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SiteName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SiteName)))
		i += copy(dAtA[i:], m.SiteName)
	}
	if m.MaxUsersPerTeam != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxUsersPerTeam))
	}
	if m.EnableTeamCreation {
		dAtA[i] = 0x18
		i++
		if m.EnableTeamCreation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableUserCreation {
		dAtA[i] = 0x20
		i++
		if m.EnableUserCreation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableOpenServer {
		dAtA[i] = 0x28
		i++
		if m.EnableOpenServer {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EnableUserDeactivation {
		dAtA[i] = 0x30
		i++
		if m.EnableUserDeactivation {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.RestrictCreationToDomains) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictCreationToDomains)))
		i += copy(dAtA[i:], m.RestrictCreationToDomains)
	}
	if m.EnableCustomBrand {
		dAtA[i] = 0x40
		i++
		if m.EnableCustomBrand {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.CustomBrandText) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CustomBrandText)))
		i += copy(dAtA[i:], m.CustomBrandText)
	}
	if len(m.CustomDescriptionText) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.CustomDescriptionText)))
		i += copy(dAtA[i:], m.CustomDescriptionText)
	}
	if len(m.RestrictDirectMessage) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictDirectMessage)))
		i += copy(dAtA[i:], m.RestrictDirectMessage)
	}
	if len(m.RestrictTeamInvite) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictTeamInvite)))
		i += copy(dAtA[i:], m.RestrictTeamInvite)
	}
	if len(m.RestrictPublicChannelManagement) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPublicChannelManagement)))
		i += copy(dAtA[i:], m.RestrictPublicChannelManagement)
	}
	if len(m.RestrictPrivateChannelManagement) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPrivateChannelManagement)))
		i += copy(dAtA[i:], m.RestrictPrivateChannelManagement)
	}
	if len(m.RestrictPublicChannelCreation) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPublicChannelCreation)))
		i += copy(dAtA[i:], m.RestrictPublicChannelCreation)
	}
	if len(m.RestrictPrivateChannelCreation) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPrivateChannelCreation)))
		i += copy(dAtA[i:], m.RestrictPrivateChannelCreation)
	}
	if len(m.RestrictPublicChannelDeletion) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPublicChannelDeletion)))
		i += copy(dAtA[i:], m.RestrictPublicChannelDeletion)
	}
	if len(m.RestrictPrivateChannelDeletion) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPrivateChannelDeletion)))
		i += copy(dAtA[i:], m.RestrictPrivateChannelDeletion)
	}
	if len(m.RestrictPrivateChannelManageMembers) > 0 {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.RestrictPrivateChannelManageMembers)))
		i += copy(dAtA[i:], m.RestrictPrivateChannelManageMembers)
	}
	if m.EnableXToLeaveChannelsFromLHS {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableXToLeaveChannelsFromLHS {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.UserStatusAwayTimeout != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UserStatusAwayTimeout))
	}
	if m.MaxChannelsPerTeam != 0 {
		dAtA[i] = 0xb0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxChannelsPerTeam))
	}
	if m.MaxNotificationsPerChannel != 0 {
		dAtA[i] = 0xb8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.MaxNotificationsPerChannel))
	}
	if m.EnableConfirmNotificationsToChannel {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		if m.EnableConfirmNotificationsToChannel {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.TeammateNameDisplay) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TeammateNameDisplay)))
		i += copy(dAtA[i:], m.TeammateNameDisplay)
	}
	if m.ExperimentalEnableAutomaticReplies {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		if m.ExperimentalEnableAutomaticReplies {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExperimentalHideTownSquareinLHS {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x1
		i++
		if m.ExperimentalHideTownSquareinLHS {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ExperimentalTownSquareIsReadOnly {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x1
		i++
		if m.ExperimentalTownSquareIsReadOnly {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ExperimentalPrimaryTeam) > 0 {
		dAtA[i] = 0xea
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ExperimentalPrimaryTeam)))
		i += copy(dAtA[i:], m.ExperimentalPrimaryTeam)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ThemeSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ThemeSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.EnableThemeSelection {
		dAtA[i] = 0x8
		i++
		if m.EnableThemeSelection {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.DefaultTheme) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.DefaultTheme)))
		i += copy(dAtA[i:], m.DefaultTheme)
	}
	if m.AllowCustomThemes {
		dAtA[i] = 0x18
		i++
		if m.AllowCustomThemes {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.AllowedThemes) > 0 {
		for _, s := range m.AllowedThemes {
			dAtA[i] = 0x22
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *TimezoneSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimezoneSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.SupportedTimezonesPath) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.SupportedTimezonesPath)))
		i += copy(dAtA[i:], m.SupportedTimezonesPath)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Id)))
		i += copy(dAtA[i:], m.Id)
	}
	if m.CreateAt != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.DeleteAt))
	}
	if len(m.Username) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Username)))
		i += copy(dAtA[i:], m.Username)
	}
	if len(m.Password) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Password)))
		i += copy(dAtA[i:], m.Password)
	}
	if len(m.AuthData) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AuthData)))
		i += copy(dAtA[i:], m.AuthData)
	}
	if len(m.AuthService) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.AuthService)))
		i += copy(dAtA[i:], m.AuthService)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if m.EmailVerified {
		dAtA[i] = 0x50
		i++
		if m.EmailVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Nickname) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Nickname)))
		i += copy(dAtA[i:], m.Nickname)
	}
	if len(m.FirstName) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if len(m.Position) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Position)))
		i += copy(dAtA[i:], m.Position)
	}
	if len(m.Roles) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Roles)))
		i += copy(dAtA[i:], m.Roles)
	}
	if m.AllowMarketing {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		if m.AllowMarketing {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Props) > 0 {
		for k, _ := range m.Props {
			dAtA[i] = 0x8a
			i++
			dAtA[i] = 0x1
			i++
			v := m.Props[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if len(m.NotifyProps) > 0 {
		for k, _ := range m.NotifyProps {
			dAtA[i] = 0x92
			i++
			dAtA[i] = 0x1
			i++
			v := m.NotifyProps[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if m.LastPasswordUpdate != 0 {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastPasswordUpdate))
	}
	if m.LastPictureUpdate != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastPictureUpdate))
	}
	if m.FailedAttempts != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.FailedAttempts))
	}
	if len(m.Locale) > 0 {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Locale)))
		i += copy(dAtA[i:], m.Locale)
	}
	if len(m.Timezone) > 0 {
		for k, _ := range m.Timezone {
			dAtA[i] = 0xba
			i++
			dAtA[i] = 0x1
			i++
			v := m.Timezone[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x12
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(v)))
			i += copy(dAtA[i:], v)
		}
	}
	if m.MfaActive {
		dAtA[i] = 0xc0
		i++
		dAtA[i] = 0x1
		i++
		if m.MfaActive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.MfaSecret) > 0 {
		dAtA[i] = 0xca
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.MfaSecret)))
		i += copy(dAtA[i:], m.MfaSecret)
	}
	if m.LastActivityAt != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.LastActivityAt))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebrtcSettings) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebrtcSettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Enable {
		dAtA[i] = 0x8
		i++
		if m.Enable {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.GatewayWebsocketUrl) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GatewayWebsocketUrl)))
		i += copy(dAtA[i:], m.GatewayWebsocketUrl)
	}
	if len(m.GatewayAdminUrl) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GatewayAdminUrl)))
		i += copy(dAtA[i:], m.GatewayAdminUrl)
	}
	if len(m.GatewayAdminSecret) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.GatewayAdminSecret)))
		i += copy(dAtA[i:], m.GatewayAdminSecret)
	}
	if len(m.StunURI) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.StunURI)))
		i += copy(dAtA[i:], m.StunURI)
	}
	if len(m.TurnURI) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TurnURI)))
		i += copy(dAtA[i:], m.TurnURI)
	}
	if len(m.TurnUsername) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TurnUsername)))
		i += copy(dAtA[i:], m.TurnUsername)
	}
	if len(m.TurnSharedKey) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TurnSharedKey)))
		i += copy(dAtA[i:], m.TurnSharedKey)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebsocketBroadcast) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebsocketBroadcast) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.OmitUsers) > 0 {
		for k, _ := range m.OmitUsers {
			dAtA[i] = 0xa
			i++
			v := m.OmitUsers[k]
			mapSize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + 1
			i = encodeVarintModel(dAtA, i, uint64(mapSize))
			dAtA[i] = 0xa
			i++
			i = encodeVarintModel(dAtA, i, uint64(len(k)))
			i += copy(dAtA[i:], k)
			dAtA[i] = 0x10
			i++
			if v {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i++
		}
	}
	if len(m.UserId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.UserId)))
		i += copy(dAtA[i:], m.UserId)
	}
	if len(m.ChannelId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.ChannelId)))
		i += copy(dAtA[i:], m.ChannelId)
	}
	if len(m.TeamId) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.TeamId)))
		i += copy(dAtA[i:], m.TeamId)
	}
	if m.ContainsSanitizedData {
		dAtA[i] = 0x28
		i++
		if m.ContainsSanitizedData {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ContainsSensitiveData {
		dAtA[i] = 0x30
		i++
		if m.ContainsSensitiveData {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_EnabledResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_EnabledResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result1 {
		dAtA[i] = 0x8
		i++
		if m.Result1 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_JobTypeRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_JobTypeRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_JobTypeResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_JobTypeResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Result1) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Result1)))
		i += copy(dAtA[i:], m.Result1)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_NameRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_NameRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_NameResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_NameResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Result1) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Result1)))
		i += copy(dAtA[i:], m.Result1)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_NextScheduleTimeRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_NextScheduleTimeRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Arg1 != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Arg1.ProtoSize()))
		n48, err := m.Arg1.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n48
	}
	dAtA[i] = 0x12
	i++
	i = encodeVarintModel(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.Arg2)))
	n49, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.Arg2, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n49
	if m.Arg3 {
		dAtA[i] = 0x18
		i++
		if m.Arg3 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Arg4 != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Arg4.ProtoSize()))
		n50, err := m.Arg4.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n50
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_ScheduleJobRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_ScheduleJobRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Arg1 != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Arg1.ProtoSize()))
		n51, err := m.Arg1.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n51
	}
	if m.Arg2 {
		dAtA[i] = 0x10
		i++
		if m.Arg2 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Arg3 != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Arg3.ProtoSize()))
		n52, err := m.Arg3.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n52
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Scheduler_ScheduleJobResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Scheduler_ScheduleJobResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result1 != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Result1.ProtoSize()))
		n53, err := m.Result1.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n53
	}
	if m.Result2 != nil {
		dAtA[i] = 0x12
		i++
		i = encodeVarintModel(dAtA, i, uint64(m.Result2.ProtoSize()))
		n54, err := m.Result2.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n54
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebSocketMessage_EventTypeRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage_EventTypeRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebSocketMessage_EventTypeResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage_EventTypeResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Result1) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Result1)))
		i += copy(dAtA[i:], m.Result1)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebSocketMessage_IsValidRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage_IsValidRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebSocketMessage_IsValidResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage_IsValidResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Result1 {
		dAtA[i] = 0x8
		i++
		if m.Result1 {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebSocketMessage_ToJsonRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage_ToJsonRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *WebSocketMessage_ToJsonResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebSocketMessage_ToJsonResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Result1) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintModel(dAtA, i, uint64(len(m.Result1)))
		i += copy(dAtA[i:], m.Result1)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Worker_RunRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Worker_RunRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Worker_RunResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Worker_RunResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Worker_StopRequest) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Worker_StopRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Worker_StopResponse) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Worker_StopResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintModel(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AnalyticsSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.MaxUsersForStatistics != 0 {
		n += 1 + sovModel(uint64(m.MaxUsersForStatistics))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AnnouncementSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableBanner {
		n += 2
	}
	l = len(m.BannerText)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.BannerColor)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.BannerTextColor)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AllowBannerDismissal {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AppError) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DetailedError)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RequestId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.StatusCode != 0 {
		n += 1 + sovModel(uint64(m.StatusCode))
	}
	l = len(m.Where)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.IsOAuth {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Channel) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	l = len(m.TeamId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Header)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Purpose)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.LastPostAt != 0 {
		n += 1 + sovModel(uint64(m.LastPostAt))
	}
	if m.TotalMsgCount != 0 {
		n += 1 + sovModel(uint64(m.TotalMsgCount))
	}
	if m.ExtraUpdateAt != 0 {
		n += 1 + sovModel(uint64(m.ExtraUpdateAt))
	}
	l = len(m.CreatorId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SchemeId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChannelMember) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.ChannelId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Roles)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.LastViewedAt != 0 {
		n += 1 + sovModel(uint64(m.LastViewedAt))
	}
	if m.MsgCount != 0 {
		n += 1 + sovModel(uint64(m.MsgCount))
	}
	if m.MentionCount != 0 {
		n += 1 + sovModel(uint64(m.MentionCount))
	}
	if len(m.NotifyProps) > 0 {
		for k, v := range m.NotifyProps {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			n += mapEntrySize + 1 + sovModel(uint64(mapEntrySize))
		}
	}
	if m.LastUpdateAt != 0 {
		n += 1 + sovModel(uint64(m.LastUpdateAt))
	}
	if m.SchemeUser {
		n += 2
	}
	if m.SchemeAdmin {
		n += 2
	}
	l = len(m.ExplicitRoles)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClientRequirements) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.AndroidLatestVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AndroidMinVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DesktopLatestVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DesktopMinVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IosLatestVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IosMinVersion)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	l = len(m.ClusterName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.OverrideHostname)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.UseIpAddress {
		n += 2
	}
	if m.UseExperimentalGossip {
		n += 2
	}
	if m.ReadOnlyConfig {
		n += 2
	}
	if m.GossipPort != 0 {
		n += 1 + sovModel(uint64(m.GossipPort))
	}
	if m.StreamingPort != 0 {
		n += 1 + sovModel(uint64(m.StreamingPort))
	}
	if m.MaxIdleConns != 0 {
		n += 1 + sovModel(uint64(m.MaxIdleConns))
	}
	if m.MaxIdleConnsPerHost != 0 {
		n += 1 + sovModel(uint64(m.MaxIdleConnsPerHost))
	}
	if m.IdleConnTimeoutMilliseconds != 0 {
		n += 1 + sovModel(uint64(m.IdleConnTimeoutMilliseconds))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Command) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	l = len(m.CreatorId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TeamId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Trigger)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Method)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IconURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AutoComplete {
		n += 2
	}
	l = len(m.AutoCompleteDesc)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AutoCompleteHint)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.URL)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommandArgs) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ChannelId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TeamId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RootId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ParentId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Command)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SiteURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = m.Session.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CommandResponse) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.ResponseType)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IconURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.GotoLocation)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Attachments) > 0 {
		for _, e := range m.Attachments {
			l = e.ProtoSize()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ComplianceSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	l = len(m.Directory)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnableDaily {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Config) ProtoSize() (n int) {
	var l int
	_ = l
	l = m.ServiceSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.TeamSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.ClientRequirements.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.SqlSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.LogSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.PasswordSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.FileSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.EmailSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.ExtensionSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.RateLimitSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.PrivacySettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.SupportSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.AnnouncementSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.ThemeSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.GitLabSettings.ProtoSize()
	n += 1 + l + sovModel(uint64(l))
	l = m.GoogleSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.Office365Settings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.LdapSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.ComplianceSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.LocalizationSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.SamlSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.NativeAppSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.ClusterSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.MetricsSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.ExperimentalSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.AnalyticsSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.WebrtcSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.ElasticsearchSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.DataRetentionSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.MessageExportSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.JobSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.PluginSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.DisplaySettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	l = m.TimezoneSettings.ProtoSize()
	n += 2 + l + sovModel(uint64(l))
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Customer) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Company)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DataRetentionSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableMessageDeletion {
		n += 2
	}
	if m.EnableFileDeletion {
		n += 2
	}
	if m.MessageRetentionDays != 0 {
		n += 1 + sovModel(uint64(m.MessageRetentionDays))
	}
	if m.FileRetentionDays != 0 {
		n += 1 + sovModel(uint64(m.FileRetentionDays))
	}
	l = len(m.DeletionJobStartTime)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DisplaySettings) ProtoSize() (n int) {
	var l int
	_ = l
	if len(m.CustomUrlSchemes) > 0 {
		for _, s := range m.CustomUrlSchemes {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.ExperimentalTimezone {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ElasticsearchSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.ConnectionUrl)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnableIndexing {
		n += 2
	}
	if m.EnableSearching {
		n += 2
	}
	if m.Sniff {
		n += 2
	}
	if m.PostIndexReplicas != 0 {
		n += 1 + sovModel(uint64(m.PostIndexReplicas))
	}
	if m.PostIndexShards != 0 {
		n += 1 + sovModel(uint64(m.PostIndexShards))
	}
	if m.AggregatePostsAfterDays != 0 {
		n += 1 + sovModel(uint64(m.AggregatePostsAfterDays))
	}
	l = len(m.PostsAggregatorJobStartTime)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IndexPrefix)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.LiveIndexingBatchSize != 0 {
		n += 1 + sovModel(uint64(m.LiveIndexingBatchSize))
	}
	if m.BulkIndexingTimeWindowSeconds != 0 {
		n += 1 + sovModel(uint64(m.BulkIndexingTimeWindowSeconds))
	}
	if m.RequestTimeoutSeconds != 0 {
		n += 1 + sovModel(uint64(m.RequestTimeoutSeconds))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EmailSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableSignUpWithEmail {
		n += 2
	}
	if m.EnableSignInWithEmail {
		n += 2
	}
	if m.EnableSignInWithUsername {
		n += 2
	}
	if m.SendEmailNotifications {
		n += 2
	}
	if m.UseChannelInEmailNotifications {
		n += 2
	}
	if m.RequireEmailVerification {
		n += 2
	}
	l = len(m.FeedbackName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.FeedbackEmail)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.FeedbackOrganization)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnableSMTPAuth {
		n += 2
	}
	l = len(m.SMTPUsername)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SMTPPassword)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SMTPServer)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SMTPPort)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ConnectionSecurity)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.InviteSalt)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.SendPushNotifications {
		n += 3
	}
	l = len(m.PushNotificationServer)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.PushNotificationContents)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.EnableEmailBatching {
		n += 3
	}
	if m.EmailBatchingBufferSize != 0 {
		n += 2 + sovModel(uint64(m.EmailBatchingBufferSize))
	}
	if m.EmailBatchingInterval != 0 {
		n += 2 + sovModel(uint64(m.EmailBatchingInterval))
	}
	if m.EnablePreviewModeBanner {
		n += 3
	}
	if m.SkipServerCertificateVerification {
		n += 3
	}
	l = len(m.EmailNotificationContentsType)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonBorderColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonTextColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExperimentalSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.ClientSideCertEnable {
		n += 2
	}
	l = len(m.ClientSideCertCheck)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtensionSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableExperimentalExtensions {
		n += 2
	}
	if len(m.AllowedExtensionsIDs) > 0 {
		for _, s := range m.AllowedExtensionsIDs {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Features) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Users != 0 {
		n += 1 + sovModel(uint64(m.Users))
	}
	if m.LDAP {
		n += 2
	}
	if m.MFA {
		n += 2
	}
	if m.GoogleOAuth {
		n += 2
	}
	if m.Office365OAuth {
		n += 2
	}
	if m.Compliance {
		n += 2
	}
	if m.Cluster {
		n += 2
	}
	if m.Metrics {
		n += 2
	}
	if m.MHPNS {
		n += 2
	}
	if m.SAML {
		n += 2
	}
	if m.Elasticsearch {
		n += 2
	}
	if m.Announcement {
		n += 2
	}
	if m.ThemeManagement {
		n += 2
	}
	if m.EmailNotificationContents {
		n += 2
	}
	if m.DataRetention {
		n += 2
	}
	if m.MessageExport {
		n += 3
	}
	if m.CustomPermissionsSchemes {
		n += 3
	}
	if m.FutureFeatures {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FileInfo) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.CreatorId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PostId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ThumbnailPath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PreviewPath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Extension)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Size != 0 {
		n += 1 + sovModel(uint64(m.Size))
	}
	l = len(m.MimeType)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Width != 0 {
		n += 1 + sovModel(uint64(m.Width))
	}
	if m.Height != 0 {
		n += 1 + sovModel(uint64(m.Height))
	}
	if m.HasPreviewImage {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FileSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableFileAttachments {
		n += 2
	}
	if m.EnableMobileUpload {
		n += 2
	}
	if m.EnableMobileDownload {
		n += 2
	}
	if m.MaxFileSize != 0 {
		n += 1 + sovModel(uint64(m.MaxFileSize))
	}
	l = len(m.DriverName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Directory)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnablePublicLink {
		n += 2
	}
	l = len(m.PublicLinkSalt)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.InitialFont)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AmazonS3AccessKeyId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AmazonS3SecretAccessKey)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AmazonS3Bucket)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AmazonS3Region)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AmazonS3Endpoint)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AmazonS3SSL {
		n += 2
	}
	if m.AmazonS3SignV2 {
		n += 3
	}
	if m.AmazonS3SSE {
		n += 3
	}
	if m.AmazonS3Trace {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GlobalRelayMessageExportSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.CustomerType)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SmtpUsername)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SmtpPassword)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.EmailAddress)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Job) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Priority != 0 {
		n += 1 + sovModel(uint64(m.Priority))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.StartAt != 0 {
		n += 1 + sovModel(uint64(m.StartAt))
	}
	if m.LastActivityAt != 0 {
		n += 1 + sovModel(uint64(m.LastActivityAt))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Progress != 0 {
		n += 1 + sovModel(uint64(m.Progress))
	}
	if len(m.Data) > 0 {
		for k, v := range m.Data {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			n += mapEntrySize + 1 + sovModel(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *JobSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.RunJobs {
		n += 2
	}
	if m.RunScheduler {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LdapSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	if m.EnableSync {
		n += 2
	}
	l = len(m.LdapServer)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.LdapPort != 0 {
		n += 1 + sovModel(uint64(m.LdapPort))
	}
	l = len(m.ConnectionSecurity)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.BaseDN)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.BindUsername)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.BindPassword)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.UserFilter)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.FirstNameAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.LastNameAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.EmailAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.UsernameAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.NicknameAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IdAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PositionAttribute)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginIdAttribute)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.SyncIntervalMinutes != 0 {
		n += 2 + sovModel(uint64(m.SyncIntervalMinutes))
	}
	if m.SkipCertificateVerification {
		n += 3
	}
	if m.QueryTimeout != 0 {
		n += 2 + sovModel(uint64(m.QueryTimeout))
	}
	if m.MaxPageSize != 0 {
		n += 2 + sovModel(uint64(m.MaxPageSize))
	}
	l = len(m.LoginFieldName)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonBorderColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonTextColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LocalizationSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.DefaultServerLocale)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DefaultClientLocale)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AvailableLocales)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LogSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableConsole {
		n += 2
	}
	l = len(m.ConsoleLevel)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.ConsoleJson {
		n += 2
	}
	if m.EnableFile {
		n += 2
	}
	l = len(m.FileLevel)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.FileJson {
		n += 2
	}
	l = len(m.FileLocation)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnableWebhookDebugging {
		n += 2
	}
	if m.EnableDiagnostics {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Manifest) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Server != nil {
		l = m.Server.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Backend != nil {
		l = m.Backend.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Webapp != nil {
		l = m.Webapp.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.SettingsSchema != nil {
		l = m.SettingsSchema.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManifestExecutables) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.LinuxAmd64)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DarwinAmd64)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.WindowsAmd64)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManifestServer) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Executables != nil {
		l = m.Executables.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Executable)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ManifestWebapp) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.BundlePath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessageExportSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableExport {
		n += 2
	}
	l = len(m.ExportFormat)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DailyRunTime)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.ExportFromTimestamp != 0 {
		n += 1 + sovModel(uint64(m.ExportFromTimestamp))
	}
	if m.BatchSize != 0 {
		n += 1 + sovModel(uint64(m.BatchSize))
	}
	if m.GlobalRelaySettings != nil {
		l = m.GlobalRelaySettings.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MetricsSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	if m.BlockProfileRate != 0 {
		n += 1 + sovModel(uint64(m.BlockProfileRate))
	}
	l = len(m.ListenAddress)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NativeAppSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.AppDownloadLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AndroidAppDownloadLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IosAppDownloadLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PasswordSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.MinimumLength != 0 {
		n += 1 + sovModel(uint64(m.MinimumLength))
	}
	if m.Lowercase {
		n += 2
	}
	if m.Number {
		n += 2
	}
	if m.Uppercase {
		n += 2
	}
	if m.Symbol {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PluginInfo) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Version)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Server != nil {
		l = m.Server.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Backend != nil {
		l = m.Backend.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Webapp != nil {
		l = m.Webapp.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.SettingsSchema != nil {
		l = m.SettingsSchema.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PluginOption) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PluginSetting) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.HelpText)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RegenerateHelpText)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Placeholder)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Options) > 0 {
		for _, e := range m.Options {
			l = e.ProtoSize()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PluginSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	if m.EnableUploads {
		n += 2
	}
	l = len(m.Directory)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ClientDirectory)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.PluginStates) > 0 {
		for k, v := range m.PluginStates {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.ProtoSize()
				l += 1 + sovModel(uint64(l))
			}
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + l
			n += mapEntrySize + 1 + sovModel(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PluginSettingsSchema) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Header)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Footer)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Settings) > 0 {
		for _, e := range m.Settings {
			l = e.ProtoSize()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PluginState) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Post) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.EditAt != 0 {
		n += 1 + sovModel(uint64(m.EditAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	if m.IsPinned {
		n += 2
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ChannelId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RootId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ParentId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.OriginalId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.MessageSource)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Hashtags)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Filenames) > 0 {
		for _, s := range m.Filenames {
			l = len(s)
			n += 2 + l + sovModel(uint64(l))
		}
	}
	if len(m.FileIds) > 0 {
		for _, s := range m.FileIds {
			l = len(s)
			n += 2 + l + sovModel(uint64(l))
		}
	}
	l = len(m.PendingPostId)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.HasReactions {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PostAction) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Integration != nil {
		l = m.Integration.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PostActionIntegration) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.URL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Preference) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Category)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PrivacySettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.ShowEmailAddress {
		n += 2
	}
	if m.ShowFullName {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RateLimitSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	if m.PerSec != 0 {
		n += 1 + sovModel(uint64(m.PerSec))
	}
	if m.MaxBurst != 0 {
		n += 1 + sovModel(uint64(m.MaxBurst))
	}
	if m.MemoryStoreSize != 0 {
		n += 1 + sovModel(uint64(m.MemoryStoreSize))
	}
	if m.VaryByRemoteAddr {
		n += 2
	}
	if m.VaryByUser {
		n += 2
	}
	l = len(m.VaryByHeader)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Role) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	if len(m.Permissions) > 0 {
		for _, s := range m.Permissions {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.SchemeManaged {
		n += 2
	}
	if m.BuiltIn {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SSOSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	l = len(m.Secret)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Scope)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AuthEndpoint)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TokenEndpoint)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.UserApiEndpoint)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SamlSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	if m.EnableSyncWithLdap {
		n += 2
	}
	if m.Verify {
		n += 2
	}
	if m.Encrypt {
		n += 2
	}
	l = len(m.IdpUrl)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IdpDescriptorUrl)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AssertionConsumerServiceURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ScopingIDPProviderId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ScopingIDPName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.IdpCertificateFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PublicCertificateFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PrivateKeyFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.FirstNameAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.LastNameAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.EmailAttribute)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.UsernameAttribute)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.NicknameAttribute)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LocaleAttribute)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.PositionAttribute)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonText)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonBorderColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.LoginButtonTextColor)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ServiceSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.SiteURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.WebsocketURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.LicenseFileLocation)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ListenAddress)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ConnectionSecurity)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TLSCertFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TLSKeyFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.UseLetsEncrypt {
		n += 2
	}
	l = len(m.LetsEncryptCertificateCacheFile)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Forward80To443 {
		n += 2
	}
	if m.ReadTimeout != 0 {
		n += 1 + sovModel(uint64(m.ReadTimeout))
	}
	if m.WriteTimeout != 0 {
		n += 1 + sovModel(uint64(m.WriteTimeout))
	}
	if m.MaximumLoginAttempts != 0 {
		n += 1 + sovModel(uint64(m.MaximumLoginAttempts))
	}
	if m.GoroutineHealthThreshold != 0 {
		n += 1 + sovModel(uint64(m.GoroutineHealthThreshold))
	}
	l = len(m.GoogleDeveloperKey)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnableOAuthServiceProvider {
		n += 3
	}
	if m.EnableIncomingWebhooks {
		n += 3
	}
	if m.EnableOutgoingWebhooks {
		n += 3
	}
	if m.EnableCommands {
		n += 3
	}
	if m.EnableOnlyAdminIntegrations {
		n += 3
	}
	if m.EnablePostUsernameOverride {
		n += 3
	}
	if m.EnablePostIconOverride {
		n += 3
	}
	if m.EnableLinkPreviews {
		n += 3
	}
	if m.EnableTesting {
		n += 3
	}
	if m.EnableDeveloper {
		n += 3
	}
	if m.EnableSecurityFixAlert {
		n += 3
	}
	if m.EnableInsecureOutgoingConnections {
		n += 3
	}
	l = len(m.AllowedUntrustedInternalConnections)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.EnableMultifactorAuthentication {
		n += 3
	}
	if m.EnforceMultifactorAuthentication {
		n += 3
	}
	if m.EnableUserAccessTokens {
		n += 3
	}
	l = len(m.AllowCorsFrom)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.AllowCookiesForSubdomains {
		n += 3
	}
	if m.SessionLengthWebInDays != 0 {
		n += 2 + sovModel(uint64(m.SessionLengthWebInDays))
	}
	if m.SessionLengthMobileInDays != 0 {
		n += 2 + sovModel(uint64(m.SessionLengthMobileInDays))
	}
	if m.SessionLengthSSOInDays != 0 {
		n += 2 + sovModel(uint64(m.SessionLengthSSOInDays))
	}
	if m.SessionCacheInMinutes != 0 {
		n += 2 + sovModel(uint64(m.SessionCacheInMinutes))
	}
	if m.SessionIdleTimeoutInMinutes != 0 {
		n += 2 + sovModel(uint64(m.SessionIdleTimeoutInMinutes))
	}
	if m.WebsocketSecurePort != 0 {
		n += 2 + sovModel(uint64(m.WebsocketSecurePort))
	}
	if m.WebsocketPort != 0 {
		n += 2 + sovModel(uint64(m.WebsocketPort))
	}
	l = len(m.WebserverMode)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.EnableCustomEmoji {
		n += 3
	}
	if m.EnableEmojiPicker {
		n += 3
	}
	if m.EnableGifPicker {
		n += 3
	}
	l = len(m.GfycatApiKey)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.GfycatApiSecret)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictCustomEmojiCreation)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPostDelete)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.AllowEditPost)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.PostEditTimeLimit != 0 {
		n += 2 + sovModel(uint64(m.PostEditTimeLimit))
	}
	if m.TimeBetweenUserTypingUpdatesMilliseconds != 0 {
		n += 2 + sovModel(uint64(m.TimeBetweenUserTypingUpdatesMilliseconds))
	}
	if m.EnablePostSearch {
		n += 3
	}
	if m.EnableUserTypingMessages {
		n += 3
	}
	if m.EnableChannelViewedMessages {
		n += 3
	}
	if m.EnableUserStatuses {
		n += 3
	}
	if m.ExperimentalEnableAuthenticationTransfer {
		n += 3
	}
	if m.ClusterLogTimeoutMilliseconds != 0 {
		n += 2 + sovModel(uint64(m.ClusterLogTimeoutMilliseconds))
	}
	if m.CloseUnusedDirectMessages {
		n += 3
	}
	if m.EnablePreviewFeatures {
		n += 3
	}
	if m.EnableTutorial {
		n += 3
	}
	if m.ExperimentalEnableDefaultChannelLeaveJoinMessages {
		n += 3
	}
	l = len(m.ExperimentalGroupUnreadChannels)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.ImageProxyType)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.ImageProxyURL)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.ImageProxyOptions)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.EnableAPITeamDeletion {
		n += 3
	}
	if m.ExperimentalEnableHardenedMode {
		n += 3
	}
	if m.ExperimentalLimitClientConfig {
		n += 3
	}
	if m.EnableEmailInvitations {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Session) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.ExpiresAt != 0 {
		n += 1 + sovModel(uint64(m.ExpiresAt))
	}
	if m.LastActivityAt != 0 {
		n += 1 + sovModel(uint64(m.LastActivityAt))
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DeviceId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Roles)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.IsOAuth {
		n += 2
	}
	if len(m.Props) > 0 {
		for k, v := range m.Props {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			n += mapEntrySize + 1 + sovModel(uint64(mapEntrySize))
		}
	}
	if len(m.TeamMembers) > 0 {
		for _, e := range m.TeamMembers {
			l = e.ProtoSize()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SlackAttachment) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovModel(uint64(m.Id))
	}
	l = len(m.Fallback)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Pretext)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AuthorName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AuthorLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AuthorIcon)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TitleLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Fields) > 0 {
		for _, e := range m.Fields {
			l = e.ProtoSize()
			n += 1 + l + sovModel(uint64(l))
		}
	}
	l = len(m.ImageURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ThumbURL)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Footer)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.FooterIcon)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.Actions) > 0 {
		for _, e := range m.Actions {
			l = e.ProtoSize()
			n += 2 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SlackAttachmentField) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Short {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SqlSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.DriverName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.DataSource)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if len(m.DataSourceReplicas) > 0 {
		for _, s := range m.DataSourceReplicas {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if len(m.DataSourceSearchReplicas) > 0 {
		for _, s := range m.DataSourceSearchReplicas {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.MaxIdleConns != 0 {
		n += 1 + sovModel(uint64(m.MaxIdleConns))
	}
	if m.ConnMaxLifetimeMilliseconds != 0 {
		n += 1 + sovModel(uint64(m.ConnMaxLifetimeMilliseconds))
	}
	if m.MaxOpenConns != 0 {
		n += 1 + sovModel(uint64(m.MaxOpenConns))
	}
	if m.Trace {
		n += 2
	}
	l = len(m.AtRestEncryptKey)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.QueryTimeout != 0 {
		n += 1 + sovModel(uint64(m.QueryTimeout))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Status) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Manual {
		n += 2
	}
	if m.LastActivityAt != 0 {
		n += 1 + sovModel(uint64(m.LastActivityAt))
	}
	l = len(m.ActiveChannel)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SupportSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.TermsOfServiceLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.PrivacyPolicyLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AboutLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.HelpLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ReportAProblemLink)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.SupportEmail)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SystemECDSAKey) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Curve)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Team) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	l = len(m.DisplayName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.CompanyName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AllowedDomains)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.InviteId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AllowOpenInvite {
		n += 2
	}
	if m.LastTeamIconUpdate != 0 {
		n += 1 + sovModel(uint64(m.LastTeamIconUpdate))
	}
	l = len(m.SchemeId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeamMember) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.TeamId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Roles)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	if m.SchemeUser {
		n += 2
	}
	if m.SchemeAdmin {
		n += 2
	}
	l = len(m.ExplicitRoles)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TeamSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.SiteName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.MaxUsersPerTeam != 0 {
		n += 1 + sovModel(uint64(m.MaxUsersPerTeam))
	}
	if m.EnableTeamCreation {
		n += 2
	}
	if m.EnableUserCreation {
		n += 2
	}
	if m.EnableOpenServer {
		n += 2
	}
	if m.EnableUserDeactivation {
		n += 2
	}
	l = len(m.RestrictCreationToDomains)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EnableCustomBrand {
		n += 2
	}
	l = len(m.CustomBrandText)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.CustomDescriptionText)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictDirectMessage)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictTeamInvite)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPublicChannelManagement)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPrivateChannelManagement)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPublicChannelCreation)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPrivateChannelCreation)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPublicChannelDeletion)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPrivateChannelDeletion)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	l = len(m.RestrictPrivateChannelManageMembers)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.EnableXToLeaveChannelsFromLHS {
		n += 3
	}
	if m.UserStatusAwayTimeout != 0 {
		n += 2 + sovModel(uint64(m.UserStatusAwayTimeout))
	}
	if m.MaxChannelsPerTeam != 0 {
		n += 2 + sovModel(uint64(m.MaxChannelsPerTeam))
	}
	if m.MaxNotificationsPerChannel != 0 {
		n += 2 + sovModel(uint64(m.MaxNotificationsPerChannel))
	}
	if m.EnableConfirmNotificationsToChannel {
		n += 3
	}
	l = len(m.TeammateNameDisplay)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.ExperimentalEnableAutomaticReplies {
		n += 3
	}
	if m.ExperimentalHideTownSquareinLHS {
		n += 3
	}
	if m.ExperimentalTownSquareIsReadOnly {
		n += 3
	}
	l = len(m.ExperimentalPrimaryTeam)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ThemeSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.EnableThemeSelection {
		n += 2
	}
	l = len(m.DefaultTheme)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AllowCustomThemes {
		n += 2
	}
	if len(m.AllowedThemes) > 0 {
		for _, s := range m.AllowedThemes {
			l = len(s)
			n += 1 + l + sovModel(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TimezoneSettings) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.SupportedTimezonesPath)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *User) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.CreateAt != 0 {
		n += 1 + sovModel(uint64(m.CreateAt))
	}
	if m.UpdateAt != 0 {
		n += 1 + sovModel(uint64(m.UpdateAt))
	}
	if m.DeleteAt != 0 {
		n += 1 + sovModel(uint64(m.DeleteAt))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AuthData)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.AuthService)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.EmailVerified {
		n += 2
	}
	l = len(m.Nickname)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Position)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.Roles)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.AllowMarketing {
		n += 3
	}
	if len(m.Props) > 0 {
		for k, v := range m.Props {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			n += mapEntrySize + 2 + sovModel(uint64(mapEntrySize))
		}
	}
	if len(m.NotifyProps) > 0 {
		for k, v := range m.NotifyProps {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			n += mapEntrySize + 2 + sovModel(uint64(mapEntrySize))
		}
	}
	if m.LastPasswordUpdate != 0 {
		n += 2 + sovModel(uint64(m.LastPasswordUpdate))
	}
	if m.LastPictureUpdate != 0 {
		n += 2 + sovModel(uint64(m.LastPictureUpdate))
	}
	if m.FailedAttempts != 0 {
		n += 2 + sovModel(uint64(m.FailedAttempts))
	}
	l = len(m.Locale)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if len(m.Timezone) > 0 {
		for k, v := range m.Timezone {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + len(v) + sovModel(uint64(len(v)))
			n += mapEntrySize + 2 + sovModel(uint64(mapEntrySize))
		}
	}
	if m.MfaActive {
		n += 3
	}
	l = len(m.MfaSecret)
	if l > 0 {
		n += 2 + l + sovModel(uint64(l))
	}
	if m.LastActivityAt != 0 {
		n += 2 + sovModel(uint64(m.LastActivityAt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebrtcSettings) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Enable {
		n += 2
	}
	l = len(m.GatewayWebsocketUrl)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.GatewayAdminUrl)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.GatewayAdminSecret)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.StunURI)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TurnURI)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TurnUsername)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TurnSharedKey)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebsocketBroadcast) ProtoSize() (n int) {
	var l int
	_ = l
	if len(m.OmitUsers) > 0 {
		for k, v := range m.OmitUsers {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovModel(uint64(len(k))) + 1 + 1
			n += mapEntrySize + 1 + sovModel(uint64(mapEntrySize))
		}
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.ChannelId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	l = len(m.TeamId)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.ContainsSanitizedData {
		n += 2
	}
	if m.ContainsSensitiveData {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_EnabledResponse) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Result1 {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_JobTypeRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_JobTypeResponse) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Result1)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_NameRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_NameResponse) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Result1)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_NextScheduleTimeRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Arg1 != nil {
		l = m.Arg1.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.Arg2)
	n += 1 + l + sovModel(uint64(l))
	if m.Arg3 {
		n += 2
	}
	if m.Arg4 != nil {
		l = m.Arg4.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_ScheduleJobRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Arg1 != nil {
		l = m.Arg1.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Arg2 {
		n += 2
	}
	if m.Arg3 != nil {
		l = m.Arg3.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Scheduler_ScheduleJobResponse) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Result1 != nil {
		l = m.Result1.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.Result2 != nil {
		l = m.Result2.ProtoSize()
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebSocketMessage_EventTypeRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebSocketMessage_EventTypeResponse) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Result1)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebSocketMessage_IsValidRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebSocketMessage_IsValidResponse) ProtoSize() (n int) {
	var l int
	_ = l
	if m.Result1 {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebSocketMessage_ToJsonRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebSocketMessage_ToJsonResponse) ProtoSize() (n int) {
	var l int
	_ = l
	l = len(m.Result1)
	if l > 0 {
		n += 1 + l + sovModel(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Worker_RunRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Worker_RunResponse) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Worker_StopRequest) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Worker_StopResponse) ProtoSize() (n int) {
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovModel(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozModel(x uint64) (n int) {
	return sovModel(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AnalyticsSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AnalyticsSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AnalyticsSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxUsersForStatistics", wireType)
			}
			m.MaxUsersForStatistics = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxUsersForStatistics |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AnnouncementSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AnnouncementSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AnnouncementSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableBanner", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableBanner = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannerText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BannerText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannerColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BannerColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BannerTextColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BannerTextColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowBannerDismissal", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowBannerDismissal = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AppError) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppError: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppError: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DetailedError", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DetailedError = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusCode", wireType)
			}
			m.StatusCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StatusCode |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Where", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Where = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsOAuth", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsOAuth = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Channel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Channel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Channel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Header = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purpose", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purpose = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPostAt", wireType)
			}
			m.LastPostAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPostAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalMsgCount", wireType)
			}
			m.TotalMsgCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalMsgCount |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtraUpdateAt", wireType)
			}
			m.ExtraUpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExtraUpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChannelMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChannelMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChannelMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastViewedAt", wireType)
			}
			m.LastViewedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastViewedAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgCount", wireType)
			}
			m.MsgCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgCount |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MentionCount", wireType)
			}
			m.MentionCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MentionCount |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyProps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NotifyProps == nil {
				m.NotifyProps = make(StringMap)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.NotifyProps[mapkey] = mapvalue
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateAt", wireType)
			}
			m.LastUpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeUser", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SchemeUser = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SchemeAdmin = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitRoles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExplicitRoles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClientRequirements) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClientRequirements: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClientRequirements: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidLatestVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidLatestVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidMinVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidMinVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DesktopLatestVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DesktopLatestVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DesktopMinVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DesktopMinVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IosLatestVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IosLatestVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IosMinVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IosMinVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OverrideHostname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OverrideHostname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseIpAddress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UseIpAddress = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseExperimentalGossip", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UseExperimentalGossip = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadOnlyConfig", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReadOnlyConfig = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GossipPort", wireType)
			}
			m.GossipPort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GossipPort |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StreamingPort", wireType)
			}
			m.StreamingPort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StreamingPort |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxIdleConns", wireType)
			}
			m.MaxIdleConns = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxIdleConns |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxIdleConnsPerHost", wireType)
			}
			m.MaxIdleConnsPerHost = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxIdleConnsPerHost |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdleConnTimeoutMilliseconds", wireType)
			}
			m.IdleConnTimeoutMilliseconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IdleConnTimeoutMilliseconds |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Command) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Command: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Command: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trigger", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Trigger = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Method", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Method = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoComplete", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AutoComplete = bool(v != 0)
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoCompleteDesc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AutoCompleteDesc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoCompleteHint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AutoCompleteHint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field URL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.URL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommandArgs) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommandArgs: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommandArgs: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Command", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Command = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SiteURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Session", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Session.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CommandResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CommandResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CommandResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResponseType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResponseType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IconURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IconURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GotoLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GotoLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = append(m.Attachments, &SlackAttachment{})
			if err := m.Attachments[len(m.Attachments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ComplianceSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ComplianceSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ComplianceSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Directory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Directory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableDaily", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableDaily = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Config) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ServiceSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TeamSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientRequirements", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClientRequirements.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SqlSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SqlSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LogSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PasswordSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.FileSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.EmailSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtensionSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ExtensionSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RateLimitSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RateLimitSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivacySettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PrivacySettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SupportSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnnouncementSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AnnouncementSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ThemeSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GitLabSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.GitLabSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoogleSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.GoogleSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Office365Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Office365Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LdapSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LdapSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ComplianceSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ComplianceSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalizationSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LocalizationSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SamlSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.SamlSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NativeAppSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.NativeAppSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ClusterSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MetricsSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MetricsSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ExperimentalSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnalyticsSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AnalyticsSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebrtcSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.WebrtcSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ElasticsearchSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ElasticsearchSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataRetentionSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DataRetentionSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageExportSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MessageExportSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JobSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.JobSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PluginSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PluginSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 33:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplaySettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DisplaySettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimezoneSettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TimezoneSettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Customer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Customer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Customer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Company", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Company = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DataRetentionSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DataRetentionSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DataRetentionSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableMessageDeletion", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableMessageDeletion = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableFileDeletion", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableFileDeletion = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageRetentionDays", wireType)
			}
			m.MessageRetentionDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageRetentionDays |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileRetentionDays", wireType)
			}
			m.FileRetentionDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileRetentionDays |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletionJobStartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletionJobStartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DisplaySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DisplaySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DisplaySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomUrlSchemes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomUrlSchemes = append(m.CustomUrlSchemes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalTimezone", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalTimezone = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ElasticsearchSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ElasticsearchSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ElasticsearchSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableIndexing", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableIndexing = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSearching", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSearching = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sniff", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Sniff = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostIndexReplicas", wireType)
			}
			m.PostIndexReplicas = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PostIndexReplicas |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostIndexShards", wireType)
			}
			m.PostIndexShards = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PostIndexShards |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AggregatePostsAfterDays", wireType)
			}
			m.AggregatePostsAfterDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AggregatePostsAfterDays |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostsAggregatorJobStartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostsAggregatorJobStartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IndexPrefix", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IndexPrefix = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveIndexingBatchSize", wireType)
			}
			m.LiveIndexingBatchSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LiveIndexingBatchSize |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BulkIndexingTimeWindowSeconds", wireType)
			}
			m.BulkIndexingTimeWindowSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BulkIndexingTimeWindowSeconds |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestTimeoutSeconds", wireType)
			}
			m.RequestTimeoutSeconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestTimeoutSeconds |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmailSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmailSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmailSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSignUpWithEmail", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSignUpWithEmail = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSignInWithEmail", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSignInWithEmail = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSignInWithUsername", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSignInWithUsername = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendEmailNotifications", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendEmailNotifications = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseChannelInEmailNotifications", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UseChannelInEmailNotifications = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequireEmailVerification", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RequireEmailVerification = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedbackName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedbackName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedbackEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedbackEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FeedbackOrganization", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FeedbackOrganization = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSMTPAuth", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSMTPAuth = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SMTPUsername", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SMTPUsername = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SMTPPassword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SMTPPassword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SMTPServer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SMTPServer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SMTPPort", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SMTPPort = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionSecurity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionSecurity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteSalt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteSalt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendPushNotifications", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SendPushNotifications = bool(v != 0)
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushNotificationServer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PushNotificationServer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushNotificationContents", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PushNotificationContents = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableEmailBatching", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableEmailBatching = bool(v != 0)
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailBatchingBufferSize", wireType)
			}
			m.EmailBatchingBufferSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EmailBatchingBufferSize |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailBatchingInterval", wireType)
			}
			m.EmailBatchingInterval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EmailBatchingInterval |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnablePreviewModeBanner", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnablePreviewModeBanner = bool(v != 0)
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipServerCertificateVerification", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipServerCertificateVerification = bool(v != 0)
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailNotificationContentsType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailNotificationContentsType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonBorderColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonBorderColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonTextColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonTextColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExperimentalSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExperimentalSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExperimentalSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSideCertEnable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClientSideCertEnable = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientSideCertCheck", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientSideCertCheck = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtensionSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtensionSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtensionSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableExperimentalExtensions", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableExperimentalExtensions = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedExtensionsIDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowedExtensionsIDs = append(m.AllowedExtensionsIDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Features) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Features: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Features: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			m.Users = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Users |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LDAP", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LDAP = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MFA", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MFA = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoogleOAuth", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GoogleOAuth = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Office365OAuth", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Office365OAuth = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Compliance", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Compliance = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cluster", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Cluster = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metrics", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metrics = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MHPNS", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MHPNS = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SAML", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SAML = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Elasticsearch", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Elasticsearch = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Announcement", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Announcement = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThemeManagement", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ThemeManagement = bool(v != 0)
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailNotificationContents", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EmailNotificationContents = bool(v != 0)
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataRetention", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DataRetention = bool(v != 0)
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageExport", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageExport = bool(v != 0)
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomPermissionsSchemes", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CustomPermissionsSchemes = bool(v != 0)
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FutureFeatures", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FutureFeatures = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatorId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThumbnailPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThumbnailPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreviewPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PreviewPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extension", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Extension = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size", wireType)
			}
			m.Size = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasPreviewImage", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasPreviewImage = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableFileAttachments", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableFileAttachments = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableMobileUpload", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableMobileUpload = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableMobileDownload", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableMobileDownload = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxFileSize", wireType)
			}
			m.MaxFileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxFileSize |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DriverName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DriverName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Directory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Directory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnablePublicLink", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnablePublicLink = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicLinkSalt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicLinkSalt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialFont", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitialFont = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3AccessKeyId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmazonS3AccessKeyId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3SecretAccessKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmazonS3SecretAccessKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3Bucket", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmazonS3Bucket = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmazonS3Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3Endpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AmazonS3Endpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3SSL", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AmazonS3SSL = bool(v != 0)
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3SignV2", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AmazonS3SignV2 = bool(v != 0)
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3SSE", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AmazonS3SSE = bool(v != 0)
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmazonS3Trace", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AmazonS3Trace = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GlobalRelayMessageExportSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GlobalRelayMessageExportSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GlobalRelayMessageExportSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomerType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmtpUsername", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SmtpUsername = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmtpPassword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SmtpPassword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Job) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Job: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Job: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Priority", wireType)
			}
			m.Priority = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Priority |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartAt", wireType)
			}
			m.StartAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastActivityAt", wireType)
			}
			m.LastActivityAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastActivityAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Progress", wireType)
			}
			m.Progress = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Progress |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Data[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *JobSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: JobSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: JobSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RunJobs", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RunJobs = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RunScheduler", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RunScheduler = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LdapSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LdapSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LdapSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSync", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSync = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LdapServer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LdapServer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LdapPort", wireType)
			}
			m.LdapPort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LdapPort |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionSecurity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionSecurity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseDN", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseDN = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindUsername", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BindUsername = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BindPassword", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BindPassword = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserFilter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserFilter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstNameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstNameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastNameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastNameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsernameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UsernameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NicknameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NicknameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PositionAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PositionAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginIdAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginIdAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncIntervalMinutes", wireType)
			}
			m.SyncIntervalMinutes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SyncIntervalMinutes |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SkipCertificateVerification", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SkipCertificateVerification = bool(v != 0)
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryTimeout", wireType)
			}
			m.QueryTimeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryTimeout |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPageSize", wireType)
			}
			m.MaxPageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPageSize |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginFieldName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginFieldName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonBorderColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonBorderColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonTextColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonTextColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LocalizationSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocalizationSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocalizationSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultServerLocale", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultServerLocale = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultClientLocale", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultClientLocale = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvailableLocales", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvailableLocales = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LogSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LogSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LogSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableConsole", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableConsole = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsoleLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConsoleLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConsoleJson", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConsoleJson = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableFile", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableFile = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileJson", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileJson = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableWebhookDebugging", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableWebhookDebugging = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableDiagnostics", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableDiagnostics = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Manifest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Manifest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Manifest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Server", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Server == nil {
				m.Server = &ManifestServer{}
			}
			if err := m.Server.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Backend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Backend == nil {
				m.Backend = &ManifestServer{}
			}
			if err := m.Backend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Webapp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Webapp == nil {
				m.Webapp = &ManifestWebapp{}
			}
			if err := m.Webapp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SettingsSchema", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SettingsSchema == nil {
				m.SettingsSchema = &PluginSettingsSchema{}
			}
			if err := m.SettingsSchema.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManifestExecutables) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManifestExecutables: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManifestExecutables: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LinuxAmd64", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LinuxAmd64 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DarwinAmd64", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DarwinAmd64 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WindowsAmd64", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WindowsAmd64 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManifestServer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManifestServer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManifestServer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Executables", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Executables == nil {
				m.Executables = &ManifestExecutables{}
			}
			if err := m.Executables.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Executable", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Executable = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ManifestWebapp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ManifestWebapp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ManifestWebapp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BundlePath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BundlePath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessageExportSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessageExportSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessageExportSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableExport", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableExport = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExportFormat", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExportFormat = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DailyRunTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DailyRunTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExportFromTimestamp", wireType)
			}
			m.ExportFromTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExportFromTimestamp |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BatchSize", wireType)
			}
			m.BatchSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BatchSize |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GlobalRelaySettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GlobalRelaySettings == nil {
				m.GlobalRelaySettings = &GlobalRelayMessageExportSettings{}
			}
			if err := m.GlobalRelaySettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MetricsSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MetricsSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MetricsSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockProfileRate", wireType)
			}
			m.BlockProfileRate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockProfileRate |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListenAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListenAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NativeAppSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NativeAppSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NativeAppSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppDownloadLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppDownloadLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AndroidAppDownloadLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AndroidAppDownloadLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IosAppDownloadLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IosAppDownloadLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinimumLength", wireType)
			}
			m.MinimumLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinimumLength |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lowercase", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Lowercase = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Number = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uppercase", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Uppercase = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Symbol = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PluginInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PluginInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PluginInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Server", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Server == nil {
				m.Server = &ManifestServer{}
			}
			if err := m.Server.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Backend", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Backend == nil {
				m.Backend = &ManifestServer{}
			}
			if err := m.Backend.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Webapp", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Webapp == nil {
				m.Webapp = &ManifestWebapp{}
			}
			if err := m.Webapp.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SettingsSchema", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SettingsSchema == nil {
				m.SettingsSchema = &PluginSettingsSchema{}
			}
			if err := m.SettingsSchema.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PluginOption) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PluginOption: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PluginOption: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PluginSetting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PluginSetting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PluginSetting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelpText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HelpText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegenerateHelpText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegenerateHelpText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Placeholder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Placeholder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Options", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Options = append(m.Options, &PluginOption{})
			if err := m.Options[len(m.Options)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PluginSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PluginSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PluginSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableUploads", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableUploads = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Directory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Directory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientDirectory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientDirectory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PluginStates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PluginStates == nil {
				m.PluginStates = make(map[string]*PluginState)
			}
			var mapkey string
			var mapvalue *PluginState
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= (int(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthModel
					}
					postmsgIndex := iNdEx + mapmsglen
					if mapmsglen < 0 {
						return ErrInvalidLengthModel
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &PluginState{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.PluginStates[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PluginSettingsSchema) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PluginSettingsSchema: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PluginSettingsSchema: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Header = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Settings = append(m.Settings, &PluginSetting{})
			if err := m.Settings[len(m.Settings)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PluginState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PluginState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PluginState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Post) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Post: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Post: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditAt", wireType)
			}
			m.EditAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EditAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPinned", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPinned = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginalId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginalId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageSource = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hashtags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hashtags = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filenames", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filenames = append(m.Filenames, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileIds = append(m.FileIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PendingPostId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PendingPostId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasReactions", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasReactions = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PostAction) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostAction: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostAction: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Integration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Integration == nil {
				m.Integration = &PostActionIntegration{}
			}
			if err := m.Integration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PostActionIntegration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostActionIntegration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostActionIntegration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field URL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.URL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Preference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Preference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Preference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Category = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PrivacySettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivacySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivacySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowEmailAddress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowEmailAddress = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShowFullName", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ShowFullName = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RateLimitSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RateLimitSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RateLimitSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PerSec", wireType)
			}
			m.PerSec = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PerSec |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxBurst", wireType)
			}
			m.MaxBurst = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxBurst |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemoryStoreSize", wireType)
			}
			m.MemoryStoreSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemoryStoreSize |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VaryByRemoteAddr", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VaryByRemoteAddr = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VaryByUser", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VaryByUser = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VaryByHeader", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VaryByHeader = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Role) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Role: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Role: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Permissions = append(m.Permissions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeManaged", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SchemeManaged = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuiltIn", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BuiltIn = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SSOSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SSOSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SSOSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Secret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Secret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Scope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Scope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserApiEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserApiEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SamlSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SamlSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SamlSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSyncWithLdap", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSyncWithLdap = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verify", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verify = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Encrypt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Encrypt = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdpUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdpUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdpDescriptorUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdpDescriptorUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssertionConsumerServiceURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssertionConsumerServiceURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScopingIDPProviderId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScopingIDPProviderId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScopingIDPName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScopingIDPName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdpCertificateFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdpCertificateFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicCertificateFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicCertificateFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivateKeyFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrivateKeyFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstNameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstNameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastNameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastNameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EmailAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UsernameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UsernameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NicknameAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NicknameAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocaleAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocaleAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PositionAttribute", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PositionAttribute = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonBorderColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonBorderColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoginButtonTextColor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LoginButtonTextColor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ServiceSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ServiceSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ServiceSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SiteURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebsocketURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebsocketURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LicenseFileLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LicenseFileLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListenAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListenAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectionSecurity", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConnectionSecurity = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TLSCertFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TLSCertFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TLSKeyFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TLSKeyFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UseLetsEncrypt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UseLetsEncrypt = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LetsEncryptCertificateCacheFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LetsEncryptCertificateCacheFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Forward80To443", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Forward80To443 = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadTimeout", wireType)
			}
			m.ReadTimeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadTimeout |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteTimeout", wireType)
			}
			m.WriteTimeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WriteTimeout |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaximumLoginAttempts", wireType)
			}
			m.MaximumLoginAttempts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaximumLoginAttempts |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoroutineHealthThreshold", wireType)
			}
			m.GoroutineHealthThreshold = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GoroutineHealthThreshold |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoogleDeveloperKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoogleDeveloperKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableOAuthServiceProvider", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableOAuthServiceProvider = bool(v != 0)
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableIncomingWebhooks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableIncomingWebhooks = bool(v != 0)
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableOutgoingWebhooks", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableOutgoingWebhooks = bool(v != 0)
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableCommands", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableCommands = bool(v != 0)
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableOnlyAdminIntegrations", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableOnlyAdminIntegrations = bool(v != 0)
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnablePostUsernameOverride", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnablePostUsernameOverride = bool(v != 0)
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnablePostIconOverride", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnablePostIconOverride = bool(v != 0)
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableLinkPreviews", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableLinkPreviews = bool(v != 0)
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableTesting", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableTesting = bool(v != 0)
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableDeveloper", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableDeveloper = bool(v != 0)
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableSecurityFixAlert", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableSecurityFixAlert = bool(v != 0)
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableInsecureOutgoingConnections", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableInsecureOutgoingConnections = bool(v != 0)
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedUntrustedInternalConnections", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowedUntrustedInternalConnections = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableMultifactorAuthentication", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableMultifactorAuthentication = bool(v != 0)
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnforceMultifactorAuthentication", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnforceMultifactorAuthentication = bool(v != 0)
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableUserAccessTokens", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableUserAccessTokens = bool(v != 0)
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowCorsFrom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowCorsFrom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowCookiesForSubdomains", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowCookiesForSubdomains = bool(v != 0)
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionLengthWebInDays", wireType)
			}
			m.SessionLengthWebInDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionLengthWebInDays |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionLengthMobileInDays", wireType)
			}
			m.SessionLengthMobileInDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionLengthMobileInDays |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionLengthSSOInDays", wireType)
			}
			m.SessionLengthSSOInDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionLengthSSOInDays |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 37:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionCacheInMinutes", wireType)
			}
			m.SessionCacheInMinutes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionCacheInMinutes |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 38:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionIdleTimeoutInMinutes", wireType)
			}
			m.SessionIdleTimeoutInMinutes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SessionIdleTimeoutInMinutes |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 39:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebsocketSecurePort", wireType)
			}
			m.WebsocketSecurePort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WebsocketSecurePort |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 40:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebsocketPort", wireType)
			}
			m.WebsocketPort = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WebsocketPort |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 41:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebserverMode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebserverMode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 42:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableCustomEmoji", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableCustomEmoji = bool(v != 0)
		case 43:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableEmojiPicker", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableEmojiPicker = bool(v != 0)
		case 44:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableGifPicker", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableGifPicker = bool(v != 0)
		case 45:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GfycatApiKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GfycatApiKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 46:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GfycatApiSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GfycatApiSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 47:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictCustomEmojiCreation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictCustomEmojiCreation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 48:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPostDelete", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPostDelete = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 49:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowEditPost", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowEditPost = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostEditTimeLimit", wireType)
			}
			m.PostEditTimeLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PostEditTimeLimit |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 51:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeBetweenUserTypingUpdatesMilliseconds", wireType)
			}
			m.TimeBetweenUserTypingUpdatesMilliseconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeBetweenUserTypingUpdatesMilliseconds |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 52:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnablePostSearch", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnablePostSearch = bool(v != 0)
		case 53:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableUserTypingMessages", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableUserTypingMessages = bool(v != 0)
		case 54:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableChannelViewedMessages", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableChannelViewedMessages = bool(v != 0)
		case 55:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableUserStatuses", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableUserStatuses = bool(v != 0)
		case 56:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalEnableAuthenticationTransfer", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalEnableAuthenticationTransfer = bool(v != 0)
		case 57:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterLogTimeoutMilliseconds", wireType)
			}
			m.ClusterLogTimeoutMilliseconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClusterLogTimeoutMilliseconds |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 58:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloseUnusedDirectMessages", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CloseUnusedDirectMessages = bool(v != 0)
		case 59:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnablePreviewFeatures", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnablePreviewFeatures = bool(v != 0)
		case 60:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableTutorial", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableTutorial = bool(v != 0)
		case 61:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalEnableDefaultChannelLeaveJoinMessages", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalEnableDefaultChannelLeaveJoinMessages = bool(v != 0)
		case 62:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalGroupUnreadChannels", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExperimentalGroupUnreadChannels = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 63:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageProxyType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageProxyType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 64:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageProxyURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageProxyURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 65:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageProxyOptions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageProxyOptions = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 66:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableAPITeamDeletion", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableAPITeamDeletion = bool(v != 0)
		case 67:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalEnableHardenedMode", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalEnableHardenedMode = bool(v != 0)
		case 68:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalLimitClientConfig", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalLimitClientConfig = bool(v != 0)
		case 69:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableEmailInvitations", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableEmailInvitations = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Session) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Session: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Session: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiresAt", wireType)
			}
			m.ExpiresAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpiresAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastActivityAt", wireType)
			}
			m.LastActivityAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastActivityAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsOAuth", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsOAuth = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Props", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Props == nil {
				m.Props = make(StringMap)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Props[mapkey] = mapvalue
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamMembers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamMembers = append(m.TeamMembers, &TeamMember{})
			if err := m.TeamMembers[len(m.TeamMembers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SlackAttachment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SlackAttachment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SlackAttachment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fallback", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fallback = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pretext", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pretext = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthorIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TitleLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TitleLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fields", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fields = append(m.Fields, &SlackAttachmentField{})
			if err := m.Fields[len(m.Fields)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThumbURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ThumbURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Footer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FooterIcon", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FooterIcon = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Actions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Actions = append(m.Actions, &PostAction{})
			if err := m.Actions[len(m.Actions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SlackAttachmentField) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SlackAttachmentField: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SlackAttachmentField: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Short", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Short = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SqlSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SqlSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SqlSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DriverName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DriverName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataSource = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataSourceReplicas", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataSourceReplicas = append(m.DataSourceReplicas, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataSourceSearchReplicas", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataSourceSearchReplicas = append(m.DataSourceSearchReplicas, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxIdleConns", wireType)
			}
			m.MaxIdleConns = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxIdleConns |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnMaxLifetimeMilliseconds", wireType)
			}
			m.ConnMaxLifetimeMilliseconds = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnMaxLifetimeMilliseconds |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxOpenConns", wireType)
			}
			m.MaxOpenConns = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxOpenConns |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trace", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Trace = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AtRestEncryptKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AtRestEncryptKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryTimeout", wireType)
			}
			m.QueryTimeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.QueryTimeout |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Status) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Status: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Status: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Manual", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Manual = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastActivityAt", wireType)
			}
			m.LastActivityAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastActivityAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveChannel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ActiveChannel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SupportSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SupportSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SupportSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TermsOfServiceLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TermsOfServiceLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivacyPolicyLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrivacyPolicyLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AboutLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AboutLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HelpLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HelpLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReportAProblemLink", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReportAProblemLink = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportEmail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportEmail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemECDSAKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemECDSAKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemECDSAKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Curve", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Curve = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Team) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Team: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Team: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompanyName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedDomains", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowedDomains = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InviteId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowOpenInvite", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowOpenInvite = bool(v != 0)
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTeamIconUpdate", wireType)
			}
			m.LastTeamIconUpdate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastTeamIconUpdate |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SchemeId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeamMember) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeamMember: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeamMember: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeUser", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SchemeUser = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SchemeAdmin", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SchemeAdmin = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitRoles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExplicitRoles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TeamSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TeamSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TeamSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SiteName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SiteName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxUsersPerTeam", wireType)
			}
			m.MaxUsersPerTeam = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxUsersPerTeam |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableTeamCreation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableTeamCreation = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableUserCreation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableUserCreation = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableOpenServer", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableOpenServer = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableUserDeactivation", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableUserDeactivation = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictCreationToDomains", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictCreationToDomains = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableCustomBrand", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableCustomBrand = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomBrandText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomBrandText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomDescriptionText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomDescriptionText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictDirectMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictDirectMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictTeamInvite", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictTeamInvite = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPublicChannelManagement", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPublicChannelManagement = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPrivateChannelManagement", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPrivateChannelManagement = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPublicChannelCreation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPublicChannelCreation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPrivateChannelCreation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPrivateChannelCreation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPublicChannelDeletion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPublicChannelDeletion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPrivateChannelDeletion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPrivateChannelDeletion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RestrictPrivateChannelManageMembers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RestrictPrivateChannelManageMembers = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableXToLeaveChannelsFromLHS", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableXToLeaveChannelsFromLHS = bool(v != 0)
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserStatusAwayTimeout", wireType)
			}
			m.UserStatusAwayTimeout = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserStatusAwayTimeout |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxChannelsPerTeam", wireType)
			}
			m.MaxChannelsPerTeam = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxChannelsPerTeam |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxNotificationsPerChannel", wireType)
			}
			m.MaxNotificationsPerChannel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxNotificationsPerChannel |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableConfirmNotificationsToChannel", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableConfirmNotificationsToChannel = bool(v != 0)
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeammateNameDisplay", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeammateNameDisplay = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalEnableAutomaticReplies", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalEnableAutomaticReplies = bool(v != 0)
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalHideTownSquareinLHS", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalHideTownSquareinLHS = bool(v != 0)
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalTownSquareIsReadOnly", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentalTownSquareIsReadOnly = bool(v != 0)
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentalPrimaryTeam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExperimentalPrimaryTeam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ThemeSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ThemeSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ThemeSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableThemeSelection", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableThemeSelection = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultTheme", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultTheme = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowCustomThemes", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowCustomThemes = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowedThemes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllowedThemes = append(m.AllowedThemes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimezoneSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TimezoneSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TimezoneSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SupportedTimezonesPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SupportedTimezonesPath = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *User) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateAt", wireType)
			}
			m.CreateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAt", wireType)
			}
			m.UpdateAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteAt", wireType)
			}
			m.DeleteAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeleteAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthData", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthData = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthService", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthService = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EmailVerified = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Nickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Nickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Position = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowMarketing", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowMarketing = bool(v != 0)
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Props", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Props == nil {
				m.Props = make(StringMap)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Props[mapkey] = mapvalue
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyProps", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NotifyProps == nil {
				m.NotifyProps = make(StringMap)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.NotifyProps[mapkey] = mapvalue
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPasswordUpdate", wireType)
			}
			m.LastPasswordUpdate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPasswordUpdate |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPictureUpdate", wireType)
			}
			m.LastPictureUpdate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPictureUpdate |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FailedAttempts", wireType)
			}
			m.FailedAttempts = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FailedAttempts |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locale", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Locale = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timezone", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Timezone == nil {
				m.Timezone = make(StringMap)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Timezone[mapkey] = mapvalue
			iNdEx = postIndex
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MfaActive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MfaActive = bool(v != 0)
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MfaSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MfaSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastActivityAt", wireType)
			}
			m.LastActivityAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastActivityAt |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebrtcSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebrtcSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebrtcSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enable", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Enable = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayWebsocketUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayWebsocketUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayAdminUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayAdminUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GatewayAdminSecret", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GatewayAdminSecret = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StunURI", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StunURI = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TurnURI", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TurnURI = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TurnUsername", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TurnUsername = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TurnSharedKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TurnSharedKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebsocketBroadcast) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebsocketBroadcast: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebsocketBroadcast: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OmitUsers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OmitUsers == nil {
				m.OmitUsers = make(map[string]bool)
			}
			var mapkey string
			var mapvalue bool
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowModel
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= (uint64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthModel
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var mapvaluetemp int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowModel
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapvaluetemp |= (int(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					mapvalue = bool(mapvaluetemp != 0)
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipModel(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if skippy < 0 {
						return ErrInvalidLengthModel
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.OmitUsers[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContainsSanitizedData", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContainsSanitizedData = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContainsSensitiveData", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ContainsSensitiveData = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_EnabledResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_EnabledResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_EnabledResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result1 = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_JobTypeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_JobTypeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_JobTypeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_JobTypeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_JobTypeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_JobTypeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_NameRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_NameRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_NameRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_NameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_NameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_NameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_NextScheduleTimeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_NextScheduleTimeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_NextScheduleTimeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg1", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Arg1 == nil {
				m.Arg1 = &Config{}
			}
			if err := m.Arg1.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.Arg2, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg3", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Arg3 = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg4", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Arg4 == nil {
				m.Arg4 = &Job{}
			}
			if err := m.Arg4.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_ScheduleJobRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_ScheduleJobRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_ScheduleJobRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg1", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Arg1 == nil {
				m.Arg1 = &Config{}
			}
			if err := m.Arg1.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg2", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Arg2 = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Arg3", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Arg3 == nil {
				m.Arg3 = &Job{}
			}
			if err := m.Arg3.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Scheduler_ScheduleJobResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Scheduler_ScheduleJobResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Scheduler_ScheduleJobResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result1 == nil {
				m.Result1 = &Job{}
			}
			if err := m.Result1.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result2", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Result2 == nil {
				m.Result2 = &AppError{}
			}
			if err := m.Result2.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebSocketMessage_EventTypeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage_EventTypeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage_EventTypeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebSocketMessage_EventTypeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage_EventTypeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage_EventTypeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebSocketMessage_IsValidRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage_IsValidRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage_IsValidRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebSocketMessage_IsValidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage_IsValidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage_IsValidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Result1 = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebSocketMessage_ToJsonRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage_ToJsonRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage_ToJsonRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebSocketMessage_ToJsonResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebSocketMessage_ToJsonResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebSocketMessage_ToJsonResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Result1", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowModel
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthModel
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Result1 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Worker_RunRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Worker_RunRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Worker_RunRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Worker_RunResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Worker_RunResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Worker_RunResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Worker_StopRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Worker_StopRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Worker_StopRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Worker_StopResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowModel
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Worker_StopResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Worker_StopResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipModel(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthModel
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipModel(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowModel
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowModel
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthModel
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowModel
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipModel(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthModel = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowModel   = fmt.Errorf("proto: integer overflow")
)

func init() {
	proto.RegisterFile("github.com/mattermost/mattermost-server/mmproto/model.proto", fileDescriptor_model_83a4831f39e34d4c)
}

var fileDescriptor_model_83a4831f39e34d4c = []byte{
	// 11054 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0x4d, 0x8c, 0x24, 0xc7,
	0xb6, 0xd6, 0xed, 0xff, 0xaa, 0x53, 0xfd, 0x1b, 0xfd, 0x57, 0xd3, 0xe3, 0x99, 0x9e, 0x1f, 0xff,
	0x8c, 0xc7, 0xf6, 0xd8, 0x9e, 0xb1, 0x7d, 0x7d, 0xaf, 0xaf, 0xef, 0x75, 0xff, 0xcc, 0x78, 0xda,
	0xee, 0x99, 0xe9, 0x9b, 0xd5, 0x63, 0x5f, 0xde, 0x8f, 0x52, 0xd1, 0x95, 0x51, 0x55, 0x79, 0x27,
	0x2b, 0x33, 0x9d, 0x99, 0xd5, 0x3f, 0x5e, 0xbd, 0x05, 0x82, 0xc7, 0x02, 0xc4, 0x82, 0x05, 0x08,
	0x21, 0xbd, 0x0d, 0x12, 0x3b, 0x40, 0x20, 0x84, 0x10, 0x3b, 0x04, 0xdc, 0x0d, 0x02, 0xb1, 0x40,
	0x7a, 0x02, 0x06, 0x98, 0xf7, 0x10, 0x6f, 0x03, 0x5b, 0xa4, 0xb7, 0x01, 0xc5, 0x39, 0x27, 0x32,
	0x23, 0xb3, 0xaa, 0x7b, 0x6c, 0x3f, 0xf4, 0x56, 0xac, 0xba, 0xf3, 0x9c, 0xef, 0x9c, 0x8c, 0x8c,
	0x9f, 0x13, 0x71, 0x4e, 0x9c, 0x88, 0x82, 0x4f, 0xba, 0x7e, 0xd6, 0x1b, 0x1c, 0xdd, 0x69, 0x47,
	0xfd, 0x77, 0xfb, 0x32, 0xcb, 0x54, 0xd2, 0x8f, 0xd2, 0xcc, 0xfa, 0xf7, 0x9d, 0x54, 0x25, 0xc7,
	0x2a, 0x79, 0xb7, 0xdf, 0x8f, 0x93, 0x28, 0x8b, 0xde, 0xed, 0x47, 0x9e, 0x0a, 0xee, 0xe0, 0xff,
	0x62, 0x86, 0x89, 0x1b, 0xef, 0x58, 0x5a, 0xba, 0x51, 0x37, 0x7a, 0x17, 0xc9, 0x47, 0x83, 0x0e,
	0x3e, 0x91, 0xa0, 0xfe, 0x8f, 0xe4, 0x36, 0x36, 0xbb, 0x51, 0xd4, 0x0d, 0x54, 0x81, 0xca, 0xfc,
	0xbe, 0x4a, 0x33, 0xd9, 0x8f, 0x09, 0x70, 0xe3, 0xb7, 0x61, 0x69, 0x2b, 0x94, 0xc1, 0x59, 0xe6,
	0xb7, 0xd3, 0x96, 0xca, 0x32, 0x3f, 0xec, 0xa6, 0xe2, 0x33, 0x68, 0xf6, 0xe5, 0xa9, 0x3b, 0x48,
	0x55, 0x92, 0xba, 0x9d, 0x28, 0x71, 0xd3, 0x4c, 0x66, 0x7e, 0xaa, 0x31, 0xcd, 0xb1, 0x6b, 0x63,
	0xb7, 0x26, 0xb6, 0x67, 0xfe, 0xf4, 0xf9, 0xe6, 0x84, 0x1f, 0x66, 0xce, 0x6a, 0x5f, 0x9e, 0x3e,
	0xd5, 0xb8, 0x07, 0x51, 0xd2, 0xca, 0x51, 0x3f, 0x9d, 0xfc, 0xfd, 0x3f, 0xd8, 0xfc, 0xd1, 0x8d,
	0xff, 0x31, 0x06, 0x2b, 0x5b, 0x61, 0x18, 0x0d, 0xc2, 0xb6, 0xea, 0xab, 0x30, 0xcb, 0x5f, 0x70,
	0x13, 0xe6, 0x54, 0x28, 0x8f, 0x02, 0xe5, 0x1e, 0xc9, 0x30, 0x54, 0x09, 0x6a, 0xad, 0x39, 0xb3,
	0x44, 0xdc, 0x46, 0x9a, 0xd8, 0x84, 0x06, 0x71, 0xdd, 0x4c, 0x9d, 0x66, 0xcd, 0xf1, 0x6b, 0x63,
	0xb7, 0xea, 0x0e, 0x10, 0xe9, 0x50, 0x9d, 0x66, 0xe2, 0x3a, 0xcc, 0x32, 0xa0, 0x1d, 0x05, 0x51,
	0xd2, 0x9c, 0x40, 0x04, 0x0b, 0xed, 0x68, 0x92, 0xb8, 0x0d, 0x4b, 0x96, 0x0e, 0xc6, 0x4d, 0x22,
	0x6e, 0xa1, 0xd0, 0x44, 0xd8, 0x0f, 0x60, 0x4d, 0x06, 0x41, 0x74, 0xc2, 0x65, 0x72, 0x3d, 0x3f,
	0xed, 0xfb, 0x69, 0x2a, 0x83, 0xe6, 0x14, 0x96, 0x6e, 0x05, 0xb9, 0x54, 0xb8, 0x5d, 0xc3, 0xe3,
	0x2f, 0xfd, 0x93, 0x31, 0xa8, 0x6d, 0xc5, 0xf1, 0xfd, 0x24, 0x89, 0x12, 0x31, 0x0f, 0xe3, 0xbe,
	0x87, 0x9f, 0x54, 0x77, 0xc6, 0x7d, 0x4f, 0x34, 0x61, 0xa6, 0xaf, 0xd2, 0x54, 0x76, 0x15, 0x7f,
	0x84, 0x79, 0x14, 0xaf, 0xc1, 0xbc, 0xa7, 0x32, 0xe9, 0x07, 0xca, 0x73, 0x95, 0x96, 0xe5, 0x6f,
	0x98, 0x33, 0x54, 0x52, 0x78, 0x05, 0x20, 0x51, 0xdf, 0x0c, 0x54, 0x9a, 0xb9, 0xbe, 0xc7, 0xc5,
	0xaf, 0x33, 0x65, 0xcf, 0x13, 0xb7, 0xa0, 0xa1, 0x1b, 0x68, 0x90, 0xba, 0xed, 0xc8, 0x53, 0x58,
	0x5a, 0xab, 0x85, 0x80, 0x78, 0x3b, 0x91, 0xa7, 0xc4, 0x0a, 0x4c, 0x9d, 0xf4, 0x54, 0xa2, 0x9a,
	0xd3, 0xa8, 0x83, 0x1e, 0xc4, 0xeb, 0x50, 0xf3, 0x53, 0x37, 0x92, 0x83, 0xac, 0xd7, 0x9c, 0xd1,
	0x9f, 0xba, 0xdd, 0x78, 0xf1, 0x7c, 0x73, 0x66, 0x2f, 0x7d, 0xb2, 0x35, 0xc8, 0x7a, 0xce, 0x8c,
	0x9f, 0x3e, 0xd1, 0x3c, 0xfe, 0xd4, 0x7f, 0x36, 0x01, 0x33, 0x3b, 0x3d, 0x5d, 0x0b, 0xc1, 0xd0,
	0x97, 0x5e, 0x86, 0x7a, 0x3b, 0x51, 0x32, 0x53, 0xae, 0xa4, 0x06, 0x9b, 0x70, 0x6a, 0x44, 0xd8,
	0xca, 0x34, 0x73, 0x10, 0x7b, 0xcc, 0x9c, 0x20, 0x26, 0x11, 0x88, 0xe9, 0xa9, 0x40, 0x11, 0x73,
	0x92, 0x98, 0x44, 0xd8, 0xca, 0xc4, 0x3a, 0xcc, 0x64, 0x4a, 0xf6, 0xf5, 0xc7, 0x4f, 0xe1, 0xbb,
	0xa6, 0xf5, 0xe3, 0x9e, 0x27, 0x04, 0x4c, 0x66, 0x67, 0xb1, 0xf9, 0x1c, 0xfc, 0x5f, 0xf7, 0x0a,
	0xcf, 0x4f, 0xe3, 0x40, 0x9e, 0xb9, 0xa1, 0xec, 0x2b, 0xfc, 0xa2, 0xba, 0xd3, 0x60, 0xda, 0x63,
	0xd9, 0x57, 0x5a, 0x0c, 0x59, 0x35, 0x12, 0xd3, 0xff, 0x8b, 0x35, 0x98, 0xee, 0x29, 0xe9, 0xa9,
	0xa4, 0x59, 0xa7, 0x57, 0xd0, 0x93, 0x6e, 0xbc, 0x78, 0x90, 0xc4, 0x51, 0xaa, 0x9a, 0x40, 0x8d,
	0xc7, 0x8f, 0xe2, 0x1a, 0xcc, 0x06, 0x32, 0xcd, 0xdc, 0x38, 0x4a, 0x33, 0x5d, 0xea, 0x06, 0x96,
	0x1a, 0x34, 0xed, 0x20, 0x4a, 0xb3, 0xad, 0x4c, 0xbc, 0x0e, 0x0b, 0x59, 0x94, 0xc9, 0xc0, 0xed,
	0xa7, 0x5d, 0xb7, 0x1d, 0x0d, 0xc2, 0xac, 0x39, 0x8b, 0xa0, 0x39, 0x24, 0x3f, 0x4a, 0xbb, 0x3b,
	0x9a, 0xa8, 0x71, 0xea, 0x34, 0x4b, 0xa4, 0x5b, 0xd4, 0xcf, 0x1c, 0xe1, 0x90, 0xfc, 0xd4, 0x54,
	0xd2, 0x15, 0x00, 0xac, 0xcd, 0x28, 0xd1, 0x55, 0x31, 0x4f, 0xfd, 0x80, 0x29, 0x7b, 0x58, 0xfb,
	0x69, 0xbb, 0xa7, 0xfa, 0x4a, 0x73, 0x17, 0x90, 0x5b, 0x23, 0xc2, 0x9e, 0xc7, 0x8d, 0xf7, 0xbf,
	0x27, 0x60, 0x8e, 0x1b, 0xef, 0x91, 0xea, 0x1f, 0x29, 0xec, 0x5b, 0x6d, 0x22, 0xb8, 0x79, 0x53,
	0xd6, 0x99, 0xb2, 0xe7, 0xe9, 0xaa, 0xd7, 0x66, 0x40, 0xf3, 0xa8, 0xef, 0x4e, 0xeb, 0xc7, 0x3d,
	0x4f, 0x77, 0xa5, 0x24, 0x0a, 0x54, 0xca, 0x3d, 0x96, 0x1e, 0xc4, 0xab, 0x30, 0x8f, 0x75, 0x72,
	0xec, 0xab, 0x13, 0xe5, 0x15, 0x6d, 0x89, 0x35, 0xf5, 0x15, 0x12, 0xa9, 0xb1, 0x8b, 0x1a, 0x99,
	0xa2, 0xc6, 0xee, 0x9b, 0xca, 0xb8, 0x09, 0x73, 0xda, 0x56, 0xf8, 0x51, 0xc8, 0x80, 0x69, 0xd2,
	0xc0, 0x44, 0x02, 0xfd, 0x05, 0x98, 0x0d, 0xa3, 0xcc, 0xef, 0x9c, 0xb9, 0x71, 0x12, 0xc5, 0x69,
	0x73, 0xe6, 0xda, 0xc4, 0xad, 0xc6, 0xdd, 0x37, 0xee, 0xb0, 0x99, 0xbc, 0x53, 0xfa, 0xc6, 0x3b,
	0x8f, 0x11, 0x7a, 0xa0, 0x91, 0xf7, 0xc3, 0x2c, 0x39, 0xdb, 0x9e, 0xfb, 0xd3, 0xe7, 0x9b, 0xf5,
	0x56, 0x96, 0xf8, 0x61, 0xf7, 0x91, 0x8c, 0x9d, 0x46, 0x58, 0x00, 0xf2, 0x4f, 0x28, 0xda, 0xa2,
	0x56, 0x7c, 0x42, 0xde, 0x14, 0x9b, 0xd0, 0xe0, 0xba, 0xd6, 0xf5, 0x81, 0x7d, 0xa6, 0xe6, 0x00,
	0x91, 0xb4, 0x3d, 0xd4, 0xdd, 0x90, 0x01, 0xd2, 0xeb, 0xfb, 0x21, 0x76, 0x9e, 0x9a, 0xc3, 0x42,
	0x5b, 0x9a, 0xa4, 0x47, 0xbf, 0x3a, 0x8d, 0x03, 0xbf, 0xed, 0x67, 0x2e, 0xd5, 0x65, 0x83, 0x46,
	0xbf, 0xa1, 0x3a, 0x9a, 0xb8, 0xf1, 0x73, 0x58, 0xac, 0x7e, 0x80, 0x58, 0x84, 0x89, 0x67, 0xea,
	0x8c, 0x9b, 0x4b, 0xff, 0xab, 0xdb, 0xe3, 0x58, 0x06, 0x03, 0x63, 0x62, 0xe8, 0xe1, 0xa7, 0xe3,
	0x1f, 0x8f, 0x71, 0xcb, 0xff, 0xf3, 0x71, 0x10, 0x3b, 0x81, 0xaf, 0xc2, 0xcc, 0x51, 0xdf, 0x0c,
	0xfc, 0x04, 0x0d, 0x72, 0x8a, 0x46, 0x2f, 0xf4, 0x92, 0xc8, 0xf7, 0xdc, 0x40, 0x66, 0xda, 0xc2,
	0x1c, 0xab, 0x24, 0xf5, 0xa3, 0x90, 0x75, 0xaf, 0x30, 0x77, 0x1f, 0x99, 0x5f, 0x11, 0x4f, 0xdc,
	0x81, 0x65, 0x23, 0xd5, 0xf7, 0xc3, 0x5c, 0x84, 0x5e, 0xbd, 0xc4, 0xac, 0x47, 0x7e, 0x68, 0xf0,
	0x1f, 0xc0, 0x9a, 0xa7, 0xd2, 0x67, 0x59, 0x14, 0x57, 0xdf, 0x42, 0xbd, 0x67, 0x85, 0xb9, 0x43,
	0x6f, 0x31, 0x52, 0xf6, 0x5b, 0xc8, 0xfe, 0x2d, 0x31, 0xcb, 0x7a, 0xcb, 0xdb, 0x20, 0xfc, 0x28,
	0xad, 0xbe, 0x81, 0x2c, 0xc6, 0xa2, 0x1f, 0xa5, 0x65, 0xed, 0xaf, 0xc3, 0x82, 0x46, 0xdb, 0x9a,
	0xc9, 0x8c, 0xcc, 0xf9, 0x51, 0x5a, 0x68, 0xe5, 0xea, 0xfb, 0x3b, 0x93, 0xb0, 0xb0, 0x13, 0x0c,
	0xd2, 0x4c, 0x25, 0xf9, 0x2c, 0xb6, 0x06, 0xd3, 0x34, 0x61, 0xf1, 0xf4, 0xc5, 0x4f, 0xba, 0xe9,
	0xdb, 0x04, 0x25, 0x0b, 0x44, 0xd5, 0xd2, 0x60, 0x1a, 0x5a, 0xa0, 0xb7, 0x60, 0x29, 0x3a, 0x56,
	0x49, 0xe2, 0x7b, 0xca, 0xed, 0x45, 0x69, 0x86, 0x38, 0xaa, 0x8b, 0x45, 0xc3, 0x78, 0xc8, 0x74,
	0xdd, 0x23, 0x07, 0xa9, 0x72, 0xfd, 0xd8, 0x95, 0x9e, 0x97, 0xa8, 0x34, 0xc5, 0x2a, 0xa8, 0x39,
	0xb3, 0x83, 0x54, 0xed, 0xc5, 0x5b, 0x44, 0x13, 0x1f, 0xc1, 0xba, 0x46, 0xa9, 0xd3, 0x58, 0x25,
	0xbe, 0x6e, 0x5c, 0x19, 0xb8, 0xdd, 0x28, 0x4d, 0xfd, 0x98, 0xe7, 0xaf, 0xd5, 0x41, 0xaa, 0xee,
	0x5b, 0xdc, 0xcf, 0x91, 0x29, 0x6e, 0xc1, 0x62, 0xa2, 0xa4, 0xe7, 0x46, 0x61, 0x70, 0xe6, 0xb6,
	0xa3, 0xb0, 0xe3, 0x77, 0xb1, 0x22, 0x6a, 0xce, 0xbc, 0xa6, 0x3f, 0x09, 0x83, 0xb3, 0x1d, 0xa4,
	0xea, 0x79, 0x86, 0x14, 0xba, 0x71, 0x94, 0x64, 0x68, 0x58, 0xed, 0x79, 0x86, 0x78, 0x07, 0x51,
	0x92, 0x89, 0x3b, 0x30, 0x9f, 0x66, 0x89, 0x92, 0x7d, 0x3f, 0xec, 0x12, 0xb8, 0x56, 0x06, 0xcf,
	0xe5, 0x6c, 0xc4, 0xbf, 0x03, 0xf3, 0x7a, 0xc1, 0xe1, 0x7b, 0x81, 0xd2, 0x45, 0x08, 0x53, 0x1c,
	0x50, 0x16, 0x7e, 0xb6, 0x2f, 0x4f, 0xf7, 0xbc, 0x40, 0xed, 0x68, 0xa6, 0xf8, 0x14, 0xd6, 0xcb,
	0x70, 0x37, 0x56, 0x09, 0xd6, 0x23, 0x0e, 0x33, 0x4b, 0x6e, 0xd9, 0x96, 0x3b, 0x50, 0x89, 0xae,
	0x53, 0xb1, 0x0f, 0x57, 0x73, 0x51, 0x57, 0x2f, 0x88, 0xa2, 0x41, 0xe6, 0xf6, 0xfd, 0x20, 0xf0,
	0x53, 0xd5, 0x8e, 0x42, 0x8f, 0xc6, 0xa1, 0xa5, 0xe5, 0xb2, 0xcf, 0x2a, 0x0e, 0x09, 0xfc, 0xc8,
	0xc2, 0x72, 0xff, 0xf8, 0xdb, 0x93, 0x30, 0xb3, 0x13, 0xf5, 0xfb, 0x32, 0xf4, 0x86, 0x66, 0xc5,
	0x15, 0x98, 0xca, 0xa2, 0x67, 0xca, 0x8c, 0x0f, 0x7a, 0x28, 0xcf, 0x95, 0x13, 0x17, 0xcd, 0x95,
	0x93, 0x17, 0xcd, 0x95, 0x53, 0x95, 0xb9, 0xb2, 0x3c, 0x47, 0x4c, 0x57, 0xe7, 0x08, 0x6b, 0x2a,
	0x9d, 0x29, 0x4d, 0xa5, 0x4d, 0x98, 0xc9, 0x12, 0xbf, 0xdb, 0x55, 0x09, 0x4f, 0x8b, 0xe6, 0x51,
	0x77, 0xf3, 0xbe, 0xca, 0x7a, 0x91, 0x67, 0x66, 0x46, 0x7a, 0x12, 0x1b, 0x50, 0xd3, 0xb6, 0x0f,
	0xbb, 0x2e, 0x4d, 0x8d, 0xf9, 0x33, 0x2e, 0x29, 0xda, 0x51, 0xe8, 0x0e, 0x92, 0x80, 0x8c, 0x1a,
	0x2f, 0x29, 0xda, 0x51, 0xf8, 0xd4, 0xd9, 0x77, 0x66, 0x34, 0xf3, 0x69, 0x12, 0x68, 0x63, 0x2f,
	0x07, 0x59, 0xe4, 0xb6, 0xa3, 0x7e, 0xac, 0x3f, 0x00, 0xe7, 0xc7, 0x9a, 0x33, 0xab, 0x89, 0x3b,
	0x4c, 0xd3, 0xe3, 0xba, 0x04, 0x72, 0x3d, 0x95, 0xb6, 0x71, 0x86, 0xac, 0x3b, 0x8b, 0x36, 0x72,
	0x57, 0xa5, 0xed, 0x61, 0x74, 0xcf, 0x0f, 0x33, 0x9e, 0x2c, 0x4b, 0xe8, 0x87, 0x7e, 0x98, 0x0d,
	0xad, 0x16, 0x16, 0x86, 0x57, 0x0b, 0xd7, 0xa0, 0xa1, 0x5f, 0x98, 0xf8, 0xb1, 0x9e, 0x7f, 0x9a,
	0x8b, 0x8c, 0x28, 0x48, 0xe2, 0x12, 0x4c, 0xe8, 0x0f, 0x5d, 0xc2, 0x0f, 0x9d, 0x79, 0xf1, 0x7c,
	0x73, 0x42, 0x7f, 0xa4, 0xa6, 0x71, 0xef, 0xf8, 0x6b, 0xe3, 0xd0, 0xe0, 0xde, 0xb1, 0x95, 0x74,
	0x53, 0x7b, 0x56, 0x1d, 0x2b, 0xcd, 0xaa, 0xe5, 0xd9, 0x78, 0x7c, 0xc4, 0x6c, 0x6c, 0x5a, 0x6f,
	0xa2, 0xd4, 0x7a, 0xeb, 0x30, 0x93, 0x44, 0x91, 0xb5, 0x3c, 0x9c, 0xd6, 0x8f, 0xb4, 0x26, 0x88,
	0x65, 0xa2, 0xc2, 0xac, 0x58, 0x3c, 0xd5, 0x88, 0x40, 0x6d, 0xde, 0xa6, 0x52, 0x71, 0x47, 0x31,
	0x8f, 0xba, 0xfd, 0x52, 0x3f, 0x53, 0xd8, 0x7e, 0x33, 0x45, 0xfb, 0xb5, 0xfc, 0x4c, 0x61, 0xfb,
	0x69, 0xa6, 0x6e, 0xbf, 0xf7, 0x60, 0x26, 0x55, 0x29, 0x1a, 0x4f, 0xdd, 0x6b, 0x1a, 0x77, 0x17,
	0xf3, 0x29, 0xb8, 0x45, 0xf4, 0xed, 0xc9, 0xdf, 0x3c, 0xdf, 0xfc, 0x91, 0x63, 0x60, 0x5c, 0x21,
	0x7f, 0x65, 0x1c, 0x16, 0xb8, 0x42, 0x1c, 0x95, 0xc6, 0x51, 0x98, 0x2a, 0xdd, 0x17, 0x12, 0xfe,
	0xdf, 0xc5, 0x55, 0x1d, 0x55, 0xcd, 0xac, 0x21, 0x1e, 0xea, 0xd5, 0x9d, 0x5e, 0xf1, 0x15, 0xde,
	0x00, 0xfe, 0x5f, 0xea, 0x88, 0x13, 0x17, 0x74, 0xc4, 0xc9, 0x0b, 0x3a, 0xa2, 0x59, 0x49, 0x4e,
	0x59, 0x2b, 0xc9, 0x9b, 0x30, 0xd7, 0x8d, 0xb2, 0xc8, 0x0d, 0xa2, 0xb6, 0xcc, 0x8a, 0xf9, 0x61,
	0x56, 0x13, 0xf7, 0x99, 0x26, 0x7e, 0x0a, 0x0d, 0x99, 0x65, 0xb2, 0xdd, 0xc3, 0xf9, 0x94, 0x17,
	0x22, 0xcd, 0xa2, 0x16, 0x02, 0xd9, 0x7e, 0xb6, 0x95, 0x03, 0x1c, 0x1b, 0xcc, 0x75, 0x91, 0x82,
	0xc0, 0x2e, 0xe9, 0xcb, 0xb0, 0xad, 0x5e, 0x3a, 0xb9, 0xbc, 0x02, 0x75, 0xcf, 0x4f, 0x54, 0x3b,
	0x8b, 0x92, 0x33, 0xd3, 0x41, 0x72, 0x82, 0xee, 0xce, 0xec, 0x58, 0x79, 0xd2, 0x0f, 0xce, 0xb0,
	0x3a, 0x6a, 0x4e, 0x83, 0x68, 0xbb, 0x9a, 0xc4, 0x2f, 0xfd, 0x27, 0x2b, 0x30, 0xcd, 0x66, 0x7d,
	0x0f, 0x16, 0xb5, 0xe7, 0xe9, 0xb7, 0x95, 0x9b, 0xf2, 0xdb, 0xf1, 0x9d, 0xa5, 0xcf, 0x20, 0x80,
	0x29, 0x1d, 0x37, 0xea, 0x42, 0x5a, 0x26, 0x8b, 0xcf, 0x60, 0x0e, 0xfb, 0x67, 0xae, 0x67, 0x1c,
	0xf5, 0xac, 0xe6, 0x7a, 0x0e, 0x95, 0xec, 0x57, 0x94, 0xcc, 0x66, 0x16, 0x4d, 0x38, 0xb0, 0xdc,
	0xc6, 0x55, 0x8a, 0x9b, 0x58, 0xcb, 0x14, 0xfc, 0x8e, 0xc6, 0xdd, 0xcb, 0xc5, 0xfa, 0x6e, 0x68,
	0x25, 0xc3, 0xda, 0x44, 0x7b, 0x78, 0x8d, 0xf3, 0x29, 0xcc, 0xa6, 0xdf, 0x04, 0x45, 0xa1, 0x26,
	0x51, 0xd9, 0x4a, 0xf1, 0x71, 0xdf, 0x04, 0x95, 0x32, 0x35, 0xd2, 0x82, 0xa4, 0xc5, 0x83, 0xa8,
	0x5b, 0x88, 0x4f, 0x55, 0xc4, 0xf7, 0xa3, 0x6e, 0x55, 0x3c, 0x28, 0x48, 0x62, 0x1f, 0x96, 0x62,
	0x99, 0xa6, 0x27, 0x51, 0xe2, 0x15, 0x3a, 0xa6, 0x51, 0xc7, 0xa5, 0x5c, 0xc7, 0x01, 0x23, 0x2a,
	0x8a, 0x16, 0xe3, 0x0a, 0x5d, 0xd7, 0x70, 0xc7, 0x0f, 0xac, 0x96, 0x9a, 0xa9, 0xd4, 0xf0, 0x03,
	0x3f, 0xa8, 0x36, 0xd3, 0x6c, 0xc7, 0xa2, 0x89, 0x1d, 0x98, 0x57, 0x7d, 0xe9, 0x5b, 0xf5, 0x41,
	0x23, 0x77, 0x2d, 0x57, 0x71, 0x5f, 0xb3, 0x2b, 0x3a, 0xe6, 0x94, 0x4d, 0x14, 0x4f, 0x40, 0xa8,
	0xd3, 0x4c, 0x85, 0x7a, 0x48, 0x17, 0x8a, 0xea, 0xa8, 0x68, 0xa3, 0x50, 0x64, 0x20, 0x15, 0x65,
	0x4b, 0xaa, 0xca, 0x10, 0x07, 0xb0, 0x9c, 0xe8, 0xe9, 0x2e, 0xf0, 0xfb, 0x7e, 0x56, 0x68, 0x84,
	0x8a, 0x46, 0x47, 0x66, 0x6a, 0x5f, 0x43, 0xaa, 0x1a, 0x93, 0x2a, 0x43, 0x77, 0xeb, 0x38, 0xf1,
	0x8f, 0x65, 0xfb, 0xac, 0x50, 0xd7, 0xa8, 0x74, 0xeb, 0x03, 0x02, 0x54, 0xbb, 0x75, 0x5c, 0x26,
	0xe3, 0x08, 0x19, 0xc4, 0x7a, 0x1d, 0x53, 0xa8, 0x9a, 0xad, 0x8e, 0x10, 0x02, 0x0c, 0x8d, 0x90,
	0x32, 0x59, 0xfc, 0x0a, 0x56, 0xa5, 0x15, 0x11, 0x29, 0xf4, 0xcd, 0xa1, 0xbe, 0x2b, 0xb9, 0xbe,
	0x51, 0x71, 0x13, 0x56, 0xba, 0x22, 0x47, 0xc5, 0x54, 0x76, 0x60, 0x3e, 0x43, 0x7f, 0x23, 0x57,
	0x39, 0x5f, 0x69, 0xd7, 0x43, 0xcd, 0xae, 0xb6, 0x6b, 0x66, 0x13, 0xc5, 0x2e, 0x2c, 0x76, 0xfd,
	0xcc, 0x0d, 0xe4, 0x51, 0xa1, 0x66, 0xa1, 0x3a, 0x5c, 0x5a, 0x4f, 0x2a, 0x4a, 0xe6, 0xbb, 0x7e,
	0xb6, 0x2f, 0x8f, 0xac, 0xa2, 0x2c, 0x50, 0xdc, 0xa9, 0x50, 0xb2, 0xf8, 0x1d, 0x94, 0xa0, 0x88,
	0x55, 0xe9, 0x22, 0xea, 0x74, 0xfc, 0xb6, 0xba, 0xf7, 0xd1, 0x87, 0x85, 0x9e, 0xa5, 0x97, 0xea,
	0x59, 0xca, 0xa5, 0xec, 0x41, 0x13, 0x78, 0x32, 0x2e, 0xb4, 0x88, 0xca, 0xa0, 0xd9, 0xf7, 0x64,
	0x5c, 0x1d, 0x34, 0x81, 0x45, 0x43, 0xb3, 0x94, 0xdb, 0xe8, 0x42, 0xcf, 0x72, 0xd5, 0x2c, 0x0d,
	0xd9, 0xf1, 0xdc, 0x2c, 0x0d, 0x5b, 0xf8, 0x5f, 0xc1, 0xaa, 0x9e, 0x59, 0x02, 0xff, 0x5b, 0x9c,
	0x49, 0x0a, 0xad, 0x2b, 0x95, 0xae, 0xb0, 0x6f, 0xa1, 0xaa, 0x5d, 0x21, 0x18, 0xc1, 0xd3, 0xdf,
	0x9b, 0xca, 0xbe, 0x35, 0xc2, 0x57, 0x2b, 0xdf, 0xdb, 0x92, 0xfd, 0xea, 0x00, 0x9f, 0x4d, 0x2d,
	0x9a, 0x1e, 0x8e, 0xa1, 0xcc, 0xfc, 0x63, 0xe5, 0xca, 0xd8, 0xaa, 0xb7, 0xb5, 0xca, 0x70, 0x7c,
	0x8c, 0x98, 0xad, 0xb8, 0x5a, 0x79, 0x4b, 0x61, 0x95, 0xa1, 0xc7, 0x90, 0x71, 0x8a, 0x72, 0x75,
	0xeb, 0x95, 0x31, 0x54, 0x71, 0xb0, 0xcc, 0x18, 0x6a, 0x57, 0xfc, 0xae, 0x3d, 0x58, 0xec, 0xab,
	0x2c, 0xf1, 0xdb, 0x69, 0xa1, 0xaa, 0x59, 0x51, 0xf5, 0x88, 0x00, 0x55, 0x55, 0xfd, 0x32, 0x59,
	0xb7, 0x41, 0xc9, 0x61, 0xca, 0xf5, 0x5d, 0xaa, 0xb4, 0x81, 0xed, 0x38, 0x55, 0xdb, 0x40, 0x8d,
	0xe0, 0x69, 0x0b, 0x29, 0x4d, 0x60, 0xb5, 0x50, 0xbb, 0x51, 0xa9, 0xc0, 0xa1, 0xd8, 0xab, 0xa9,
	0x40, 0x39, 0x14, 0x94, 0x7d, 0x00, 0x0b, 0x27, 0xea, 0x28, 0xc9, 0xda, 0x85, 0xb6, 0xcb, 0xa8,
	0x6d, 0x3d, 0xd7, 0xf6, 0x35, 0xf2, 0xab, 0xe3, 0xea, 0xa4, 0x44, 0x15, 0xbf, 0x0d, 0x6b, 0x2a,
	0x90, 0x18, 0xa6, 0x55, 0x32, 0x69, 0xf7, 0x0a, 0x75, 0xaf, 0xa0, 0xba, 0xab, 0xc5, 0x37, 0xdb,
	0xb0, 0x8a, 0xd6, 0x55, 0x35, 0x8a, 0x29, 0x7e, 0x07, 0xd6, 0x3d, 0x99, 0x49, 0x37, 0x51, 0x19,
	0xc7, 0x70, 0x72, 0xed, 0x57, 0x2a, 0xda, 0x77, 0x65, 0x26, 0x1d, 0x03, 0xab, 0x6a, 0xf7, 0x46,
	0x31, 0xb5, 0x76, 0x8e, 0x9c, 0x6a, 0x37, 0xb7, 0x64, 0x8e, 0xaf, 0x56, 0xb4, 0x3f, 0x22, 0xdc,
	0xfd, 0xd3, 0x11, 0x46, 0x79, 0xb5, 0x3f, 0x8a, 0xa9, 0xe7, 0xf9, 0x5f, 0x47, 0x96, 0xdd, 0xdb,
	0xac, 0x98, 0x9a, 0x2f, 0xa2, 0xa3, 0xea, 0x3c, 0xff, 0xeb, 0x82, 0xa4, 0xdb, 0x27, 0x0e, 0x06,
	0x5d, 0xdf, 0xfa, 0xe4, 0x6b, 0x95, 0xf6, 0x39, 0x40, 0x7e, 0xb5, 0x7d, 0xe2, 0x12, 0x55, 0xf7,
	0x6e, 0xe3, 0x91, 0xe4, 0x8a, 0xae, 0x57, 0x7a, 0xf7, 0x2e, 0x01, 0xaa, 0xbd, 0xdb, 0x2b, 0x93,
	0xf5, 0xd2, 0x43, 0xbb, 0xb7, 0xdf, 0x46, 0xa1, 0x65, 0xb3, 0x6e, 0x54, 0x96, 0x1e, 0x87, 0x8c,
	0xa8, 0x2e, 0x3d, 0xb2, 0x0a, 0x9d, 0x17, 0x8e, 0x7f, 0x79, 0x0c, 0x6a, 0x3b, 0x83, 0x34, 0x8b,
	0xfa, 0x6a, 0x38, 0xd2, 0x6d, 0x02, 0xab, 0xe3, 0x56, 0x60, 0x75, 0x05, 0xa6, 0x70, 0xed, 0x60,
	0x02, 0x85, 0xf8, 0xc0, 0xae, 0x47, 0x2c, 0xc3, 0x33, 0x76, 0x58, 0xcc, 0xa3, 0x5e, 0xc2, 0xc6,
	0x3d, 0x5d, 0xe2, 0x70, 0xd0, 0x3f, 0x52, 0x09, 0xaf, 0xc8, 0x1b, 0x48, 0x7b, 0x8c, 0x24, 0xb3,
	0x84, 0x1d, 0x87, 0xd5, 0x91, 0x9d, 0x48, 0x7c, 0x04, 0xeb, 0xbc, 0x0a, 0x36, 0xdd, 0x05, 0xdd,
	0x63, 0x13, 0xd5, 0xaa, 0x39, 0xab, 0xc4, 0xe6, 0x4e, 0xb2, 0xcb, 0x4c, 0xf1, 0x1e, 0xac, 0xb0,
	0x1c, 0xae, 0xb1, 0x72, 0xa1, 0x71, 0x14, 0x12, 0xc4, 0xd3, 0x0b, 0xac, 0x5c, 0xe2, 0x53, 0x58,
	0x33, 0xaf, 0x28, 0xba, 0xbc, 0x27, 0xcf, 0x68, 0xc5, 0x6a, 0x85, 0x10, 0x56, 0x18, 0x96, 0x17,
	0x76, 0x57, 0x9e, 0xa5, 0xe2, 0xc7, 0xb0, 0x8c, 0x6f, 0xaa, 0xc8, 0x4e, 0x96, 0x65, 0x97, 0x34,
	0xa6, 0x2c, 0xf8, 0x21, 0xac, 0x9b, 0xd2, 0xb9, 0xd8, 0x69, 0x33, 0x99, 0x64, 0x18, 0xcb, 0xe0,
	0xfa, 0x5a, 0x31, 0x6c, 0xdd, 0x6b, 0x35, 0x53, 0x37, 0x33, 0x57, 0xdc, 0xb7, 0xb0, 0x50, 0xe9,
	0x40, 0xda, 0x69, 0x6e, 0x63, 0xa3, 0x6a, 0x47, 0xc9, 0xa5, 0x20, 0xa5, 0xf6, 0x02, 0x26, 0xb4,
	0xd3, 0x4c, 0x9c, 0xa7, 0x49, 0xd0, 0x22, 0xba, 0xb8, 0x57, 0xb1, 0x9a, 0xa6, 0xab, 0x70, 0x45,
	0x95, 0x0c, 0xa2, 0xe9, 0x5e, 0xfc, 0xee, 0x3f, 0x9c, 0x82, 0xd5, 0x91, 0x76, 0x45, 0xbc, 0x06,
	0xf3, 0xed, 0x28, 0x0c, 0x55, 0x1b, 0x3f, 0x4a, 0xfb, 0x6b, 0xd4, 0xaf, 0xe6, 0x0a, 0xaa, 0x76,
	0xd4, 0x6c, 0x67, 0x6f, 0xbc, 0xe2, 0xec, 0x6d, 0x40, 0xcd, 0x2c, 0x98, 0x8d, 0x23, 0x68, 0x9e,
	0xc5, 0x1b, 0xb0, 0xc0, 0x6d, 0xeb, 0x87, 0x9e, 0x3a, 0xf5, 0xc3, 0x2e, 0x47, 0xd1, 0xe6, 0x89,
	0xbc, 0xc7, 0x54, 0xf1, 0x26, 0x2c, 0x32, 0x90, 0x0a, 0xa8, 0x91, 0x14, 0x40, 0x63, 0x05, 0x2d,
	0x43, 0xd6, 0x5d, 0x3b, 0x0d, 0xfd, 0x4e, 0x87, 0xe3, 0x65, 0xf4, 0xa0, 0x1b, 0x15, 0xb7, 0x04,
	0xf0, 0x3d, 0x6e, 0xa2, 0xe2, 0xc0, 0x6f, 0xcb, 0xb4, 0x1a, 0x2e, 0x5b, 0xd2, 0x18, 0x7c, 0xa9,
	0xc3, 0x08, 0x71, 0x0f, 0x96, 0x2c, 0xc1, 0xb4, 0x27, 0x13, 0x2f, 0xad, 0x06, 0xce, 0x16, 0x72,
	0xb1, 0x16, 0xf2, 0xc5, 0x2e, 0x6c, 0xc8, 0x6e, 0x37, 0x51, 0x5d, 0xbd, 0x7a, 0xd6, 0xcc, 0xd4,
	0x95, 0x1d, 0x3d, 0xcb, 0x62, 0x4f, 0xaa, 0x84, 0xd1, 0xd6, 0x73, 0xe8, 0x81, 0x46, 0x6e, 0x69,
	0x20, 0xf6, 0xa7, 0x5d, 0xd8, 0x64, 0x59, 0x06, 0x44, 0x49, 0xb5, 0x5f, 0x51, 0x88, 0xe7, 0x32,
	0xc2, 0xb6, 0x72, 0x94, 0xdd, 0xbd, 0xf4, 0xd0, 0xa5, 0xb2, 0xc7, 0x89, 0xea, 0xf8, 0xa7, 0x1c,
	0xce, 0x6e, 0x20, 0xed, 0x00, 0x49, 0xe2, 0x33, 0x68, 0x06, 0x7a, 0x59, 0x61, 0x1a, 0xc1, 0x3d,
	0x92, 0x99, 0x9e, 0x83, 0xfc, 0x6f, 0x29, 0xf6, 0x63, 0x6f, 0x2d, 0x6a, 0xa0, 0x69, 0x96, 0x6d,
	0x0d, 0x6b, 0xf9, 0xdf, 0x2a, 0xf1, 0x4b, 0xb8, 0x7e, 0x34, 0x08, 0x9e, 0x15, 0x1a, 0x74, 0xe9,
	0xdc, 0x13, 0x3f, 0xf4, 0xa2, 0x13, 0xd7, 0x04, 0xf0, 0xe6, 0xca, 0xaa, 0xae, 0x68, 0x09, 0xa3,
	0x4a, 0x17, 0xf5, 0x6b, 0x84, 0xb7, 0x08, 0x2d, 0x7e, 0x01, 0xeb, 0x66, 0x7f, 0xcd, 0x84, 0x03,
	0x8d, 0xa2, 0xf9, 0x4a, 0x99, 0x18, 0xc7, 0x81, 0xc0, 0x56, 0x29, 0x06, 0xf8, 0x2f, 0x67, 0x61,
	0xae, 0xe4, 0x3b, 0x89, 0x8f, 0xe1, 0x92, 0xe9, 0x4b, 0x7e, 0x37, 0x74, 0x07, 0xb1, 0x7b, 0xe2,
	0x67, 0x3d, 0x97, 0xec, 0x61, 0xc9, 0x14, 0xb5, 0xfc, 0x6e, 0xf8, 0x34, 0xfe, 0xda, 0xcf, 0x7a,
	0xa8, 0xa1, 0x2a, 0xe9, 0x87, 0xb6, 0xe4, 0x78, 0x55, 0x72, 0x2f, 0x2c, 0x24, 0x7f, 0x0e, 0xaf,
	0x8c, 0x92, 0x2c, 0x45, 0x48, 0x6a, 0x4e, 0xb3, 0x2a, 0xfc, 0xd4, 0x0c, 0xa2, 0x8f, 0xa1, 0x99,
	0xaa, 0xd0, 0xa3, 0x57, 0xb9, 0xb8, 0x33, 0xe2, 0x53, 0xac, 0xc3, 0xc4, 0x9d, 0xd7, 0x34, 0x1f,
	0x5f, 0xf6, 0xd8, 0xe6, 0x8a, 0x2f, 0xe0, 0xc6, 0x20, 0x55, 0x6e, 0x1e, 0xc0, 0x0a, 0x47, 0xea,
	0xa0, 0xb1, 0x74, 0x75, 0x90, 0x2a, 0xde, 0xa4, 0xd9, 0x0b, 0x47, 0xe8, 0xfa, 0x19, 0x6c, 0x70,
	0x00, 0x80, 0x95, 0x1c, 0xab, 0x24, 0x67, 0xf3, 0x78, 0x6b, 0x32, 0x02, 0xc5, 0xbf, 0xb2, 0xf8,
	0xe2, 0x26, 0xcc, 0x75, 0x94, 0xf2, 0x8e, 0x64, 0xfb, 0x99, 0xbd, 0x09, 0x38, 0x6b, 0x88, 0x18,
	0xd7, 0x7b, 0x0d, 0xe6, 0x73, 0x10, 0xd5, 0x2b, 0x05, 0x3e, 0x73, 0x51, 0xaa, 0xcf, 0x7b, 0xb0,
	0x9a, 0xc3, 0xa2, 0xa4, 0x2b, 0x43, 0x5e, 0x6d, 0x73, 0x34, 0x74, 0xc5, 0x30, 0x9f, 0x58, 0x3c,
	0xf1, 0x49, 0x6e, 0x6d, 0xd2, 0x7e, 0x16, 0xe3, 0xce, 0x2a, 0x6e, 0x00, 0x6d, 0x8b, 0x17, 0xcf,
	0x37, 0xe7, 0xef, 0x53, 0xdd, 0x3f, 0x3a, 0x3c, 0xc0, 0x0d, 0x56, 0xb6, 0x40, 0x2d, 0x46, 0x8a,
	0x0f, 0x60, 0x56, 0x4b, 0xe5, 0x2d, 0x46, 0x01, 0xd4, 0xc5, 0x17, 0xcf, 0x37, 0x67, 0xb5, 0x8c,
	0x69, 0x29, 0xa7, 0x84, 0x32, 0x52, 0xb9, 0x01, 0x9c, 0x2d, 0x4b, 0x99, 0x08, 0x83, 0x53, 0x42,
	0x89, 0x3b, 0x00, 0xfa, 0x99, 0x52, 0x0f, 0x28, 0xa6, 0xba, 0x3d, 0xff, 0xe2, 0xf9, 0x26, 0x68,
	0x99, 0x16, 0x52, 0x1d, 0x0b, 0x21, 0x6e, 0x41, 0x0d, 0xe5, 0xa3, 0x84, 0x63, 0xaa, 0xdb, 0xb3,
	0x2f, 0x9e, 0x6f, 0xd6, 0xf0, 0x0d, 0x51, 0x92, 0x39, 0x39, 0x57, 0xbc, 0xab, 0x5d, 0xa6, 0xdc,
	0x9e, 0xa7, 0xaa, 0x3d, 0x48, 0xfc, 0xec, 0x8c, 0x03, 0xac, 0xa2, 0x60, 0xb5, 0x98, 0x23, 0x36,
	0xa1, 0xe1, 0x87, 0xc7, 0x7e, 0xa6, 0xdc, 0x54, 0x06, 0x19, 0xc7, 0x59, 0x81, 0x48, 0x2d, 0x19,
	0x64, 0x7a, 0x5a, 0xc7, 0x9e, 0x19, 0x0f, 0xd2, 0x5e, 0xa5, 0x53, 0x2d, 0xd1, 0x88, 0xd0, 0xec,
	0x83, 0x41, 0xda, 0x2b, 0xf7, 0xa5, 0x8f, 0xa1, 0x39, 0x24, 0xe2, 0xf2, 0x17, 0x0b, 0x7c, 0xcb,
	0x5a, 0x5c, 0x11, 0xa2, 0x2f, 0xd7, 0xbd, 0x70, 0x58, 0xb2, 0x1d, 0x85, 0x19, 0x06, 0xa5, 0x96,
	0x51, 0xb6, 0x59, 0x95, 0xdd, 0x61, 0xbe, 0xb8, 0x0b, 0x3c, 0x44, 0xb9, 0x0b, 0xa3, 0xa9, 0xd3,
	0xd3, 0xc9, 0x0a, 0x96, 0x76, 0x99, 0x98, 0xd8, 0xcb, 0xb6, 0x99, 0xa5, 0xcd, 0x79, 0x19, 0xec,
	0x1e, 0x0d, 0x3a, 0x1d, 0xed, 0x34, 0x69, 0x0b, 0xb9, 0x5a, 0x31, 0xe7, 0xca, 0x96, 0xdd, 0x46,
	0x20, 0xda, 0xc8, 0x5f, 0xc0, 0x7a, 0x45, 0x8b, 0x1f, 0x66, 0x2a, 0x39, 0x96, 0x01, 0xba, 0x70,
	0xb6, 0x41, 0x2b, 0xa9, 0xd8, 0x63, 0x94, 0xf8, 0x04, 0x36, 0xb8, 0xe8, 0x71, 0xa2, 0x8e, 0x7d,
	0x75, 0xe2, 0xf6, 0x23, 0x2f, 0xcf, 0xd6, 0x58, 0xc7, 0xf2, 0xf3, 0x1a, 0xeb, 0x80, 0x00, 0x8f,
	0x22, 0xcf, 0x24, 0x6e, 0x3c, 0x81, 0x57, 0xd3, 0x67, 0x7e, 0xcc, 0x55, 0xec, 0xb6, 0x55, 0xc2,
	0x95, 0xa3, 0xca, 0xa3, 0xb8, 0x89, 0x6a, 0xae, 0x6b, 0x2c, 0xd5, 0xf7, 0x4e, 0x81, 0x2c, 0x0d,
	0xe7, 0xcf, 0xe1, 0xda, 0xb0, 0x25, 0xc9, 0xdb, 0x81, 0x82, 0xc5, 0x97, 0xb0, 0x31, 0xae, 0xa8,
	0xaa, 0x29, 0x31, 0xad, 0x81, 0xd1, 0xe3, 0xb7, 0x41, 0x04, 0x91, 0x5e, 0xa2, 0x1f, 0x0d, 0xb2,
	0x0c, 0x55, 0x04, 0x51, 0x82, 0x4e, 0x59, 0xdd, 0x59, 0x44, 0xce, 0x36, 0x32, 0x28, 0x21, 0xe4,
	0x27, 0x70, 0xa9, 0x84, 0x3e, 0x8a, 0x12, 0x2f, 0x4f, 0x36, 0xb9, 0x4c, 0x1d, 0xc7, 0x12, 0xda,
	0x46, 0x36, 0x89, 0x7e, 0x08, 0xeb, 0x25, 0x51, 0x2b, 0xfb, 0xe4, 0x15, 0x32, 0x1b, 0x96, 0x60,
	0x9e, 0x82, 0xc2, 0xf3, 0xc8, 0xef, 0x8f, 0xc1, 0xca, 0x28, 0x7f, 0x53, 0x6b, 0xe5, 0xe0, 0x68,
	0xea, 0x7b, 0x0a, 0x2b, 0xd6, 0x2d, 0x05, 0x89, 0x57, 0x88, 0xdd, 0xf2, 0x3d, 0xa5, 0xeb, 0x92,
	0xec, 0x8c, 0xb8, 0x07, 0x6b, 0x43, 0x62, 0xed, 0x9e, 0x6a, 0x3f, 0xe3, 0x05, 0xd4, 0x72, 0x59,
	0x6a, 0x47, 0xb3, 0xb8, 0x28, 0x7f, 0x7f, 0x0c, 0x96, 0x86, 0xa2, 0x78, 0x62, 0x17, 0xae, 0x9a,
	0x8e, 0x6d, 0x2f, 0x03, 0xf3, 0xa8, 0x5e, 0xca, 0xc5, 0xe1, 0x89, 0xc8, 0xfe, 0x96, 0x5c, 0x59,
	0x2a, 0x1e, 0x73, 0xbe, 0x8d, 0xf2, 0x2c, 0x49, 0xd7, 0xf7, 0xd2, 0xe6, 0xb8, 0x5e, 0x77, 0x6e,
	0x37, 0x5f, 0x3c, 0xdf, 0x5c, 0xd9, 0x22, 0x44, 0x21, 0xb6, 0xb7, 0x9b, 0x72, 0x26, 0x4e, 0x89,
	0x9a, 0x4f, 0xc2, 0xff, 0x61, 0x0a, 0x6a, 0x0f, 0x94, 0xcc, 0x06, 0x89, 0x4a, 0xc5, 0x15, 0x98,
	0xc2, 0x24, 0xa6, 0x6a, 0xd6, 0x12, 0x51, 0xc5, 0x2b, 0x30, 0x19, 0x78, 0x32, 0xa6, 0xf9, 0x74,
	0xbb, 0xf6, 0xe2, 0xf9, 0xe6, 0xe4, 0xfe, 0xee, 0xd6, 0x81, 0x83, 0x54, 0x71, 0x09, 0x26, 0xfa,
	0x1d, 0x49, 0xf3, 0x25, 0xed, 0xea, 0x3c, 0x7a, 0xb0, 0xe5, 0x68, 0x9a, 0xb8, 0x0b, 0xb3, 0x1c,
	0xe0, 0xa2, 0xac, 0x19, 0x9c, 0x17, 0xb7, 0x17, 0x5e, 0x3c, 0xdf, 0x6c, 0x7c, 0x8e, 0x74, 0xca,
	0x9c, 0x69, 0x10, 0x08, 0xb3, 0x67, 0xf4, 0x94, 0x50, 0xc4, 0xb3, 0x48, 0x6c, 0xaa, 0x98, 0x12,
	0x9e, 0x18, 0x16, 0x49, 0xce, 0xe7, 0x50, 0x12, 0xbe, 0x0a, 0x50, 0x44, 0x90, 0x78, 0xfa, 0xb3,
	0x28, 0xe8, 0x4e, 0x51, 0x94, 0x84, 0x32, 0x78, 0x1c, 0xf3, 0x48, 0xc9, 0x47, 0x18, 0xf4, 0xc0,
	0xe9, 0xad, 0xe6, 0x98, 0x47, 0xb1, 0x09, 0x53, 0xfd, 0x5e, 0xcc, 0x7b, 0xad, 0xb5, 0xed, 0xfa,
	0x8b, 0xe7, 0x9b, 0x53, 0x8f, 0x1e, 0x1e, 0x3c, 0x6e, 0x39, 0x44, 0xd7, 0xd5, 0x93, 0xca, 0x7e,
	0xc0, 0x33, 0x17, 0x56, 0x4f, 0x6b, 0xeb, 0xd1, 0xbe, 0x83, 0x54, 0xf1, 0x2a, 0xcc, 0x95, 0x62,
	0x00, 0x38, 0x4d, 0xd5, 0x9c, 0x32, 0x51, 0xdc, 0x80, 0x59, 0x3b, 0x5a, 0x99, 0xef, 0xef, 0x59,
	0x34, 0xbd, 0xe2, 0xa6, 0xc8, 0x65, 0x5f, 0x86, 0xb2, 0x4b, 0xb8, 0x39, 0x5a, 0x71, 0x23, 0xfd,
	0x51, 0x4e, 0x16, 0x3f, 0x87, 0xcb, 0x17, 0x58, 0x02, 0x9c, 0x91, 0x6a, 0xce, 0xa5, 0x73, 0x8d,
	0x00, 0x26, 0x5c, 0x95, 0xe2, 0x13, 0x38, 0x1f, 0xd5, 0x9c, 0xb9, 0x52, 0xc0, 0x41, 0xc3, 0xca,
	0x81, 0x06, 0x9c, 0x8d, 0x6a, 0xce, 0x5c, 0x29, 0x72, 0xa0, 0xa7, 0x07, 0xf6, 0x9a, 0x62, 0x95,
	0xf4, 0xfd, 0x94, 0x7a, 0xb0, 0xf1, 0x9e, 0x68, 0x4e, 0x6a, 0x12, 0xe2, 0xa0, 0x00, 0x18, 0x2f,
	0xea, 0x0d, 0x58, 0xe8, 0x0c, 0x74, 0x3f, 0x75, 0x3b, 0xdc, 0x5f, 0x71, 0x36, 0xaa, 0x39, 0xf3,
	0x44, 0x36, 0xbd, 0x98, 0x3b, 0xf6, 0x7f, 0x9a, 0x80, 0x9a, 0xf6, 0x3d, 0xf7, 0xc2, 0x4e, 0x34,
	0xe4, 0x78, 0x97, 0x77, 0x7d, 0xc7, 0x47, 0xec, 0xfa, 0x92, 0x67, 0x91, 0xef, 0x1b, 0xa2, 0x1b,
	0x51, 0x49, 0xd8, 0x9a, 0xbc, 0x68, 0x13, 0x7a, 0xea, 0xa2, 0x4d, 0xe8, 0xe9, 0xca, 0x26, 0xb4,
	0x80, 0xc9, 0x58, 0x72, 0x36, 0x59, 0xdd, 0xc1, 0xff, 0x75, 0x9d, 0x66, 0xbd, 0x41, 0xff, 0x28,
	0xd4, 0xcd, 0x87, 0x5c, 0x5e, 0x6e, 0xe5, 0xd4, 0x03, 0x0d, 0xd3, 0xee, 0x3f, 0x4f, 0x39, 0x08,
	0xaa, 0xb3, 0xfb, 0x4f, 0x34, 0x84, 0x98, 0x28, 0x03, 0x58, 0x51, 0x86, 0x57, 0xa0, 0x9e, 0x1b,
	0x11, 0xf6, 0x3b, 0x0a, 0x82, 0x96, 0x28, 0x3c, 0x0c, 0x07, 0xff, 0xc7, 0x24, 0x24, 0xed, 0x39,
	0xe0, 0xec, 0x41, 0x9b, 0xc9, 0x35, 0x4d, 0xc0, 0x89, 0xe2, 0x0a, 0x4c, 0x9d, 0xf8, 0x5e, 0xd6,
	0xab, 0xae, 0xff, 0x89, 0x2a, 0x36, 0x61, 0xba, 0xa7, 0xfc, 0x6e, 0x2f, 0xc3, 0xee, 0x63, 0xf1,
	0x99, 0x2c, 0x6e, 0xc3, 0x52, 0x4f, 0xa6, 0xf9, 0xe4, 0xe9, 0xf7, 0x65, 0x57, 0x71, 0x1f, 0x5a,
	0xe8, 0xc9, 0x94, 0xe7, 0xcc, 0x3d, 0x4d, 0x36, 0xce, 0xc3, 0x34, 0xcc, 0xda, 0x7b, 0x37, 0x56,
	0x10, 0x03, 0x43, 0x04, 0xf6, 0x26, 0x63, 0xc9, 0x73, 0xd0, 0x42, 0xc5, 0x06, 0x63, 0x6a, 0x05,
	0x31, 0xfa, 0xd1, 0x91, 0x96, 0x1c, 0xc4, 0x41, 0x24, 0xbd, 0x72, 0x10, 0xe3, 0x11, 0xb2, 0x9e,
	0x22, 0x47, 0x7c, 0x00, 0x6b, 0x65, 0x09, 0x2f, 0x3a, 0x09, 0x51, 0x66, 0x82, 0xfd, 0x79, 0x4b,
	0x66, 0x97, 0x79, 0xe2, 0x06, 0xcc, 0xf5, 0xe5, 0x29, 0x15, 0x0e, 0x2b, 0x97, 0xba, 0x4f, 0xa3,
	0x2f, 0x4f, 0xf1, 0x3b, 0x74, 0x1d, 0x6f, 0x42, 0xc3, 0x4b, 0xfc, 0x63, 0x93, 0x08, 0x43, 0xa1,
	0x09, 0x20, 0xd2, 0x63, 0x6e, 0xb6, 0x62, 0x37, 0x73, 0xba, 0xba, 0x9b, 0xf9, 0x36, 0x08, 0xb3,
	0x0a, 0x19, 0x1c, 0x05, 0x7e, 0xdb, 0x0d, 0xfc, 0xf0, 0x19, 0x1b, 0x38, 0x76, 0xd2, 0x0f, 0x90,
	0xb1, 0xef, 0x87, 0xcf, 0xc4, 0x2d, 0x58, 0xb4, 0x60, 0xb4, 0x88, 0xa4, 0x2e, 0x36, 0x1f, 0xe7,
	0x28, 0x5c, 0x48, 0xa2, 0x9f, 0xea, 0x67, 0xbe, 0x0c, 0xdc, 0x4e, 0x14, 0x66, 0xa6, 0x8f, 0x31,
	0xed, 0x41, 0x14, 0x66, 0xe2, 0x03, 0x58, 0x97, 0x7d, 0xf9, 0xad, 0x5e, 0x28, 0xde, 0x73, 0x65,
	0xbb, 0xad, 0xd2, 0xd4, 0x7d, 0xa6, 0xce, 0xf4, 0x08, 0xa2, 0x6e, 0xb7, 0x4c, 0xec, 0xd6, 0xbd,
	0x2d, 0x64, 0x7e, 0xa9, 0xce, 0xf6, 0x3c, 0xf1, 0x33, 0xb8, 0x5c, 0x48, 0xa5, 0xaa, 0x9d, 0xa8,
	0xcc, 0x12, 0xe6, 0x7e, 0xb9, 0x6e, 0x24, 0x5b, 0x08, 0xc8, 0xe5, 0xf5, 0x07, 0x14, 0xd2, 0x47,
	0x83, 0xf6, 0x33, 0x45, 0xf6, 0xb2, 0xee, 0xcc, 0x1b, 0x91, 0x6d, 0xa4, 0x96, 0x91, 0x89, 0xea,
	0xea, 0x4e, 0x3f, 0x57, 0x46, 0x3a, 0x48, 0xc5, 0x6c, 0x88, 0x1c, 0xa9, 0x42, 0x2f, 0x8e, 0xec,
	0x6c, 0x08, 0xc6, 0xde, 0x67, 0xba, 0xb8, 0x07, 0x73, 0x56, 0xf9, 0xd3, 0x80, 0xac, 0x23, 0x4d,
	0x6c, 0x5b, 0xa6, 0xd4, 0xad, 0x7d, 0xa7, 0x91, 0x7f, 0x42, 0x1a, 0x88, 0x37, 0x61, 0xc9, 0x12,
	0xd2, 0x3e, 0xe7, 0xf1, 0x5d, 0xee, 0xeb, 0x79, 0x69, 0xb4, 0x9f, 0xf9, 0xd5, 0xdd, 0xaa, 0x7e,
	0x45, 0x36, 0xb2, 0xaa, 0xff, 0xbe, 0xad, 0x5f, 0x89, 0xd7, 0x61, 0xa1, 0x10, 0xca, 0x12, 0xd9,
	0x56, 0x6c, 0x27, 0xe7, 0x0c, 0xea, 0x50, 0x13, 0x4d, 0x9e, 0xdb, 0x18, 0x5c, 0xfb, 0x3c, 0x88,
	0x8e, 0x64, 0xe0, 0xa8, 0x40, 0x9e, 0x8d, 0x8c, 0x03, 0x6b, 0xff, 0xb0, 0xcd, 0x31, 0xcc, 0x52,
	0xaa, 0x81, 0x21, 0x1e, 0xf2, 0xf6, 0xbf, 0x76, 0x66, 0xdc, 0x4a, 0xb8, 0x09, 0xfd, 0xa7, 0xdc,
	0x5b, 0x36, 0xa0, 0x4a, 0xdc, 0x09, 0x41, 0xc6, 0xe5, 0xc2, 0x74, 0x67, 0x9c, 0xb5, 0xec, 0xfc,
	0xad, 0xba, 0x33, 0x8b, 0x44, 0xce, 0xdf, 0xe2, 0xe2, 0xff, 0xab, 0x71, 0x98, 0xf8, 0x22, 0x3a,
	0x1a, 0x15, 0x59, 0xc5, 0x82, 0x8e, 0x5b, 0xf9, 0x09, 0x1b, 0x50, 0x8b, 0x13, 0x3f, 0x42, 0xb7,
	0x8a, 0x13, 0x88, 0xcc, 0xf3, 0xc5, 0x86, 0xfd, 0x12, 0xd4, 0x28, 0xb0, 0x93, 0xdb, 0xf5, 0x19,
	0x7c, 0xde, 0xc2, 0x9e, 0x85, 0xd9, 0x8f, 0xb2, 0x9d, 0xf9, 0xc7, 0x7e, 0x76, 0x56, 0x58, 0x77,
	0xcc, 0x8a, 0xdc, 0x62, 0xf2, 0x56, 0x26, 0xd6, 0x60, 0x9a, 0x32, 0x8b, 0x4d, 0x22, 0x11, 0x3d,
	0x51, 0xa9, 0xa2, 0x2e, 0x7e, 0x67, 0xcd, 0x94, 0x8a, 0x9e, 0xc5, 0x6d, 0x98, 0xd4, 0x13, 0x6d,
	0xb3, 0x8e, 0x59, 0x12, 0x6b, 0x76, 0x68, 0x1d, 0xf7, 0x03, 0x30, 0xb9, 0xd1, 0x41, 0xcc, 0xc6,
	0x8f, 0xa1, 0x9e, 0x93, 0x7e, 0x40, 0xbe, 0x63, 0x0b, 0x1a, 0x56, 0xc0, 0x5e, 0x7f, 0x72, 0x32,
	0xc0, 0x58, 0xa9, 0x31, 0x9f, 0x33, 0xc9, 0x20, 0xfc, 0x22, 0x3a, 0xc2, 0xce, 0xa0, 0x59, 0x7a,
	0xda, 0xf6, 0x06, 0x81, 0x4a, 0xd8, 0x52, 0xce, 0x26, 0x83, 0xb0, 0x65, 0x68, 0xac, 0xf4, 0x8f,
	0x6b, 0x30, 0x6b, 0xef, 0x15, 0x9e, 0x9b, 0xa5, 0xb1, 0x09, 0x0d, 0xe3, 0xff, 0x9f, 0x85, 0x6d,
	0xd6, 0x08, 0xec, 0xe7, 0x9f, 0x85, 0x6d, 0x0d, 0xe0, 0x2d, 0x49, 0x74, 0x43, 0xa9, 0xd7, 0x00,
	0xed, 0x39, 0xa2, 0xeb, 0xf9, 0x2a, 0xd4, 0x11, 0x80, 0xab, 0x8f, 0x4a, 0x40, 0xb8, 0xa6, 0x39,
	0x07, 0x17, 0x38, 0xd9, 0x53, 0xe7, 0x3a, 0xd9, 0x37, 0x61, 0xe6, 0x48, 0xa6, 0xca, 0xf5, 0x38,
	0x9b, 0x65, 0x1b, 0x5e, 0x3c, 0xdf, 0x9c, 0xde, 0x96, 0xa9, 0xda, 0x7d, 0xec, 0x4c, 0x6b, 0xd6,
	0x2e, 0x86, 0x4f, 0x8e, 0xfc, 0xd0, 0x2b, 0x7a, 0x3e, 0x87, 0x4f, 0x34, 0xd1, 0xee, 0xf9, 0x08,
	0xca, 0x7b, 0x7e, 0xad, 0x00, 0xe5, 0x3d, 0x7f, 0x13, 0x1a, 0x98, 0xe8, 0xd4, 0xf1, 0x83, 0x2c,
	0x4f, 0xad, 0x06, 0x4d, 0x7a, 0x80, 0x14, 0x3d, 0x5b, 0x75, 0xfc, 0x24, 0xcd, 0x70, 0x82, 0xd0,
	0x93, 0x5c, 0xe2, 0x1f, 0x0d, 0x32, 0x33, 0xb7, 0x0b, 0xe4, 0xe9, 0x99, 0x62, 0xcb, 0x70, 0xc4,
	0x1d, 0x58, 0xc6, 0x1e, 0x5a, 0x11, 0x20, 0xdb, 0xba, 0xa4, 0x59, 0x65, 0xfc, 0x1b, 0xb0, 0xc0,
	0x83, 0x2f, 0xc7, 0xb2, 0x51, 0xa5, 0xe1, 0x97, 0x03, 0xdf, 0x01, 0x61, 0x3e, 0xd8, 0xc2, 0x92,
	0x59, 0x5d, 0x32, 0x9c, 0x12, 0x3c, 0xf4, 0xdb, 0xcf, 0x2a, 0x70, 0xb2, 0xac, 0x4b, 0x86, 0x53,
	0xc0, 0xf5, 0x9c, 0xe3, 0x59, 0x40, 0x4e, 0x34, 0xf3, 0xbd, 0x92, 0xc6, 0x38, 0x4a, 0x7d, 0x6c,
	0xca, 0x02, 0x48, 0x71, 0x90, 0x25, 0xc3, 0x29, 0xe0, 0xb9, 0x33, 0x5b, 0xd2, 0xbb, 0x64, 0x39,
	0xb3, 0x7b, 0x96, 0xf2, 0x4f, 0x60, 0x55, 0x77, 0xc5, 0x3c, 0x10, 0xe0, 0xf6, 0xfd, 0x70, 0x90,
	0xf1, 0x9a, 0xd3, 0xce, 0x98, 0xd4, 0x28, 0x13, 0x07, 0x78, 0x44, 0x18, 0xb1, 0x0d, 0x57, 0xd0,
	0xa3, 0x3f, 0xd7, 0x95, 0x5f, 0xc6, 0x0e, 0x7e, 0x59, 0x83, 0xce, 0x73, 0xe2, 0xdf, 0x86, 0xb9,
	0x6f, 0x06, 0x2a, 0x39, 0x33, 0x21, 0x56, 0x8c, 0x82, 0xd8, 0x29, 0x9e, 0xc8, 0xe5, 0xc0, 0xaa,
	0x78, 0x8b, 0x56, 0x17, 0xb1, 0x5e, 0x82, 0x8f, 0x0a, 0x7d, 0xe8, 0x65, 0xc6, 0x81, 0xec, 0xd2,
	0x32, 0x43, 0x1b, 0x2d, 0xac, 0x89, 0x8e, 0xaf, 0x02, 0x8f, 0xd6, 0x1a, 0x6b, 0xd4, 0xc6, 0x48,
	0x7f, 0xa0, 0xc9, 0xb8, 0xde, 0x18, 0x1d, 0x00, 0x58, 0xff, 0x21, 0x01, 0x80, 0xe6, 0x0f, 0x0d,
	0x00, 0x5c, 0x7a, 0x69, 0x00, 0xe0, 0x1f, 0x8e, 0xc1, 0xca, 0xa8, 0x4d, 0x7f, 0x71, 0x17, 0x56,
	0x3d, 0xd5, 0x91, 0x83, 0x20, 0x33, 0xc1, 0x15, 0xdc, 0xff, 0x37, 0xf3, 0xd7, 0x32, 0x33, 0xc9,
	0x84, 0xa0, 0x06, 0x65, 0xcb, 0x70, 0x14, 0x80, 0x65, 0xc6, 0x4b, 0x32, 0x94, 0x51, 0xc5, 0x32,
	0x6f, 0xc1, 0x92, 0x3c, 0x96, 0x7e, 0x80, 0x16, 0x8c, 0xe0, 0x26, 0xd1, 0x7f, 0x31, 0x67, 0x10,
	0xd6, 0x4c, 0x5c, 0xff, 0x73, 0x1c, 0x1a, 0x56, 0x26, 0x14, 0x26, 0xb7, 0x93, 0x05, 0x6c, 0x47,
	0x61, 0x1a, 0xe5, 0x16, 0x92, 0x0f, 0xfe, 0xec, 0x10, 0x11, 0x67, 0x62, 0xfa, 0xd7, 0x0d, 0xd4,
	0xb1, 0x0a, 0xcc, 0x24, 0xcb, 0xc4, 0x7d, 0x4d, 0xc3, 0x84, 0x6a, 0x06, 0xfd, 0x3a, 0xe5, 0xa4,
	0xf1, 0x9a, 0xd3, 0x60, 0xda, 0x17, 0x69, 0x14, 0x5a, 0x06, 0x57, 0x2f, 0x48, 0x39, 0x50, 0x0d,
	0xc5, 0x0a, 0x59, 0x7b, 0x48, 0xb8, 0x54, 0xa5, 0xb7, 0x90, 0x81, 0xac, 0x6b, 0x0a, 0xbd, 0xe2,
	0x32, 0xe0, 0x03, 0xe9, 0x27, 0xff, 0xba, 0xa6, 0x09, 0xa8, 0xfc, 0x26, 0x27, 0x5d, 0xe5, 0x89,
	0x80, 0x26, 0x9c, 0xec, 0x53, 0x2d, 0x60, 0xff, 0xfe, 0x18, 0x38, 0xa6, 0xee, 0x9e, 0xa8, 0xa3,
	0x5e, 0x14, 0x3d, 0x73, 0x3d, 0x75, 0x34, 0xe8, 0x76, 0xfd, 0xb0, 0xcb, 0x9e, 0x37, 0xaf, 0xb2,
	0xbf, 0x26, 0xf6, 0xae, 0xe1, 0xea, 0x71, 0x6f, 0x92, 0xf6, 0x7c, 0xd9, 0x0d, 0x23, 0x3a, 0x68,
	0x45, 0x47, 0x0a, 0x96, 0x38, 0x75, 0xaf, 0x60, 0x70, 0x7d, 0xff, 0x9b, 0x71, 0xa8, 0x3d, 0x92,
	0xa1, 0xdf, 0x51, 0x69, 0xf6, 0x9d, 0xf6, 0x61, 0x2b, 0x69, 0xac, 0x13, 0xc3, 0x69, 0xac, 0x4d,
	0x98, 0x29, 0xe7, 0xd8, 0x9b, 0x47, 0xf1, 0x2e, 0x4c, 0xf3, 0x44, 0x35, 0x55, 0xd9, 0xd2, 0x36,
	0x45, 0xe0, 0x50, 0x31, 0xc3, 0xc4, 0xfb, 0x7a, 0x9a, 0x69, 0x3f, 0x53, 0x9c, 0x59, 0x7a, 0x81,
	0x84, 0xc1, 0xe9, 0x77, 0x9c, 0xa8, 0x23, 0x19, 0xc7, 0x9c, 0xd2, 0x36, 0x2c, 0xf1, 0x35, 0xb2,
	0x1d, 0x86, 0x89, 0x07, 0xb0, 0x60, 0x36, 0xb5, 0xc9, 0xe7, 0x96, 0x9c, 0xc9, 0x76, 0xe5, 0x9c,
	0x0d, 0x77, 0x74, 0xbc, 0xa5, 0x33, 0x9f, 0x96, 0x9e, 0xb9, 0x3e, 0xff, 0xe2, 0x18, 0x2c, 0x9b,
	0x17, 0xdd, 0x3f, 0x55, 0xed, 0x41, 0xa6, 0xeb, 0x3d, 0xc5, 0x89, 0xda, 0x0f, 0x07, 0xa7, 0xae,
	0xec, 0x7b, 0x1f, 0x7d, 0xc0, 0x75, 0x0c, 0x48, 0xda, 0xd2, 0x14, 0xcc, 0x20, 0x96, 0xc9, 0x89,
	0x1f, 0x32, 0x82, 0xb3, 0xfd, 0x89, 0x46, 0x90, 0x9b, 0x30, 0x47, 0xfb, 0x53, 0x29, 0x63, 0x78,
	0x91, 0xc8, 0x44, 0x04, 0x71, 0x31, 0x8e, 0x61, 0xbe, 0x5c, 0x41, 0xe2, 0xe7, 0xd0, 0x50, 0x45,
	0x79, 0x38, 0x33, 0xf3, 0x95, 0xa1, 0xca, 0xb1, 0xca, 0xec, 0xd8, 0x02, 0xe2, 0x2a, 0x40, 0xf1,
	0x68, 0x4e, 0xd1, 0x15, 0x14, 0x7e, 0xef, 0x8f, 0x8b, 0xf7, 0x52, 0x35, 0xe3, 0xf1, 0xbb, 0x41,
	0xe8, 0x69, 0xe7, 0x4b, 0xfb, 0xe1, 0xfc, 0xe1, 0x44, 0xd2, 0x6e, 0x38, 0x0b, 0xfe, 0x66, 0x1c,
	0x56, 0xcf, 0x5d, 0x64, 0x17, 0x51, 0x42, 0xbd, 0x8a, 0x29, 0x1d, 0xf2, 0xe3, 0x10, 0x8a, 0x06,
	0x51, 0x2a, 0x47, 0x27, 0x4a, 0xfa, 0xd2, 0x24, 0xf6, 0xce, 0x12, 0xf1, 0x01, 0xd2, 0xc4, 0xab,
	0x30, 0x8f, 0xe9, 0xac, 0xae, 0x5e, 0xa7, 0xe1, 0x66, 0x24, 0x57, 0x20, 0x52, 0x9d, 0x01, 0xe6,
	0xe5, 0x63, 0xb8, 0x9d, 0x55, 0x25, 0x51, 0xdf, 0xcd, 0x4f, 0x3a, 0xf2, 0xf2, 0x77, 0x99, 0x55,
	0x26, 0x51, 0xff, 0xd0, 0xb0, 0xc4, 0xeb, 0x00, 0xd6, 0x06, 0x64, 0xe5, 0xe4, 0x5c, 0xfd, 0x28,
	0xdf, 0x74, 0xfc, 0x5d, 0x58, 0xed, 0xa2, 0x53, 0xe1, 0x26, 0xaa, 0x94, 0x99, 0x41, 0xbd, 0xfb,
	0xcd, 0xbc, 0x39, 0x5e, 0xe6, 0x7a, 0x38, 0xcb, 0xdd, 0x02, 0x51, 0x49, 0xad, 0xf8, 0xab, 0x63,
	0xb0, 0x50, 0xc9, 0x5b, 0x3a, 0x77, 0x81, 0xf9, 0x21, 0x88, 0xa3, 0x20, 0x6a, 0x3f, 0x73, 0xe3,
	0x24, 0xa2, 0x14, 0x02, 0x99, 0x51, 0xeb, 0x5a, 0x1f, 0xb0, 0x88, 0x90, 0x03, 0x42, 0x38, 0x32,
	0xc3, 0x3d, 0xaf, 0xc0, 0x4f, 0x33, 0x15, 0xe6, 0xae, 0x08, 0x1f, 0x38, 0x24, 0x6a, 0xd9, 0x17,
	0xf9, 0x47, 0x63, 0xb0, 0x34, 0x94, 0xe1, 0x25, 0x6e, 0xc3, 0x92, 0x8c, 0xe3, 0x3c, 0x46, 0x40,
	0x3e, 0x39, 0xf5, 0x8e, 0x05, 0x19, 0xc7, 0x26, 0x3e, 0x80, 0x2e, 0xf9, 0x4f, 0xe0, 0x92, 0x39,
	0x27, 0x34, 0x2c, 0x43, 0x2d, 0x6d, 0x8e, 0x1f, 0x6d, 0x55, 0x44, 0xdf, 0x87, 0x55, 0x3f, 0x4a,
	0x47, 0x88, 0x51, 0x81, 0x85, 0x1f, 0xa5, 0x15, 0x11, 0x2e, 0xf5, 0x3f, 0x1e, 0x83, 0xc5, 0x6a,
	0x3a, 0xad, 0xb8, 0x03, 0xf3, 0x7d, 0x3f, 0xf4, 0xfb, 0x83, 0xbe, 0x1b, 0xa8, 0xb0, 0xcb, 0xfd,
	0xd9, 0x3e, 0x90, 0xc2, 0xec, 0x7d, 0xe4, 0x8a, 0x57, 0xa0, 0x1e, 0x44, 0x27, 0x2a, 0x69, 0xcb,
	0xd4, 0x64, 0x35, 0x14, 0x04, 0xdd, 0x28, 0x9c, 0x9c, 0x42, 0x33, 0x11, 0x3f, 0x69, 0xa9, 0x41,
	0x1c, 0xb3, 0x14, 0x4d, 0x41, 0x05, 0x01, 0x1d, 0xa6, 0xb3, 0xfe, 0x51, 0x64, 0xce, 0x93, 0xf2,
	0x13, 0x17, 0xfb, 0xdf, 0x8e, 0x03, 0x90, 0xb9, 0x1a, 0x19, 0xe0, 0xfb, 0xff, 0x16, 0xfd, 0x7b,
	0x5b, 0xf4, 0x47, 0x30, 0x4b, 0xe8, 0x27, 0x54, 0x19, 0xd5, 0xa3, 0x1e, 0x63, 0xc3, 0x47, 0x3d,
	0x46, 0x3b, 0x95, 0xa4, 0xee, 0xf7, 0xc6, 0x61, 0xae, 0xf4, 0xf6, 0x11, 0x4e, 0x69, 0xf5, 0x15,
	0xe3, 0x23, 0xcf, 0x9e, 0xa2, 0x23, 0x3f, 0x61, 0x39, 0xf2, 0x97, 0xa1, 0xde, 0x53, 0x41, 0x4c,
	0xe7, 0x9c, 0xa9, 0xa1, 0x6a, 0x9a, 0x80, 0xa7, 0x9c, 0xdf, 0x83, 0x95, 0x44, 0x75, 0x55, 0xa8,
	0x30, 0x3f, 0xba, 0xc0, 0xb1, 0x8f, 0x57, 0xf0, 0x1e, 0x1a, 0x89, 0x6b, 0xd0, 0x88, 0x03, 0xd9,
	0x56, 0xbd, 0x28, 0xf0, 0x54, 0xc2, 0x61, 0x35, 0x9b, 0x24, 0xde, 0x85, 0x99, 0x28, 0xa6, 0x9d,
	0x53, 0x3a, 0xb0, 0xb0, 0x5a, 0xa9, 0x60, 0xaa, 0x32, 0xc7, 0xa0, 0x4c, 0x8c, 0x72, 0x1c, 0xe6,
	0xcb, 0x0d, 0x70, 0xae, 0x7d, 0x2a, 0x96, 0x7f, 0x14, 0x7e, 0x4c, 0x79, 0x14, 0xf1, 0x94, 0x40,
	0x91, 0xc7, 0xb4, 0x1c, 0xff, 0x9b, 0xa8, 0xc6, 0xff, 0xde, 0x84, 0x45, 0x5e, 0xb2, 0x16, 0x20,
	0x3e, 0xbc, 0x4d, 0xf4, 0xdd, 0x1c, 0xfa, 0x18, 0xe6, 0x4c, 0xf6, 0x5d, 0x26, 0xb5, 0x5b, 0x33,
	0x85, 0xdf, 0xf5, 0xe6, 0x39, 0x1d, 0xc7, 0x3c, 0x22, 0x96, 0xa2, 0x0e, 0xb3, 0xb1, 0x45, 0xda,
	0x78, 0x0a, 0x4b, 0x43, 0x90, 0x11, 0x0d, 0x7e, 0xdb, 0xee, 0x30, 0x76, 0xb2, 0xa0, 0x25, 0x3c,
	0x1c, 0x9b, 0xf8, 0xbd, 0x31, 0x58, 0x19, 0xd5, 0x91, 0xad, 0x43, 0xc8, 0x63, 0xa5, 0x43, 0xc8,
	0x6b, 0x30, 0xdd, 0x89, 0xa2, 0x8c, 0x63, 0x13, 0x75, 0x87, 0x9f, 0xc4, 0x5d, 0xa8, 0xe5, 0x33,
	0xd1, 0x44, 0x25, 0xa6, 0x52, 0x7a, 0x81, 0x93, 0xe3, 0xb8, 0x08, 0x6f, 0x41, 0xc3, 0x2a, 0xe2,
	0x79, 0xcd, 0x68, 0x76, 0x01, 0x27, 0x61, 0xf2, 0x20, 0x1a, 0xb1, 0xce, 0xfc, 0xe1, 0xe7, 0xbd,
	0xd7, 0x61, 0x46, 0x79, 0x7e, 0x56, 0x44, 0xa7, 0xa6, 0xf5, 0xe3, 0xcb, 0x0e, 0xb7, 0x5d, 0x86,
	0xba, 0x9f, 0xba, 0xb1, 0x1f, 0x86, 0xca, 0x33, 0xab, 0x74, 0x3f, 0x3d, 0xc0, 0x67, 0xfb, 0x50,
	0xd5, 0xcc, 0x05, 0x87, 0xaa, 0x6a, 0x23, 0x0e, 0x55, 0x99, 0xb3, 0x53, 0xf5, 0xf3, 0xcf, 0x4e,
	0x41, 0xe5, 0xec, 0xd4, 0x26, 0x34, 0xa2, 0xc4, 0xef, 0xfa, 0xa1, 0x44, 0xad, 0x14, 0x7e, 0x00,
	0x43, 0xda, 0x2b, 0x9d, 0xfa, 0x9f, 0x1d, 0x3a, 0xf5, 0x6f, 0x76, 0x97, 0xd2, 0x68, 0x90, 0xb4,
	0x4d, 0x90, 0xc1, 0xec, 0x2e, 0xb5, 0x90, 0x98, 0x5b, 0x8a, 0xf9, 0x72, 0xc8, 0xaf, 0x27, 0xd3,
	0x5e, 0x26, 0x39, 0x2f, 0x5f, 0x1b, 0x0a, 0x7e, 0xd6, 0x63, 0x49, 0xcf, 0xf3, 0xda, 0xf0, 0xa4,
	0xcd, 0x45, 0x4c, 0xdd, 0x2b, 0x08, 0xe2, 0x12, 0xa0, 0x3f, 0x83, 0xfb, 0xab, 0x4b, 0xc8, 0x9c,
	0xd1, 0xcf, 0x7b, 0x5e, 0x2a, 0x5e, 0x87, 0x85, 0x58, 0x85, 0x1e, 0x9d, 0xd5, 0xa4, 0x5d, 0x22,
	0x4a, 0x8b, 0x98, 0x63, 0xf2, 0x01, 0x6d, 0x16, 0xdd, 0x84, 0xb9, 0x9e, 0x4c, 0xdd, 0x44, 0xc9,
	0x36, 0xd9, 0x0e, 0xf2, 0xfa, 0x67, 0x7b, 0x32, 0x75, 0x0c, 0x8d, 0x7b, 0xcc, 0x29, 0x00, 0x9e,
	0x81, 0x47, 0xe2, 0x77, 0x9a, 0xcc, 0x3e, 0x83, 0x86, 0x1f, 0x66, 0xaa, 0x9b, 0xc8, 0x7c, 0x32,
	0xb3, 0xf3, 0x79, 0x0b, 0x6d, 0x7b, 0x05, 0xca, 0xb1, 0x45, 0xf8, 0xcd, 0x1f, 0xc3, 0xea, 0x48,
	0xac, 0x39, 0xa4, 0x37, 0x76, 0xee, 0x21, 0xbd, 0x6f, 0x00, 0x0e, 0x12, 0xd5, 0x51, 0x89, 0x0a,
	0xdb, 0xea, 0xfc, 0x23, 0x7a, 0x1b, 0x50, 0x6b, 0xcb, 0x4c, 0x75, 0x8b, 0xf3, 0x57, 0xf9, 0x73,
	0xfe, 0x61, 0x13, 0xe5, 0xfc, 0x57, 0x32, 0x11, 0x93, 0xc3, 0x73, 0xca, 0x33, 0x58, 0xa8, 0x1c,
	0x41, 0x11, 0x6f, 0x83, 0x48, 0x7b, 0xd1, 0x89, 0x5b, 0x0e, 0x18, 0xd3, 0xa8, 0x5c, 0xd4, 0x9c,
	0xfb, 0x56, 0xd0, 0x58, 0xaf, 0x8c, 0x11, 0xdd, 0x19, 0x04, 0x41, 0x31, 0xe5, 0xd4, 0x9c, 0x59,
	0x4d, 0x7d, 0x30, 0x08, 0x02, 0x3d, 0xe7, 0xf0, 0xcb, 0xfe, 0xee, 0x38, 0x2c, 0x0d, 0x9d, 0x9f,
	0x39, 0xd7, 0x80, 0x5f, 0x83, 0x99, 0x18, 0x73, 0xf5, 0xdb, 0xd5, 0x55, 0xe5, 0x74, 0xac, 0x92,
	0x96, 0x6a, 0x8b, 0x57, 0xa1, 0xde, 0x97, 0xa7, 0xee, 0xd1, 0x20, 0x49, 0xb3, 0x6a, 0xba, 0x6b,
	0xad, 0x2f, 0x4f, 0xb7, 0x35, 0x43, 0xdc, 0x83, 0xa5, 0xbe, 0xea, 0x47, 0xc9, 0x99, 0x9b, 0x66,
	0x51, 0x62, 0x6f, 0x15, 0x59, 0x49, 0x8d, 0x84, 0x68, 0x69, 0x00, 0x2e, 0xb7, 0xdf, 0x81, 0xe5,
	0x63, 0x99, 0x9c, 0xb9, 0x47, 0x67, 0x6e, 0xa2, 0xfa, 0x91, 0x36, 0x06, 0x9e, 0x97, 0xf0, 0xba,
	0x69, 0x51, 0xb3, 0xb6, 0xcf, 0x1c, 0x64, 0xe8, 0x8a, 0x10, 0xd7, 0x60, 0xd6, 0xc0, 0xf1, 0x34,
	0x3e, 0xef, 0x8f, 0x13, 0x0e, 0x4f, 0xe3, 0xbf, 0x0a, 0xf3, 0x06, 0xc1, 0x06, 0x96, 0x5d, 0x78,
	0xc2, 0x3c, 0x44, 0x1a, 0xd7, 0xd3, 0x3f, 0x18, 0x87, 0x49, 0x27, 0x0a, 0xd4, 0x77, 0xea, 0xb6,
	0xd5, 0x19, 0x7f, 0xe2, 0xa5, 0xe7, 0x47, 0x27, 0x87, 0x97, 0x69, 0x25, 0x33, 0x3a, 0x75, 0x91,
	0x19, 0x9d, 0xbe, 0x68, 0x17, 0x76, 0xa6, 0x62, 0x2d, 0xf5, 0x3a, 0xa0, 0xd8, 0x76, 0x6e, 0xd6,
	0x70, 0xd4, 0xdb, 0x24, 0x6d, 0x89, 0xf8, 0x92, 0x02, 0xda, 0x7a, 0xf7, 0x38, 0xea, 0x30, 0x47,
	0x54, 0xda, 0x78, 0xf7, 0xb4, 0xed, 0x38, 0x1a, 0xf8, 0x41, 0xe6, 0xe6, 0xf7, 0x18, 0xcc, 0xe0,
	0xf3, 0x9e, 0x19, 0x74, 0xff, 0x6d, 0x0c, 0x1a, 0xd6, 0x49, 0x9c, 0x73, 0x3b, 0x95, 0x5e, 0x02,
	0xe3, 0xa6, 0x97, 0x99, 0xc7, 0xe8, 0x89, 0x6b, 0x7a, 0xc2, 0x3e, 0x31, 0x9d, 0xb6, 0xa3, 0x38,
	0x1f, 0x33, 0xf8, 0xc0, 0x87, 0x85, 0x7b, 0xc5, 0x36, 0x16, 0x2d, 0x81, 0x66, 0x35, 0x31, 0xdf,
	0xc2, 0x7a, 0x0d, 0xe6, 0xf1, 0x7c, 0x75, 0x81, 0xe2, 0x53, 0xfd, 0x48, 0xcd, 0x61, 0xb7, 0x01,
	0x43, 0xba, 0xae, 0x8c, 0xfd, 0x02, 0x49, 0x7d, 0x62, 0x41, 0x33, 0xb6, 0x62, 0xdf, 0x60, 0xf9,
	0x1b, 0xff, 0x57, 0x0d, 0x66, 0xed, 0x73, 0x33, 0xe7, 0x7e, 0xe4, 0xfb, 0x79, 0xda, 0x17, 0x06,
	0x5c, 0x31, 0xfb, 0xb2, 0x48, 0x33, 0x31, 0x3b, 0xb0, 0xad, 0xb3, 0xb0, 0xfd, 0xb5, 0x9f, 0xf5,
	0xf6, 0x3d, 0x19, 0x6b, 0x55, 0x18, 0x4e, 0x35, 0x07, 0x36, 0xf9, 0x49, 0xcf, 0x21, 0x2a, 0x6c,
	0x27, 0x67, 0x71, 0xc6, 0xee, 0x84, 0x79, 0xd4, 0xe6, 0xc9, 0xf7, 0x62, 0x4c, 0x93, 0xe6, 0x2b,
	0x51, 0x7c, 0x2f, 0x7e, 0x9a, 0x04, 0x78, 0x09, 0x82, 0x17, 0xbb, 0xa6, 0x7b, 0x45, 0x09, 0x62,
	0xa6, 0xf9, 0x12, 0x04, 0x2f, 0xde, 0xcd, 0x19, 0x1a, 0xed, 0xc1, 0x55, 0x99, 0xa6, 0x2a, 0x31,
	0x69, 0x14, 0xe9, 0xa0, 0x8f, 0x83, 0x9e, 0x8e, 0x83, 0x16, 0xa7, 0x7f, 0x37, 0x5f, 0x3c, 0xdf,
	0xbc, 0xbc, 0x65, 0x90, 0x3b, 0x0c, 0xe4, 0x53, 0xa1, 0xda, 0x8e, 0x5e, 0x96, 0xe7, 0x31, 0x93,
	0x40, 0x3c, 0x86, 0x35, 0xdd, 0x82, 0x98, 0x87, 0xe6, 0xc5, 0x71, 0x12, 0x1d, 0xfb, 0x1e, 0x99,
	0x56, 0x9c, 0x8c, 0x29, 0xd3, 0xa7, 0x45, 0x88, 0xbd, 0xdd, 0x83, 0x03, 0x06, 0xec, 0x79, 0xce,
	0x0a, 0xcb, 0xed, 0x15, 0x62, 0x7b, 0x9e, 0xf8, 0x04, 0x16, 0x2c, 0x7d, 0x38, 0xee, 0x70, 0xe6,
	0xa6, 0x54, 0x9a, 0x42, 0x91, 0x1e, 0x7e, 0xce, 0x7c, 0xa1, 0x02, 0x47, 0xec, 0x7b, 0xb0, 0xa2,
	0x2b, 0xc8, 0x0e, 0x65, 0x63, 0xc8, 0x90, 0x77, 0x1c, 0x7c, 0xcf, 0x8e, 0x60, 0x63, 0xe8, 0xf0,
	0x23, 0x58, 0xe7, 0x8d, 0xe5, 0x21, 0x21, 0x9a, 0xf6, 0x57, 0x89, 0x5d, 0x95, 0xbb, 0xc5, 0x27,
	0x10, 0x33, 0x85, 0x5b, 0xc7, 0x28, 0xc0, 0x5b, 0x0f, 0x4c, 0xff, 0x52, 0x9d, 0x21, 0xf2, 0xbc,
	0x5d, 0x90, 0xb9, 0xef, 0xbb, 0x0b, 0x32, 0xff, 0x3d, 0x76, 0x41, 0x16, 0xbe, 0xc7, 0x2e, 0xc8,
	0xe2, 0xf7, 0xdb, 0x05, 0x59, 0x3a, 0x6f, 0x17, 0xe4, 0x4d, 0x58, 0xa4, 0x70, 0xb2, 0x05, 0xa6,
	0xb5, 0xc6, 0x02, 0xd1, 0x5f, 0xb6, 0x1b, 0xb2, 0x7c, 0xde, 0x6e, 0xc8, 0x6d, 0x58, 0x1a, 0x0a,
	0xb8, 0xe3, 0x16, 0x03, 0xaa, 0x2e, 0x85, 0xda, 0xcf, 0xd9, 0x05, 0x58, 0xfd, 0x21, 0xbb, 0x00,
	0x6b, 0x3f, 0x74, 0x17, 0x60, 0xfd, 0xa5, 0xbb, 0x00, 0x7f, 0x78, 0x0d, 0x16, 0x2a, 0xe7, 0xae,
	0x4b, 0xe7, 0xf2, 0xc7, 0x2e, 0x38, 0x97, 0xff, 0x21, 0xcc, 0x9d, 0xa8, 0xa3, 0x34, 0x6a, 0x3f,
	0x53, 0x19, 0x82, 0xc7, 0x8b, 0x6c, 0xe0, 0xaf, 0x0d, 0x43, 0x4b, 0xcc, 0xe6, 0x30, 0x2d, 0x76,
	0x17, 0x56, 0x03, 0xbf, 0xad, 0xc2, 0x94, 0x93, 0x4e, 0xf2, 0x80, 0x37, 0x99, 0xe6, 0x65, 0x66,
	0x3e, 0xb0, 0xe3, 0xde, 0xc3, 0x21, 0xa5, 0xc9, 0x11, 0x21, 0xa5, 0xef, 0xbf, 0x53, 0x79, 0x17,
	0x66, 0xb3, 0x20, 0xc5, 0x64, 0x45, 0x1c, 0x39, 0xb4, 0x5d, 0x89, 0xa9, 0x02, 0x87, 0xfb, 0x2d,
	0x3d, 0xd6, 0x74, 0x31, 0x9c, 0x06, 0x83, 0x70, 0x1c, 0xbd, 0x0b, 0xfa, 0x31, 0x1f, 0x6c, 0x33,
	0x45, 0x3a, 0xf3, 0xe1, 0x7e, 0x8b, 0x07, 0x9b, 0x03, 0x04, 0x31, 0x43, 0x74, 0x90, 0x2a, 0x37,
	0x50, 0x59, 0xea, 0x1a, 0x4b, 0x4b, 0xc1, 0xfa, 0xf9, 0x41, 0xaa, 0xf6, 0x55, 0x96, 0xde, 0x67,
	0x83, 0xbb, 0x0f, 0x37, 0x6d, 0x54, 0xc9, 0x14, 0xb4, 0x65, 0xbb, 0xc7, 0x06, 0x81, 0x3c, 0x88,
	0xcd, 0xa0, 0x90, 0xb4, 0xac, 0xc2, 0x8e, 0xc6, 0xe1, 0x7b, 0xdf, 0x80, 0x85, 0x4e, 0x94, 0x9c,
	0xc8, 0xc4, 0xfb, 0xf8, 0x3d, 0x37, 0x8b, 0x3e, 0xf8, 0xe0, 0x1e, 0x4f, 0xac, 0xf3, 0x39, 0xf9,
	0x50, 0x53, 0xc5, 0x6d, 0x98, 0xc5, 0xdb, 0x59, 0xcc, 0xa6, 0x59, 0xe5, 0x66, 0x92, 0x86, 0x66,
	0x9a, 0x3d, 0xb3, 0xb7, 0x61, 0xee, 0x24, 0xd1, 0xbd, 0xc3, 0x80, 0x2b, 0x07, 0x2a, 0x66, 0x91,
	0x6b, 0xd0, 0x9f, 0xc2, 0x5a, 0x5f, 0x9e, 0x52, 0x48, 0x0c, 0xfb, 0xa8, 0xcc, 0x32, 0xd5, 0x8f,
	0xb3, 0xa1, 0xc3, 0x13, 0x2b, 0x0c, 0xdb, 0xd7, 0xa8, 0x2d, 0x06, 0x89, 0xfb, 0xb0, 0xd1, 0x8d,
	0x92, 0x68, 0x90, 0xf9, 0xa1, 0xd2, 0x6b, 0xaa, 0x20, 0xeb, 0xb9, 0x59, 0x2f, 0x51, 0x69, 0x2f,
	0x0a, 0xbc, 0x6a, 0xda, 0x54, 0x33, 0x87, 0x3e, 0x44, 0xe4, 0xa1, 0x01, 0x6a, 0xcb, 0xc7, 0x99,
	0x94, 0x9e, 0x3a, 0x56, 0x41, 0xa4, 0xd7, 0x9c, 0xda, 0xc7, 0xe6, 0x34, 0x71, 0xe2, 0xed, 0x1a,
	0xd6, 0x97, 0xea, 0x4c, 0x48, 0xb8, 0xc2, 0xd3, 0x2b, 0x26, 0x51, 0xe6, 0x93, 0x95, 0x99, 0x1f,
	0x28, 0xf5, 0x64, 0xfb, 0xea, 0x8b, 0xe7, 0x9b, 0x1b, 0x94, 0x00, 0x8b, 0x29, 0x95, 0x3c, 0x92,
	0xcc, 0xdc, 0xe2, 0x70, 0x7e, 0x33, 0xa6, 0x57, 0x56, 0x78, 0xd6, 0x56, 0x8e, 0x1f, 0xb6, 0x23,
	0xbc, 0xc4, 0x86, 0xf7, 0x74, 0x4c, 0x56, 0xdf, 0x9a, 0x39, 0x34, 0x44, 0x6c, 0xde, 0xd2, 0x49,
	0x2d, 0xc9, 0x68, 0x90, 0x75, 0xa3, 0x92, 0xa4, 0xb0, 0x25, 0x9f, 0x30, 0x3b, 0x97, 0x2c, 0xce,
	0x27, 0xf1, 0x1d, 0x1c, 0xc6, 0xbd, 0x9a, 0x37, 0x1b, 0x66, 0x44, 0x15, 0x3b, 0x79, 0xf2, 0x2d,
	0xde, 0xd8, 0x83, 0xb7, 0x4b, 0xb9, 0x96, 0x1f, 0x94, 0x72, 0x7a, 0xf9, 0x65, 0x7e, 0x51, 0x18,
	0x9c, 0xe1, 0x75, 0x53, 0x96, 0x2f, 0x94, 0x8a, 0xad, 0xbc, 0x12, 0xd1, 0xe3, 0xcb, 0x2d, 0xbe,
	0xb9, 0x7b, 0x08, 0x8d, 0x61, 0xcd, 0x54, 0x92, 0x76, 0xa8, 0xcc, 0xbe, 0xff, 0x13, 0x46, 0x68,
	0xb3, 0x68, 0xab, 0xc0, 0x5b, 0x36, 0x72, 0xf1, 0x35, 0xfb, 0x5b, 0xd1, 0x7d, 0x6c, 0x47, 0x61,
	0x2e, 0x5a, 0xa4, 0xa8, 0x61, 0xa6, 0x16, 0x67, 0xc9, 0xa5, 0x9c, 0x57, 0xce, 0x0b, 0xa4, 0x7d,
	0x3f, 0x7c, 0xc6, 0x79, 0x72, 0xf6, 0x6e, 0x62, 0xa6, 0x52, 0x6d, 0x0a, 0x39, 0x79, 0x9c, 0xc3,
	0x49, 0x87, 0x44, 0xb4, 0xce, 0x6e, 0xe5, 0xbd, 0x09, 0xb7, 0x5b, 0xf3, 0xb3, 0x5b, 0x79, 0x4f,
	0xb2, 0x8a, 0x6f, 0x6c, 0x91, 0xdb, 0xf1, 0x4f, 0x5d, 0x19, 0xa8, 0x24, 0xc3, 0x8c, 0xf0, 0xbc,
	0xf8, 0xc6, 0x22, 0x3d, 0xf0, 0x4f, 0xb7, 0x34, 0x57, 0x3c, 0x81, 0x57, 0xf3, 0xee, 0x81, 0xc2,
	0x56, 0x6b, 0x17, 0x86, 0x8c, 0x8e, 0xe7, 0xd6, 0x9c, 0xeb, 0xa6, 0xab, 0x10, 0xd4, 0x34, 0xfc,
	0x4e, 0x01, 0x14, 0x2d, 0x78, 0xdd, 0x64, 0x42, 0x0f, 0xc2, 0x2c, 0x19, 0xa4, 0x99, 0xf2, 0x68,
	0xa3, 0x3e, 0x94, 0x41, 0x49, 0x25, 0x25, 0x8f, 0xdf, 0x64, 0xf4, 0x53, 0x03, 0xde, 0x63, 0xac,
	0xad, 0xf4, 0x0b, 0xb8, 0x6e, 0xb2, 0xfa, 0x06, 0x41, 0xe6, 0x77, 0x64, 0x5b, 0x2f, 0x06, 0x75,
	0x77, 0x57, 0x61, 0x66, 0xf6, 0xed, 0xaf, 0x60, 0x11, 0x37, 0x39, 0xc1, 0xaf, 0xc0, 0x6d, 0x95,
	0x60, 0x62, 0x1f, 0x6e, 0xa8, 0xb0, 0x13, 0x25, 0xed, 0x0b, 0x95, 0x5d, 0x45, 0x65, 0xd7, 0x18,
	0x79, 0xbe, 0xb6, 0xa2, 0xea, 0x69, 0x09, 0x4e, 0x09, 0x72, 0xb8, 0x3e, 0xa7, 0x53, 0xb7, 0x79,
	0xd5, 0xeb, 0x4e, 0x47, 0xf9, 0x71, 0x87, 0xc8, 0xc5, 0x5c, 0x30, 0xbc, 0xa3, 0xb1, 0x1d, 0x25,
	0x29, 0xee, 0xf3, 0xe0, 0x21, 0xdb, 0xba, 0x33, 0x87, 0xe4, 0x9d, 0x28, 0x49, 0x1f, 0x24, 0x51,
	0x5f, 0xfc, 0x02, 0x5e, 0x31, 0xb8, 0xe8, 0x99, 0xaf, 0xf8, 0x16, 0xcb, 0xc1, 0x91, 0x17, 0xf5,
	0xa5, 0x1f, 0xd2, 0x81, 0xda, 0x9a, 0x73, 0x89, 0x85, 0x10, 0xf2, 0x20, 0x4a, 0x5a, 0x39, 0x40,
	0xec, 0xc0, 0x06, 0xdf, 0x58, 0xc3, 0x1b, 0x06, 0x7a, 0x1c, 0xbb, 0x3e, 0x1f, 0xd0, 0xbc, 0x51,
	0x36, 0x6f, 0x6b, 0x0c, 0xa5, 0xcd, 0x83, 0xaf, 0xd5, 0xd1, 0x1e, 0x9d, 0xd2, 0xdc, 0x83, 0x2b,
	0x15, 0x25, 0x9c, 0x60, 0x69, 0xf4, 0xdc, 0x2c, 0xeb, 0xb9, 0x54, 0xd2, 0x43, 0xf9, 0x96, 0xac,
	0xea, 0x77, 0xe0, 0x52, 0x45, 0x55, 0x9a, 0x46, 0x46, 0xcd, 0xab, 0xa8, 0xe6, 0xfa, 0x8b, 0xe7,
	0x9b, 0x6b, 0x2d, 0x5b, 0x43, 0xab, 0xf5, 0x84, 0xc4, 0x47, 0x17, 0xb4, 0xa5, 0x35, 0xa0, 0xf6,
	0xcf, 0xa0, 0x69, 0xb4, 0xd3, 0x5c, 0xe6, 0x87, 0x79, 0x7e, 0xc8, 0x6b, 0x95, 0x03, 0x23, 0x0c,
	0xc4, 0xb9, 0x6c, 0x2f, 0x34, 0x19, 0x22, 0x8f, 0x60, 0xd3, 0x68, 0xc0, 0xbb, 0xb5, 0xcc, 0x39,
	0x3a, 0x4b, 0xd1, 0xeb, 0x95, 0x4b, 0xb5, 0x18, 0xbf, 0xe7, 0x05, 0x66, 0x4e, 0x2a, 0xd4, 0x7d,
	0x02, 0xab, 0xc5, 0xfa, 0x85, 0xc7, 0x18, 0xee, 0x21, 0xbe, 0x51, 0xc9, 0x56, 0xc9, 0x51, 0x38,
	0x4a, 0x95, 0xb9, 0x7d, 0xac, 0x10, 0x46, 0xa9, 0x5b, 0x95, 0xcd, 0x9e, 0x9c, 0x8d, 0xf8, 0xd7,
	0x08, 0x4f, 0x09, 0x15, 0xfd, 0xc8, 0x53, 0xcd, 0x37, 0xa9, 0x4f, 0xe5, 0xd4, 0x47, 0x91, 0x87,
	0x4b, 0x6e, 0x63, 0xa1, 0x29, 0xe9, 0x5b, 0xf5, 0xa3, 0x5f, 0xfb, 0xcd, 0xdb, 0xf6, 0x3e, 0x3d,
	0x9d, 0x8c, 0xbe, 0xaf, 0x19, 0x16, 0x1e, 0x81, 0x6e, 0xec, 0xb7, 0x9f, 0xa9, 0xa4, 0xf9, 0x96,
	0x8d, 0x47, 0xe4, 0x01, 0x32, 0xf4, 0x0a, 0x96, 0xf1, 0x5d, 0xbf, 0x63, 0xd0, 0x6f, 0xdb, 0xd6,
	0xeb, 0x73, 0xbf, 0xc3, 0xd8, 0x57, 0x61, 0xbe, 0xdb, 0x39, 0x6b, 0xcb, 0x0c, 0x1d, 0x58, 0x3d,
	0x61, 0xbe, 0xc3, 0x77, 0x13, 0x21, 0x75, 0x2b, 0xf6, 0xbf, 0xc4, 0xe8, 0xf4, 0x92, 0x85, 0x62,
	0xcf, 0xfb, 0x0e, 0xad, 0x89, 0x73, 0x20, 0x65, 0xa1, 0xea, 0x69, 0x25, 0x51, 0x69, 0x96, 0xf8,
	0xed, 0xac, 0xf4, 0x7d, 0x2e, 0x06, 0x22, 0xf4, 0xf0, 0x7e, 0x97, 0x0e, 0x80, 0x1a, 0x94, 0xf5,
	0xa9, 0x3b, 0x0c, 0xa1, 0xbd, 0x0a, 0x56, 0x82, 0xb3, 0x02, 0xc5, 0x22, 0x9a, 0xef, 0x99, 0xbd,
	0x0a, 0xe2, 0xe9, 0x09, 0x01, 0x8f, 0x50, 0xab, 0x62, 0x40, 0x63, 0x34, 0x58, 0xcb, 0x34, 0xdf,
	0xb7, 0x06, 0xf4, 0x7d, 0xcf, 0x47, 0xb4, 0xf8, 0x18, 0x56, 0x50, 0x21, 0xc2, 0xf0, 0xc4, 0x27,
	0xde, 0x14, 0xd3, 0xbc, 0x3b, 0xe2, 0x54, 0xad, 0x16, 0xd2, 0x3d, 0x0a, 0x03, 0x5d, 0xc2, 0x85,
	0x77, 0x10, 0x7f, 0xa4, 0xb2, 0x13, 0xa5, 0x42, 0xb2, 0x39, 0xd9, 0x19, 0x7a, 0x8f, 0x14, 0x47,
	0x49, 0xcb, 0x97, 0xbf, 0xdd, 0xc3, 0x30, 0xca, 0x2d, 0x2d, 0xb4, 0x4d, 0x32, 0xda, 0x0c, 0x1d,
	0xa2, 0x04, 0xdd, 0xff, 0x98, 0xda, 0x17, 0xc0, 0xd9, 0x59, 0xca, 0xba, 0x84, 0x7c, 0x1a, 0xe2,
	0x83, 0x52, 0x96, 0x72, 0x94, 0x66, 0x74, 0x6c, 0x58, 0x7c, 0x0a, 0x97, 0x6d, 0xe3, 0xc7, 0x05,
	0xe1, 0xc8, 0x6f, 0xda, 0xfc, 0xd0, 0x3e, 0x9d, 0x59, 0xbc, 0x97, 0xf7, 0x92, 0xed, 0xd9, 0xdf,
	0x84, 0xb4, 0xf9, 0xaa, 0xcd, 0x5c, 0xc3, 0x47, 0xf6, 0xec, 0xcf, 0x47, 0x2c, 0xe9, 0xe6, 0xcd,
	0x5c, 0x49, 0x31, 0xff, 0x62, 0x19, 0x28, 0x71, 0x53, 0xa5, 0xcd, 0x1f, 0xdb, 0xf3, 0xaf, 0x7e,
	0x79, 0x8b, 0x39, 0xe2, 0x77, 0xe1, 0xad, 0xf2, 0x51, 0x1f, 0x12, 0x2f, 0x4f, 0x00, 0x6e, 0x96,
	0xc8, 0x30, 0xed, 0xa8, 0xa4, 0xf9, 0x31, 0x2a, 0xba, 0x65, 0x8b, 0xd0, 0x52, 0xac, 0x3c, 0x13,
	0x1c, 0x32, 0x5e, 0x1c, 0xc0, 0x35, 0x73, 0x39, 0x48, 0x10, 0x75, 0x47, 0xdf, 0xc9, 0xf7, 0x93,
	0xca, 0x91, 0x5e, 0x16, 0xd8, 0x8f, 0xba, 0x23, 0x6e, 0xe5, 0xd3, 0x13, 0x40, 0x3b, 0x88, 0x52,
	0xe5, 0x0e, 0xc2, 0x41, 0xaa, 0x3c, 0xde, 0x40, 0x2a, 0x6a, 0xe9, 0xa7, 0x34, 0x01, 0x20, 0xe6,
	0x29, 0x42, 0x68, 0x2f, 0x29, 0xaf, 0xa3, 0x22, 0xfd, 0xde, 0x24, 0xf1, 0xe7, 0xa7, 0x34, 0x3e,
	0xb1, 0xd3, 0xef, 0x79, 0x89, 0x92, 0x1f, 0x39, 0x2a, 0xd6, 0x71, 0xd9, 0x20, 0x8b, 0x12, 0x5f,
	0x06, 0xcd, 0x9f, 0xd9, 0xeb, 0xb8, 0x43, 0xa6, 0x8a, 0x04, 0x7e, 0x3c, 0xaa, 0x4a, 0xf3, 0x5c,
	0x2d, 0x6e, 0xde, 0x40, 0xc9, 0x63, 0xe5, 0xfe, 0x5a, 0xdb, 0xfa, 0xbc, 0xf0, 0x9f, 0xa2, 0xc2,
	0xf7, 0x87, 0xab, 0x77, 0x97, 0x73, 0xb9, 0x48, 0x76, 0x5f, 0x8b, 0x7e, 0x11, 0xf9, 0x61, 0xfe,
	0x51, 0x5f, 0xc2, 0x8d, 0xf2, 0xfd, 0x90, 0x49, 0x34, 0x88, 0xdd, 0x41, 0x88, 0x2e, 0x06, 0xbf,
	0x31, 0x6d, 0xfe, 0x9c, 0x7c, 0x18, 0x1b, 0xf9, 0xb9, 0x06, 0x3e, 0x45, 0x1c, 0x2b, 0x4f, 0xb5,
	0xef, 0x84, 0xe7, 0x1a, 0xf4, 0xca, 0xfb, 0xf4, 0x8c, 0xf2, 0xa8, 0x7f, 0x41, 0x31, 0x05, 0xa4,
	0x1f, 0x68, 0x32, 0x66, 0x52, 0xff, 0x04, 0x16, 0x6c, 0xa4, 0xf6, 0x47, 0x3f, 0x43, 0xd7, 0x6c,
	0xe9, 0xc5, 0xf3, 0xcd, 0xb9, 0xbd, 0x1c, 0xac, 0x1d, 0xd2, 0xb9, 0x42, 0x56, 0x7b, 0xa4, 0x77,
	0x60, 0xd9, 0x16, 0x35, 0xbb, 0x96, 0x5b, 0x14, 0x06, 0x28, 0xb0, 0xb4, 0x61, 0x99, 0x8a, 0x5f,
	0xe6, 0xcd, 0x26, 0x63, 0x1f, 0xef, 0x22, 0xcb, 0x6f, 0x71, 0xd8, 0x46, 0xbf, 0xe0, 0xd2, 0x8b,
	0xe7, 0x9b, 0xab, 0xdc, 0x19, 0x0f, 0xf6, 0x0e, 0x95, 0xec, 0x9b, 0xcb, 0x1c, 0x4c, 0x8b, 0x6e,
	0x91, 0x60, 0x7e, 0xc7, 0xc3, 0x1e, 0x5c, 0x1f, 0xd5, 0x50, 0x3d, 0x99, 0x78, 0x2a, 0xd4, 0x23,
	0x4f, 0xcf, 0x18, 0x3b, 0x74, 0xaa, 0x79, 0xb8, 0x49, 0x1e, 0x32, 0x0c, 0xa7, 0x90, 0xcf, 0xe1,
	0x5a, 0x49, 0x15, 0xdd, 0x76, 0xc5, 0x7b, 0x9c, 0x7c, 0xf7, 0xe6, 0x2e, 0x6a, 0xba, 0x62, 0xe3,
	0xd0, 0x90, 0x51, 0x82, 0x1e, 0xdf, 0xd9, 0x56, 0xf8, 0x19, 0x14, 0xd5, 0xc1, 0x53, 0xb2, 0xbc,
	0xfc, 0xbf, 0x6f, 0xaf, 0xa0, 0x70, 0xb7, 0x60, 0xaf, 0xe0, 0x72, 0x6c, 0xe1, 0x5f, 0x4c, 0xc0,
	0x0c, 0x2f, 0x15, 0xfe, 0x5f, 0x5c, 0x57, 0x79, 0x05, 0x40, 0x9d, 0xc6, 0x7e, 0xa2, 0xd2, 0x62,
	0x43, 0xaf, 0xce, 0x94, 0x73, 0x92, 0xca, 0xa7, 0x46, 0x26, 0x95, 0x5b, 0xbb, 0x2e, 0xd3, 0xa5,
	0x5d, 0x17, 0x0c, 0x74, 0xa3, 0x9f, 0x97, 0x6f, 0xef, 0xd5, 0x88, 0x60, 0xdf, 0x45, 0x5c, 0xb3,
	0xef, 0x22, 0xb6, 0xaf, 0xb5, 0xae, 0x9f, 0x7f, 0xad, 0xb5, 0xf8, 0x0c, 0xa6, 0xe8, 0x12, 0x61,
	0xc0, 0x1d, 0xd4, 0xcb, 0xd5, 0x1b, 0x0c, 0xef, 0x9c, 0x7f, 0x71, 0x30, 0x09, 0x8a, 0x8f, 0x00,
	0x2f, 0xb1, 0x73, 0xfb, 0x78, 0xdd, 0x70, 0xda, 0x6c, 0xa0, 0xa2, 0xe5, 0xd2, 0xad, 0x77, 0x74,
	0x15, 0xb1, 0xd3, 0xc8, 0xf2, 0xff, 0xd3, 0x8d, 0x8f, 0x01, 0xfe, 0x4c, 0x77, 0xfa, 0xfe, 0x8d,
	0x49, 0x58, 0xa8, 0x5c, 0x30, 0x68, 0xb5, 0xe6, 0x04, 0xb6, 0xe6, 0x06, 0xd4, 0x3a, 0x32, 0x08,
	0x8e, 0x64, 0x7e, 0xdc, 0x33, 0x7f, 0xd6, 0xfa, 0xed, 0x9b, 0xd3, 0xe9, 0x01, 0x6f, 0xbc, 0x4e,
	0x94, 0x95, 0x8b, 0x60, 0x1e, 0xc5, 0x26, 0x34, 0x74, 0x8d, 0x45, 0xe5, 0xe3, 0x3c, 0x44, 0xc2,
	0xad, 0x8e, 0x02, 0x80, 0xa9, 0x3a, 0xd3, 0x36, 0x00, 0xb3, 0x7a, 0x0a, 0x80, 0xf6, 0x17, 0xb9,
	0x21, 0x19, 0xa0, 0x5d, 0x44, 0xec, 0x7c, 0x7e, 0x16, 0x98, 0xbb, 0xb9, 0xe9, 0x41, 0xf7, 0x2f,
	0xfc, 0x87, 0xd4, 0x52, 0x8c, 0xa5, 0x8e, 0x14, 0xd4, 0x6a, 0x2e, 0x85, 0x04, 0xeb, 0x52, 0xc8,
	0x0f, 0x61, 0x1a, 0xb3, 0x81, 0x4d, 0x6b, 0x5c, 0x39, 0xef, 0x4a, 0x46, 0x4c, 0x0e, 0x76, 0x18,
	0x2c, 0xde, 0x84, 0x3a, 0xd9, 0x1b, 0x6d, 0xa4, 0x66, 0x8b, 0x03, 0xee, 0x68, 0xa4, 0xb4, 0x7d,
	0xaa, 0x21, 0x5b, 0x9b, 0xa6, 0x37, 0xa1, 0x8e, 0x47, 0xd7, 0x10, 0x3a, 0x57, 0x40, 0x0f, 0x35,
	0x11, 0xa1, 0xc8, 0xd6, 0xd0, 0x62, 0xff, 0x7e, 0xbe, 0xb4, 0x7f, 0xbf, 0x09, 0x0d, 0xfa, 0x8f,
	0xaa, 0x83, 0x82, 0x1e, 0x40, 0x24, 0xac, 0x8e, 0x77, 0x60, 0xc6, 0x6c, 0xb6, 0x2e, 0x56, 0x3a,
	0x55, 0xb1, 0xcb, 0xe9, 0xcc, 0x94, 0x37, 0x5f, 0x1f, 0xc2, 0xca, 0xa8, 0x6f, 0x2c, 0xea, 0x76,
	0xcc, 0xae, 0xdb, 0x15, 0x98, 0x4a, 0x7b, 0x7a, 0x91, 0x3c, 0xce, 0x97, 0x98, 0xe8, 0x07, 0xd6,
	0xf4, 0xdf, 0x27, 0xa0, 0x61, 0xdd, 0x8e, 0x58, 0x3d, 0xcf, 0x35, 0x36, 0x74, 0x9e, 0x4b, 0x03,
	0x64, 0x26, 0xcd, 0xbe, 0x36, 0x67, 0x1b, 0x6a, 0x12, 0x6f, 0x6a, 0xbf, 0x07, 0x2b, 0x16, 0xa0,
	0xb8, 0x1d, 0x65, 0x02, 0x37, 0xa7, 0x44, 0x81, 0xcc, 0x6f, 0x45, 0xf9, 0x14, 0x2e, 0xdb, 0x12,
	0x7c, 0x69, 0x55, 0x2e, 0x38, 0x89, 0x82, 0xcd, 0x42, 0x90, 0xd6, 0x59, 0xb9, 0xf8, 0xf0, 0xd5,
	0xc2, 0x53, 0x17, 0x5d, 0x2d, 0xbc, 0x0f, 0x57, 0xf1, 0x5a, 0x60, 0x2d, 0x13, 0xf8, 0x1d, 0x85,
	0x4b, 0xc7, 0xd2, 0x3a, 0x64, 0xba, 0xe2, 0xc6, 0x68, 0xf8, 0x23, 0x79, 0xba, 0xcf, 0xe0, 0xd2,
	0x2a, 0x84, 0x5f, 0x1e, 0xc5, 0x2a, 0xe4, 0x97, 0xcf, 0x0c, 0xbf, 0xfc, 0x49, 0xac, 0x42, 0x7a,
	0xb9, 0x6e, 0x20, 0x3c, 0xdf, 0x44, 0x21, 0x48, 0x7a, 0x10, 0xef, 0xc0, 0xb2, 0xcc, 0x5c, 0xbd,
	0x76, 0xce, 0x83, 0x8f, 0xda, 0x4e, 0xd4, 0x39, 0x1d, 0x3b, 0x73, 0x54, 0x9a, 0x71, 0xac, 0x51,
	0x2f, 0xfa, 0x87, 0xf2, 0xec, 0xe1, 0x82, 0x3c, 0x7b, 0x6e, 0xe7, 0xbf, 0x37, 0x06, 0xd3, 0xb4,
	0xd6, 0x3b, 0x7f, 0xdf, 0xbb, 0x38, 0xef, 0x33, 0x5e, 0x3a, 0xef, 0xb3, 0x06, 0xd3, 0x7d, 0x19,
	0x0e, 0x64, 0x60, 0xf6, 0xae, 0xe8, 0x69, 0xa4, 0xd1, 0x9f, 0x1c, 0x69, 0xf4, 0x5f, 0x83, 0x79,
	0x04, 0xe5, 0x6b, 0x5a, 0xb6, 0x2c, 0x73, 0x44, 0xe5, 0x05, 0x47, 0xb1, 0x8b, 0xbd, 0x50, 0xb9,
	0x6b, 0x51, 0xbc, 0x0f, 0xab, 0x99, 0x4a, 0xfa, 0xa9, 0x1b, 0x75, 0xf2, 0x70, 0xa0, 0x95, 0x96,
	0x28, 0x90, 0xf9, 0xa4, 0xc3, 0x61, 0x3e, 0x34, 0x19, 0x77, 0x60, 0xd9, 0xdc, 0x0e, 0x19, 0x47,
	0x81, 0xdf, 0x3e, 0xb3, 0x73, 0x12, 0x97, 0x98, 0x75, 0x80, 0x1c, 0xc4, 0x5f, 0x01, 0x90, 0x47,
	0x7a, 0x4d, 0x6a, 0xe5, 0x20, 0xd6, 0x91, 0x82, 0x6c, 0x93, 0xc1, 0x85, 0x5c, 0x2b, 0x83, 0x0b,
	0x99, 0x0f, 0xb5, 0x57, 0x84, 0x89, 0xa9, 0x32, 0x4e, 0xa2, 0xa3, 0x40, 0xf5, 0x09, 0x87, 0x5f,
	0xb9, 0xbd, 0xf6, 0xe2, 0xf9, 0xa6, 0x70, 0x90, 0xbf, 0x75, 0x40, 0x6c, 0x2d, 0xa5, 0xbd, 0x25,
	0xa4, 0xc5, 0x05, 0x0d, 0x4f, 0x9b, 0xf1, 0x45, 0x94, 0x74, 0x63, 0x09, 0xdf, 0x48, 0xcb, 0x44,
	0x9c, 0xec, 0xb9, 0x9e, 0xde, 0x86, 0xf9, 0xd6, 0x59, 0x9a, 0xa9, 0xfe, 0xfd, 0x9d, 0xdd, 0xd6,
	0xd6, 0x97, 0x34, 0x9b, 0xb4, 0x07, 0xc9, 0x71, 0x3e, 0xfc, 0xf1, 0x81, 0xd1, 0xff, 0x71, 0x02,
	0x26, 0xf5, 0x2c, 0xf5, 0xe7, 0xf5, 0x8b, 0x0e, 0xd5, 0x6d, 0xf3, 0xa9, 0xf3, 0x7f, 0xa4, 0x61,
	0xfa, 0xfc, 0x8c, 0xc7, 0x99, 0xe1, 0xad, 0xf4, 0xfc, 0xb6, 0xb1, 0x9a, 0x7d, 0xdb, 0x98, 0x49,
	0xa5, 0xa9, 0x97, 0x7f, 0x27, 0x82, 0xaf, 0x1c, 0x73, 0xad, 0xd3, 0xc4, 0x0d, 0xa6, 0x61, 0x11,
	0xde, 0x60, 0xe7, 0x54, 0xfb, 0x0f, 0x1c, 0x38, 0x6a, 0xf0, 0x29, 0x4b, 0x22, 0xef, 0x72, 0xb4,
	0xe8, 0x32, 0xd4, 0xf9, 0xea, 0x12, 0x9f, 0x2f, 0x5e, 0x71, 0x6a, 0x44, 0xd8, 0xf3, 0x30, 0x61,
	0x16, 0x5d, 0x5c, 0x34, 0x03, 0x44, 0x36, 0xe7, 0xdb, 0x91, 0xa1, 0x0d, 0x00, 0x2e, 0xd1, 0x70,
	0xef, 0x18, 0x07, 0x0d, 0xdd, 0xf2, 0x8c, 0x17, 0x17, 0x63, 0x7d, 0x52, 0x40, 0xdd, 0x11, 0x9a,
	0xa9, 0xdb, 0x09, 0xef, 0x2f, 0x46, 0xce, 0x77, 0xf9, 0xd5, 0x87, 0x17, 0x63, 0x00, 0xc5, 0x1a,
	0xc4, 0xbe, 0x45, 0x7a, 0xac, 0x7a, 0x8b, 0xf4, 0xf7, 0xf9, 0xb1, 0x87, 0x0b, 0x5b, 0xb8, 0xf2,
	0x03, 0x09, 0x53, 0x2f, 0xfd, 0x81, 0x84, 0xe9, 0xef, 0xf2, 0x03, 0x09, 0x33, 0x23, 0x7e, 0x20,
	0x81, 0x3f, 0xf2, 0x2f, 0x2d, 0xc0, 0xac, 0x7d, 0xbd, 0x30, 0x56, 0x8c, 0x6e, 0x12, 0x6b, 0xaa,
	0xc2, 0xcd, 0xb3, 0xc7, 0x74, 0x5b, 0x8e, 0x28, 0x7e, 0xe2, 0x26, 0xc6, 0xdf, 0x87, 0x91, 0xfd,
	0x6a, 0xa6, 0xcb, 0x82, 0xf9, 0x71, 0x9b, 0x03, 0x95, 0xe0, 0xe8, 0x28, 0x1c, 0x67, 0xac, 0xc0,
	0x3c, 0x34, 0x32, 0x61, 0x3b, 0xce, 0x1a, 0x69, 0x47, 0x44, 0x6c, 0x57, 0x3b, 0x97, 0x98, 0xac,
	0xba, 0xda, 0xb9, 0x44, 0x11, 0x4e, 0xc0, 0xfe, 0x62, 0x65, 0xe9, 0xe6, 0xe1, 0x04, 0xdd, 0x61,
	0xf8, 0x74, 0x40, 0xe1, 0x08, 0xa0, 0x7e, 0x0f, 0xf3, 0xb0, 0x8e, 0xed, 0x5b, 0x92, 0xac, 0x50,
	0xea, 0xae, 0xc5, 0xd5, 0x1e, 0x72, 0x11, 0xf0, 0xe1, 0x97, 0xbb, 0x59, 0x94, 0xf7, 0x74, 0xaa,
	0xea, 0x4b, 0x79, 0xb8, 0x87, 0x21, 0x87, 0x91, 0xe9, 0xf4, 0x43, 0xf1, 0xb0, 0xa3, 0x44, 0x86,
	0x1e, 0xcf, 0x5d, 0xa5, 0x78, 0xd8, 0xb6, 0x66, 0xe8, 0x71, 0x60, 0x03, 0x69, 0x87, 0xb6, 0xce,
	0xe9, 0x9c, 0x05, 0x0e, 0x77, 0x68, 0x3f, 0x82, 0x75, 0xc6, 0x5a, 0x83, 0xdb, 0xb5, 0x16, 0x79,
	0xab, 0xc4, 0xde, 0x2d, 0xb8, 0x46, 0x2e, 0xff, 0xa8, 0xb2, 0xcb, 0x6f, 0xb6, 0xea, 0x0d, 0xbb,
	0xe4, 0xee, 0x97, 0x02, 0x57, 0x34, 0x36, 0x68, 0x98, 0xce, 0x96, 0x03, 0x57, 0x38, 0xf4, 0x68,
	0xa4, 0x7e, 0x09, 0x37, 0x8a, 0x50, 0x17, 0x67, 0x07, 0xb0, 0xcb, 0x5e, 0xb9, 0xc6, 0xa2, 0xee,
	0x6c, 0xe6, 0x81, 0x2f, 0xca, 0x13, 0xe0, 0x1f, 0x27, 0x29, 0xae, 0xb5, 0x78, 0x04, 0x37, 0x0b,
	0x65, 0x9c, 0x32, 0x30, 0x42, 0x1b, 0x2d, 0x1e, 0xaf, 0xe5, 0xda, 0x08, 0x39, 0xac, 0xee, 0x73,
	0xb8, 0x76, 0x5e, 0xd9, 0xf2, 0x0e, 0x48, 0x96, 0xe2, 0xca, 0xc8, 0x92, 0xe5, 0x7d, 0x71, 0x0f,
	0xae, 0x9f, 0x5b, 0xae, 0x5c, 0x13, 0xe5, 0x06, 0x5c, 0x1d, 0x5d, 0xaa, 0x5c, 0xd5, 0x05, 0x65,
	0xca, 0x3d, 0xf4, 0xa5, 0x0b, 0xca, 0x64, 0xbb, 0xe3, 0xe7, 0x96, 0x29, 0xd7, 0x24, 0x2e, 0x2a,
	0x53, 0xae, 0xea, 0x10, 0xde, 0x78, 0x49, 0xb5, 0xe7, 0x2e, 0x1d, 0xe5, 0x1d, 0xdc, 0xbc, 0xa8,
	0xea, 0xd9, 0xab, 0x13, 0x01, 0xdc, 0xe0, 0x71, 0x71, 0x9a, 0x45, 0x1c, 0xbf, 0x31, 0xb1, 0x15,
	0x3a, 0x9a, 0x12, 0xf4, 0x78, 0x93, 0x0e, 0x63, 0xf6, 0x57, 0x28, 0x50, 0xf0, 0xab, 0xc3, 0x08,
	0x03, 0x36, 0x26, 0xbe, 0xf2, 0x20, 0x89, 0xfa, 0xfb, 0x0f, 0x5b, 0x0e, 0x6f, 0xd4, 0xfd, 0x2a,
	0x1b, 0xc1, 0xee, 0xa5, 0xe2, 0xc7, 0xd0, 0xb4, 0x82, 0x78, 0xae, 0x3c, 0x91, 0xc5, 0xca, 0x0f,
	0xcf, 0x4c, 0xe2, 0xef, 0x7e, 0x70, 0x24, 0x6f, 0xeb, 0x44, 0xe6, 0x27, 0x2c, 0xdf, 0x87, 0x55,
	0x6d, 0x01, 0xf3, 0x92, 0xe5, 0x46, 0x70, 0x8d, 0xa6, 0x9a, 0xbe, 0x3c, 0x35, 0xef, 0x32, 0xe6,
	0x6f, 0x0b, 0xae, 0x68, 0x91, 0xd2, 0xd5, 0x5b, 0x28, 0x67, 0xd6, 0x6d, 0xeb, 0x28, 0xba, 0xd1,
	0x97, 0xa7, 0xa5, 0x1b, 0xb8, 0x0e, 0x54, 0x62, 0x7e, 0x31, 0xea, 0x10, 0xde, 0x28, 0x8e, 0x05,
	0x76, 0xfc, 0xa4, 0x5f, 0xd1, 0x96, 0x45, 0xb9, 0x32, 0xda, 0xe1, 0xbb, 0x99, 0x9f, 0x17, 0xd4,
	0xe8, 0x92, 0xda, 0xc3, 0xc8, 0x68, 0xbd, 0xab, 0x17, 0x80, 0xb2, 0xdf, 0x97, 0x6c, 0xee, 0x5d,
	0x5e, 0x48, 0xf0, 0x59, 0xcb, 0x65, 0xc3, 0xd4, 0xa6, 0x9f, 0xaf, 0xbe, 0x14, 0xbf, 0x84, 0xd7,
	0xce, 0x09, 0x69, 0x46, 0x7d, 0x99, 0xf9, 0x6d, 0x72, 0x31, 0x54, 0xca, 0x9b, 0x81, 0x37, 0x46,
	0x06, 0x33, 0x09, 0xea, 0x10, 0x52, 0x7c, 0x03, 0x37, 0x4b, 0x2a, 0x7b, 0xbe, 0xa7, 0xdc, 0x2c,
	0x3a, 0x09, 0xdd, 0xf4, 0x9b, 0x81, 0x4c, 0x94, 0x1f, 0x62, 0xd3, 0xe3, 0xbe, 0xe0, 0xf6, 0xcd,
	0x17, 0xcf, 0x37, 0x37, 0xed, 0xab, 0x91, 0x1e, 0xfa, 0x9e, 0x3a, 0x8c, 0x4e, 0xc2, 0x16, 0x63,
	0x75, 0xe3, 0x97, 0x82, 0x70, 0x43, 0x80, 0x5e, 0x2a, 0x9e, 0x54, 0xbe, 0xc2, 0x7a, 0x9b, 0xeb,
	0x63, 0xae, 0x2e, 0xfd, 0xb2, 0x0b, 0xee, 0x1c, 0xd6, 0x9c, 0x52, 0xf8, 0xa9, 0xd0, 0xb5, 0x97,
	0x3a, 0xfc, 0x53, 0x2f, 0xe2, 0xa7, 0x70, 0xa9, 0xa4, 0x30, 0x4e, 0xfc, 0xbe, 0xd4, 0xde, 0x84,
	0xee, 0x1a, 0x57, 0xe8, 0x02, 0x0b, 0x1b, 0x70, 0x40, 0x7c, 0xdd, 0x3f, 0x78, 0x22, 0xfe, 0xd7,
	0x63, 0x30, 0x57, 0xba, 0x6a, 0xdc, 0xba, 0x60, 0xc4, 0xdc, 0x50, 0x1e, 0xd0, 0x2e, 0xa5, 0xb9,
	0xb6, 0x8a, 0x27, 0x4e, 0x12, 0x62, 0x9e, 0x5e, 0xec, 0x9a, 0x60, 0x28, 0x8a, 0x99, 0xa3, 0x61,
	0x4c, 0x44, 0x34, 0xfe, 0x12, 0x11, 0x6d, 0xf4, 0xd1, 0x74, 0x91, 0xd1, 0xdd, 0x3b, 0x34, 0x21,
	0xd3, 0xba, 0x8b, 0xe6, 0xa0, 0x43, 0xba, 0x74, 0x47, 0xfb, 0x1a, 0xbc, 0xa4, 0x63, 0x28, 0x39,
	0x90, 0x73, 0x4c, 0x25, 0x18, 0x7f, 0x89, 0x03, 0x8b, 0xd5, 0xdb, 0x71, 0xf1, 0x7a, 0x44, 0x5a,
	0x6d, 0x2b, 0x2f, 0xbf, 0xf8, 0x34, 0xb5, 0xcf, 0xc8, 0xad, 0xe5, 0x7c, 0x23, 0x9c, 0x5a, 0xe7,
	0xe5, 0xfe, 0x4f, 0x0d, 0x26, 0x71, 0xfd, 0xf3, 0xe7, 0xb4, 0xd2, 0xb6, 0xef, 0x4b, 0x9d, 0xba,
	0xe0, 0xbe, 0xd4, 0xe9, 0xca, 0x7d, 0xa9, 0x97, 0xa1, 0x8e, 0xe9, 0x15, 0x78, 0x5f, 0x03, 0x07,
	0xdc, 0x34, 0x61, 0x57, 0x66, 0x52, 0xaf, 0xdd, 0xec, 0xdc, 0x0b, 0x5e, 0x6c, 0x37, 0xac, 0x5c,
	0x8a, 0x62, 0x21, 0x5e, 0xb7, 0x17, 0xe2, 0xaf, 0x99, 0x1f, 0x1f, 0xa0, 0xd3, 0xe3, 0xca, 0xe3,
	0xb4, 0x17, 0xba, 0x1f, 0xe3, 0x2b, 0x26, 0xea, 0x82, 0x99, 0xdc, 0x31, 0x9e, 0xb7, 0xf3, 0x67,
	0x3a, 0xc8, 0x6b, 0x72, 0xe5, 0x78, 0x82, 0xae, 0xe7, 0x19, 0x72, 0xba, 0xdc, 0x79, 0x62, 0x9c,
	0xb9, 0xd6, 0xc7, 0xa4, 0xc3, 0xe1, 0x07, 0x73, 0xe6, 0x18, 0x4f, 0xa6, 0xf9, 0x73, 0xb1, 0xc6,
	0x5d, 0xb0, 0xd7, 0xb8, 0xc6, 0x05, 0x70, 0xfb, 0x32, 0x79, 0xa6, 0x30, 0xf3, 0xc0, 0x5c, 0x6d,
	0xa2, 0xc9, 0x8f, 0x0c, 0x55, 0x7c, 0x6a, 0xa2, 0x88, 0x4b, 0x95, 0x5f, 0x00, 0xd1, 0x8d, 0xfd,
	0xf2, 0x10, 0xe2, 0x41, 0xe5, 0x07, 0xcd, 0x04, 0x6a, 0xb9, 0x5a, 0xd6, 0xf2, 0xbd, 0x7e, 0xc7,
	0xec, 0x3d, 0x58, 0xa1, 0x9f, 0xa7, 0x33, 0x3f, 0x3e, 0xc1, 0x9e, 0xc4, 0x72, 0xe1, 0x49, 0x98,
	0x63, 0x72, 0xec, 0x49, 0x98, 0x9c, 0xc2, 0xd8, 0x6f, 0xe3, 0xb5, 0x54, 0x2c, 0x80, 0xe7, 0xf4,
	0x29, 0xa7, 0xf0, 0x80, 0x38, 0x8c, 0x7f, 0x0f, 0x16, 0x3a, 0xf4, 0xdb, 0x85, 0x79, 0xea, 0x50,
	0xe5, 0x94, 0xfe, 0x3c, 0xf1, 0xf3, 0xa4, 0xa1, 0x35, 0x98, 0xe6, 0xc3, 0xe7, 0x94, 0x37, 0xc7,
	0x4f, 0xe2, 0x01, 0xd4, 0xf2, 0x3b, 0x84, 0xd7, 0x2b, 0x51, 0x58, 0xfc, 0x72, 0x33, 0x92, 0x46,
	0x7e, 0x76, 0x2e, 0xab, 0xfb, 0x46, 0xbf, 0x23, 0x29, 0xe4, 0xa0, 0x78, 0x02, 0xa9, 0xf7, 0x3b,
	0x12, 0x83, 0x0d, 0x39, 0x9b, 0x37, 0x42, 0x69, 0x6e, 0xd0, 0x6c, 0xde, 0x02, 0x1d, 0x15, 0xb1,
	0xd8, 0x18, 0x15, 0xb1, 0xf8, 0xe1, 0x81, 0xdb, 0x3f, 0xeb, 0x8f, 0xb9, 0x6d, 0x7c, 0x02, 0x73,
	0xa5, 0xba, 0xf8, 0x01, 0x51, 0xe3, 0xff, 0x3c, 0x0e, 0xf3, 0xe5, 0x9b, 0xe2, 0xcf, 0x4d, 0x65,
	0xbe, 0x0b, 0xab, 0x5d, 0x99, 0x29, 0xbd, 0xa6, 0x18, 0x91, 0x4e, 0xe8, 0x2c, 0x33, 0xf3, 0x6b,
	0x3b, 0x87, 0xf0, 0x36, 0x2c, 0x19, 0x19, 0xca, 0x4d, 0xd2, 0xf8, 0x09, 0xde, 0x74, 0x26, 0x06,
	0x7a, 0x77, 0xf4, 0xf3, 0x41, 0x2b, 0x65, 0x2c, 0x37, 0xcd, 0x24, 0x67, 0x7f, 0x59, 0x70, 0x6e,
	0xa3, 0xd7, 0xa1, 0x96, 0x66, 0x03, 0xad, 0xd4, 0xe7, 0xf8, 0x09, 0x25, 0x40, 0x66, 0x83, 0xf0,
	0xa9, 0xb3, 0xe7, 0xcc, 0x68, 0xe6, 0xd3, 0xc4, 0xd7, 0xb8, 0x6c, 0x90, 0x10, 0x6e, 0xba, 0xc0,
	0x1d, 0x0e, 0x12, 0xc2, 0x69, 0xa6, 0xc6, 0xdd, 0x84, 0x39, 0xc2, 0x55, 0xae, 0x3a, 0x41, 0x7e,
	0xf1, 0x23, 0x42, 0x0b, 0x08, 0x4a, 0x7b, 0x32, 0x51, 0x1e, 0x46, 0xdf, 0xcc, 0xdd, 0x65, 0x83,
	0x24, 0x6c, 0x21, 0xf5, 0x4b, 0x65, 0x7e, 0x5a, 0xe7, 0x8f, 0xc7, 0x41, 0xe4, 0x35, 0xb2, 0x9d,
	0x44, 0xd2, 0x6b, 0xcb, 0x34, 0x13, 0x7b, 0x00, 0x51, 0xdf, 0xa7, 0x5c, 0x2b, 0xba, 0x5a, 0xbb,
	0x71, 0xf7, 0xb6, 0x7d, 0x75, 0x7f, 0x45, 0xe0, 0xce, 0x93, 0xbe, 0x8f, 0x59, 0x57, 0x7c, 0x3e,
	0xad, 0x1e, 0x99, 0xe7, 0xf3, 0xfd, 0xf4, 0xf2, 0x49, 0xa7, 0x89, 0x0b, 0x7e, 0x3e, 0x6a, 0xb2,
	0xe4, 0xf8, 0x6b, 0x77, 0x2b, 0x0a, 0x33, 0xed, 0xd6, 0xb9, 0xa9, 0x0c, 0xfd, 0xcc, 0xff, 0x56,
	0x79, 0x64, 0xfa, 0xf9, 0xb7, 0xe3, 0x0c, 0xbb, 0x65, 0xb8, 0x38, 0x0f, 0x94, 0xe4, 0x54, 0xa8,
	0x2d, 0xe9, 0xb1, 0x22, 0xb9, 0xe9, 0x8a, 0x9c, 0xe1, 0x6a, 0xb9, 0x8d, 0x9f, 0xc1, 0x7c, 0xf9,
	0xeb, 0x5e, 0xd6, 0x8d, 0x6b, 0xc3, 0xdd, 0xf8, 0x43, 0xb8, 0x94, 0x5f, 0xcf, 0xe3, 0xd2, 0x82,
	0xac, 0xf8, 0x2d, 0xa9, 0x26, 0xcc, 0x24, 0x2a, 0x1d, 0x04, 0xd9, 0xfb, 0xf9, 0x6d, 0x3f, 0xf4,
	0x78, 0x63, 0x03, 0x9a, 0x85, 0xd8, 0x17, 0xd1, 0xd1, 0xe1, 0x59, 0xac, 0x1c, 0xba, 0xd4, 0xb9,
	0xac, 0x32, 0xe7, 0x8d, 0x56, 0x59, 0x2f, 0x54, 0xae, 0xc3, 0x6a, 0x21, 0x86, 0x39, 0xe7, 0xac,
	0xef, 0x2e, 0xac, 0x55, 0x19, 0x2f, 0x55, 0xf6, 0x4f, 0xc7, 0xe0, 0xba, 0x25, 0xa4, 0x4e, 0x33,
	0xf3, 0xa4, 0xc7, 0x3d, 0x6b, 0x16, 0x37, 0x61, 0x52, 0x26, 0xdd, 0xf7, 0xf9, 0x36, 0x80, 0x05,
	0xeb, 0x07, 0x48, 0xc2, 0x8e, 0xdf, 0x75, 0x90, 0x29, 0x3e, 0x46, 0xd0, 0x5d, 0x3e, 0x9b, 0xb8,
	0x71, 0x87, 0x92, 0x29, 0xef, 0x98, 0xdf, 0x02, 0xbe, 0x93, 0x1f, 0x83, 0xdf, 0xae, 0xfd, 0xe6,
	0xf9, 0xe6, 0x8f, 0xfe, 0xfa, 0x7f, 0xd9, 0x1c, 0x43, 0xc9, 0xbb, 0x42, 0xa0, 0xe4, 0x3d, 0x5e,
	0x46, 0xe1, 0xff, 0xe2, 0x1a, 0xd2, 0x3e, 0xe0, 0x5f, 0x4f, 0x9a, 0xb5, 0xef, 0x6e, 0x42, 0xc4,
	0x07, 0x37, 0xce, 0xe0, 0x95, 0xa2, 0xe4, 0xe6, 0x3f, 0xcd, 0xfe, 0x3e, 0x85, 0x16, 0x56, 0xa1,
	0x6b, 0x5c, 0x9c, 0x6b, 0x56, 0x71, 0x46, 0xbd, 0xfa, 0xde, 0x8d, 0x0c, 0xae, 0x9c, 0xf3, 0x6a,
	0xae, 0xf0, 0xd7, 0xcb, 0x15, 0x5e, 0xd5, 0x62, 0x98, 0xe2, 0x2d, 0x83, 0x33, 0xd5, 0xb6, 0x54,
	0xfc, 0x56, 0x07, 0xff, 0xbe, 0xaf, 0x01, 0xdf, 0xbd, 0x71, 0x13, 0xae, 0x7f, 0xad, 0x8e, 0x5a,
	0x38, 0x6e, 0x39, 0x92, 0xe0, 0xde, 0x3f, 0x56, 0x61, 0x66, 0x77, 0xaa, 0x9f, 0xc3, 0x8d, 0x8b,
	0x40, 0x2f, 0xed, 0x10, 0xd7, 0x61, 0x73, 0x48, 0x7e, 0x2f, 0xfd, 0x4a, 0x06, 0xbe, 0x67, 0x5e,
	0xf1, 0x33, 0xb8, 0x76, 0x3e, 0xe4, 0xa5, 0x23, 0xe2, 0x1a, 0x5c, 0x1d, 0x92, 0x3e, 0x8c, 0xbe,
	0x48, 0xa3, 0xd0, 0xe8, 0xff, 0x64, 0x44, 0x11, 0x0c, 0xe2, 0xa5, 0xe5, 0x5f, 0x86, 0xa5, 0xaf,
	0xa3, 0xe4, 0x99, 0x4a, 0x5c, 0x67, 0x90, 0x6b, 0x5c, 0x01, 0x61, 0x13, 0x49, 0x89, 0x45, 0x6d,
	0x65, 0x51, 0x6c, 0xb0, 0xab, 0xb0, 0x5c, 0xa2, 0x12, 0xf8, 0xee, 0xdf, 0x1a, 0x83, 0x69, 0xa2,
	0x8b, 0xfb, 0x00, 0x85, 0x36, 0x51, 0xfc, 0xba, 0xca, 0xd0, 0x7b, 0x37, 0x2e, 0x8f, 0xe4, 0xf1,
	0x37, 0x3c, 0x84, 0x86, 0xf5, 0x22, 0x31, 0x84, 0xb5, 0x0a, 0xb5, 0xf1, 0xca, 0x68, 0x26, 0x97,
	0xed, 0xdf, 0x4f, 0x40, 0x3d, 0xef, 0x8f, 0xe2, 0x21, 0x2c, 0x0d, 0x59, 0x2a, 0x51, 0xed, 0xfe,
	0x1b, 0x37, 0x8a, 0x0d, 0xca, 0x73, 0xcd, 0xda, 0x6f, 0xd9, 0x9a, 0xd8, 0x40, 0x89, 0xeb, 0x23,
	0x04, 0xcb, 0x86, 0x6d, 0xa4, 0xee, 0xaa, 0x7d, 0xfb, 0x25, 0xcc, 0x97, 0x8d, 0x95, 0xb8, 0x3a,
	0x42, 0xca, 0x32, 0x6f, 0x1b, 0x9b, 0xe7, 0xf2, 0x59, 0xa5, 0x07, 0x1b, 0xe7, 0x9b, 0x32, 0x71,
	0x7b, 0x94, 0xf8, 0x68, 0x7b, 0xb7, 0x71, 0x81, 0xf1, 0x12, 0x1d, 0xdb, 0xfc, 0x5a, 0x63, 0x5f,
	0xbc, 0x36, 0xe2, 0x05, 0xc3, 0x66, 0x69, 0xe3, 0xf5, 0x97, 0xc1, 0xb8, 0x51, 0xff, 0x64, 0x1c,
	0x16, 0xab, 0xc3, 0x40, 0x0c, 0x60, 0xe3, 0xfc, 0xd1, 0x2d, 0x4a, 0xf3, 0xfb, 0xc5, 0x76, 0x62,
	0xe3, 0xad, 0xef, 0x84, 0xe5, 0x9a, 0x8d, 0xa0, 0x79, 0xde, 0x88, 0x17, 0xb7, 0xce, 0x57, 0x54,
	0xb6, 0x1b, 0x1b, 0x6f, 0x7e, 0x07, 0x24, 0xbf, 0x30, 0x80, 0xf5, 0x73, 0x4c, 0x80, 0x78, 0xe3,
	0x7c, 0x2d, 0x25, 0x33, 0xb2, 0x71, 0xeb, 0xe5, 0x40, 0x7a, 0xdb, 0xf6, 0x95, 0xdf, 0xbc, 0xb8,
	0x3a, 0xf6, 0xef, 0x5e, 0x5c, 0x1d, 0xfb, 0xaf, 0x2f, 0xae, 0xfe, 0xe8, 0x6f, 0xfe, 0xd1, 0xd5,
	0x1f, 0xfd, 0xc1, 0x1f, 0x5d, 0x1d, 0xfb, 0x2d, 0xf3, 0x23, 0xf8, 0x47, 0xd3, 0xf8, 0xe7, 0xde,
	0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x29, 0xc7, 0x4f, 0x67, 0x53, 0x7f, 0x00, 0x00,
}
